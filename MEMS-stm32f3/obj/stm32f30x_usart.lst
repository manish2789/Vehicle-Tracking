   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_usart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.USART_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	USART_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	USART_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c"
   1:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
   2:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ******************************************************************************
   3:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @file    stm32f30x_usart.c
   4:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @author  MCD Application Team
   5:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @version V1.0.1
   6:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @date    23-October-2012
   7:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief   This file provides firmware functions to manage the following
   8:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          functionalities of the Universal synchronous asynchronous receiver
   9:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          transmitter (USART):
  10:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Initialization and Configuration
  11:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + STOP Mode
  12:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + AutoBaudRate
  13:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Data transfers
  14:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Multi-Processor Communication
  15:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + LIN mode
  16:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Half-duplex mode
  17:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Smartcard mode
  18:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + IrDA mode
  19:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + RS485 mode  
  20:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + DMA transfers management
  21:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           + Interrupts and flags management
  22:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *           
  23:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *  @verbatim  
  24:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
  25:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                       ##### How to use this driver #####
  26:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
  27:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       [..]
  28:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE)
  29:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function for USART1 or using RCC_APB1PeriphClockCmd(RCC_APB1Periph_USARTx, ENABLE)
  30:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function for USART2, USART3, UART4 and UART5.
  31:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#)  According to the USART mode, enable the GPIO clocks using
  32:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               RCC_AHBPeriphClockCmd() function. (The I/O can be TX, RX, CTS,
  33:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               or and SCLK).
  34:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Peripheral's alternate function:
  35:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Connect the pin to the desired peripherals' Alternate
  36:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    Function (AF) using GPIO_PinAFConfig() function.
  37:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Configure the desired pin in alternate function by:
  38:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF.
  39:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Select the type, pull-up/pull-down and output speed via
  40:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    GPIO_PuPd, GPIO_OType and GPIO_Speed members.
  41:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Call GPIO_Init() function.
  42:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Program the Baud Rate, Word Length , Stop Bit, Parity, Hardware
  43:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              flow control and Mode(Receiver/Transmitter) using the SPI_Init()
  44:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
  45:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) For synchronous mode, enable the clock and program the polarity,
  46:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              phase and last bit using the USART_ClockInit() function.
  47:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable the NVIC and the corresponding interrupt using the function
  48:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              USART_ITConfig() if you need to use interrupt mode.
  49:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) When using the DMA mode:
  50:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Configure the DMA using DMA_Init() function.
  51:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               (++) Active the needed channel Request using USART_DMACmd() function.
  52:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable the USART using the USART_Cmd() function.
  53:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****           (#) Enable the DMA using the DMA_Cmd() function, when using DMA mode.
  54:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       [..]
  55:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               Refer to Multi-Processor, LIN, half-duplex, Smartcard, IrDA sub-sections
  56:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               for more details.
  57:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  58:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    @endverbatim
  59:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  60:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ******************************************************************************
  61:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @attention
  62:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  63:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  64:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  65:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  66:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * You may not use this file except in compliance with the License.
  67:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * You may obtain a copy of the License at:
  68:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  69:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  70:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  71:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * Unless required by applicable law or agreed to in writing, software 
  72:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  73:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  74:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * See the License for the specific language governing permissions and
  75:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * limitations under the License.
  76:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
  77:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ******************************************************************************
  78:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
  79:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  80:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Includes ------------------------------------------------------------------*/
  81:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #include "stm32f30x_usart.h"
  82:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #include "stm32f30x_rcc.h"
  83:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  84:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
  85:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
  86:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
  87:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  88:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART 
  89:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief USART driver modules
  90:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
  91:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
  92:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  93:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private typedef -----------------------------------------------------------*/
  94:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private define ------------------------------------------------------------*/
  95:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
  96:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART CR1 register clear Mask ((~(uint32_t)0xFFFFE6F3)) */
  97:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define CR1_CLEAR_MASK            ((uint32_t)(USART_CR1_M | USART_CR1_PCE | \
  98:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                                               USART_CR1_PS | USART_CR1_TE | \
  99:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                                               USART_CR1_RE))
 100:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 101:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART CR2 register clock bits clear Mask ((~(uint32_t)0xFFFFF0FF)) */
 102:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define CR2_CLOCK_CLEAR_MASK      ((uint32_t)(USART_CR2_CLKEN | USART_CR2_CPOL | \
 103:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                                               USART_CR2_CPHA | USART_CR2_LBCL))
 104:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 105:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART CR3 register clear Mask ((~(uint32_t)0xFFFFFCFF)) */
 106:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define CR3_CLEAR_MASK            ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE))
 107:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 108:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*!< USART Interrupts mask */
 109:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** #define IT_MASK                   ((uint32_t)0x000000FF)
 110:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 111:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private macro -------------------------------------------------------------*/
 112:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private variables ---------------------------------------------------------*/
 113:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private function prototypes -----------------------------------------------*/
 114:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /* Private functions ---------------------------------------------------------*/
 115:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 116:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Private_Functions
 117:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 118:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 119:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 120:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group1 Initialization and Configuration functions
 121:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Initialization and Configuration functions 
 122:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 123:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim 
 124:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 125:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****            ##### Initialization and Configuration functions #####
 126:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================  
 127:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   [..]
 128:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       This subsection provides a set of functions allowing to initialize the USART 
 129:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       in asynchronous and in synchronous modes.
 130:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        (+) For the asynchronous mode only these parameters can be configured: 
 131:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Baud Rate.
 132:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Word Length. 
 133:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Stop Bit.
 134:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) Parity: If the parity is enabled, then the MSB bit of the data written
 135:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  in the data register is transmitted but is changed by the parity bit.
 136:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  Depending on the frame length defined by the M bit (8-bits or 9-bits),
 137:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  the possible USART frame formats are as listed in the following table:
 138:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..]
 139:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    +-------------------------------------------------------------+     
 140:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |   M bit |  PCE bit  |            USART frame                |
 141:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------------------|---------------------------------------|             
 142:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    0    |    0      |    | SB | 8 bit data | STB |          |
 143:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------|-----------|---------------------------------------|  
 144:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 145:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------|-----------|---------------------------------------|  
 146:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    1    |    0      |    | SB | 9 bit data | STB |          |
 147:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |---------|-----------|---------------------------------------|  
 148:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 149:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****    +-------------------------------------------------------------+            
 150:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..]
 151:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****            (++) Hardware flow control.
 152:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****            (++) Receiver/transmitter modes.
 153:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART_Init() function follows the USART  asynchronous configuration 
 154:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          procedure(details for the procedure are available in reference manual.
 155:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (+) For the synchronous mode in addition to the asynchronous mode parameters
 156:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             these parameters should be also configured:
 157:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART Clock Enabled.
 158:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART polarity.
 159:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART phase.
 160:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             (++) USART LastBit.
 161:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] These parameters can be configured using the USART_ClockInit() function.
 162:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 163:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 164:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 165:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 166:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 167:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 168:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Deinitializes the USARTx peripheral registers to their default reset values.
 169:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 170:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 171:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 172:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 173:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DeInit(USART_TypeDef* USARTx)
 174:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
  28              		.loc 1 174 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 175:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 176:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
  44              		.loc 1 176 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 394B     		ldr	r3, .L10
  47 000c 9A42     		cmp	r2, r3
  48 000e 0FD0     		beq	.L2
  49              		.loc 1 176 0 is_stmt 0 discriminator 2
  50 0010 7A68     		ldr	r2, [r7, #4]
  51 0012 384B     		ldr	r3, .L10+4
  52 0014 9A42     		cmp	r2, r3
  53 0016 0BD0     		beq	.L2
  54              		.loc 1 176 0 discriminator 1
  55 0018 7A68     		ldr	r2, [r7, #4]
  56 001a 374B     		ldr	r3, .L10+8
  57 001c 9A42     		cmp	r2, r3
  58 001e 07D0     		beq	.L2
  59              		.loc 1 176 0 discriminator 2
  60 0020 7A68     		ldr	r2, [r7, #4]
  61 0022 364B     		ldr	r3, .L10+12
  62 0024 9A42     		cmp	r2, r3
  63 0026 03D0     		beq	.L2
  64              		.loc 1 176 0 discriminator 3
  65 0028 7A68     		ldr	r2, [r7, #4]
  66 002a 354B     		ldr	r3, .L10+16
  67 002c 9A42     		cmp	r2, r3
  68 002e 02D1     		bne	.L3
  69              	.L2:
  70              		.loc 1 176 0 discriminator 1
  71 0030 4FF00103 		mov	r3, #1
  72 0034 01E0     		b	.L4
  73              	.L3:
  74              		.loc 1 176 0 discriminator 3
  75 0036 4FF00003 		mov	r3, #0
  76              	.L4:
  77              		.loc 1 176 0 discriminator 4
  78 003a 1846     		mov	r0, r3
  79 003c FFF7FEFF 		bl	assert_param
 177:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 178:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (USARTx == USART1)
  80              		.loc 1 178 0 is_stmt 1 discriminator 4
  81 0040 7A68     		ldr	r2, [r7, #4]
  82 0042 2B4B     		ldr	r3, .L10
  83 0044 9A42     		cmp	r2, r3
  84 0046 0CD1     		bne	.L5
 179:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 180:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, ENABLE);
  85              		.loc 1 180 0
  86 0048 4FF48040 		mov	r0, #16384
  87 004c 4FF00101 		mov	r1, #1
  88 0050 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 181:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_USART1, DISABLE);
  89              		.loc 1 181 0
  90 0054 4FF48040 		mov	r0, #16384
  91 0058 4FF00001 		mov	r1, #0
  92 005c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  93 0060 42E0     		b	.L1
  94              	.L5:
 182:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 183:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART2)
  95              		.loc 1 183 0
  96 0062 7A68     		ldr	r2, [r7, #4]
  97 0064 234B     		ldr	r3, .L10+4
  98 0066 9A42     		cmp	r2, r3
  99 0068 0CD1     		bne	.L7
 184:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 185:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, ENABLE);
 100              		.loc 1 185 0
 101 006a 4FF40030 		mov	r0, #131072
 102 006e 4FF00101 		mov	r1, #1
 103 0072 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 186:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART2, DISABLE);
 104              		.loc 1 186 0
 105 0076 4FF40030 		mov	r0, #131072
 106 007a 4FF00001 		mov	r1, #0
 107 007e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 108 0082 31E0     		b	.L1
 109              	.L7:
 187:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 188:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART3)
 110              		.loc 1 188 0
 111 0084 7A68     		ldr	r2, [r7, #4]
 112 0086 1C4B     		ldr	r3, .L10+8
 113 0088 9A42     		cmp	r2, r3
 114 008a 0CD1     		bne	.L8
 189:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 190:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, ENABLE);
 115              		.loc 1 190 0
 116 008c 4FF48020 		mov	r0, #262144
 117 0090 4FF00101 		mov	r1, #1
 118 0094 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 191:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_USART3, DISABLE);
 119              		.loc 1 191 0
 120 0098 4FF48020 		mov	r0, #262144
 121 009c 4FF00001 		mov	r1, #0
 122 00a0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 123 00a4 20E0     		b	.L1
 124              	.L8:
 192:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 193:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == UART4)
 125              		.loc 1 193 0
 126 00a6 7A68     		ldr	r2, [r7, #4]
 127 00a8 144B     		ldr	r3, .L10+12
 128 00aa 9A42     		cmp	r2, r3
 129 00ac 0CD1     		bne	.L9
 194:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 195:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, ENABLE);
 130              		.loc 1 195 0
 131 00ae 4FF40020 		mov	r0, #524288
 132 00b2 4FF00101 		mov	r1, #1
 133 00b6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 196:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART4, DISABLE);
 134              		.loc 1 196 0
 135 00ba 4FF40020 		mov	r0, #524288
 136 00be 4FF00001 		mov	r1, #0
 137 00c2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 138 00c6 0FE0     		b	.L1
 139              	.L9:
 197:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 198:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 199:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 200:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     if  (USARTx == UART5)
 140              		.loc 1 200 0
 141 00c8 7A68     		ldr	r2, [r7, #4]
 142 00ca 0D4B     		ldr	r3, .L10+16
 143 00cc 9A42     		cmp	r2, r3
 144 00ce 0BD1     		bne	.L1
 201:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     {
 202:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, ENABLE);
 145              		.loc 1 202 0
 146 00d0 4FF48010 		mov	r0, #1048576
 147 00d4 4FF00101 		mov	r1, #1
 148 00d8 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 203:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_UART5, DISABLE);
 149              		.loc 1 203 0
 150 00dc 4FF48010 		mov	r0, #1048576
 151 00e0 4FF00001 		mov	r1, #0
 152 00e4 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 153              	.L1:
 204:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     }
 205:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 206:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 154              		.loc 1 206 0
 155 00e8 07F10807 		add	r7, r7, #8
 156 00ec BD46     		mov	sp, r7
 157 00ee 80BD     		pop	{r7, pc}
 158              	.L11:
 159              		.align	2
 160              	.L10:
 161 00f0 00380140 		.word	1073821696
 162 00f4 00440040 		.word	1073759232
 163 00f8 00480040 		.word	1073760256
 164 00fc 004C0040 		.word	1073761280
 165 0100 00500040 		.word	1073762304
 166              		.cfi_endproc
 167              	.LFE110:
 169              		.section	.text.USART_Init,"ax",%progbits
 170              		.align	2
 171              		.global	USART_Init
 172              		.thumb
 173              		.thumb_func
 175              	USART_Init:
 176              	.LFB111:
 207:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 208:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 209:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Initializes the USARTx peripheral according to the specified
 210:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         parameters in the USART_InitStruct .
 211:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 212:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 213:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
 214:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         that contains the configuration information for the specified USART peripheral.
 215:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 216:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 217:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
 218:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 177              		.loc 1 218 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 80
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              	.LCFI3:
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 94B0     		sub	sp, sp, #80
 187              	.LCFI4:
 188              		.cfi_def_cfa_offset 88
 189 0004 00AF     		add	r7, sp, #0
 190              	.LCFI5:
 191              		.cfi_def_cfa_register 7
 192 0006 7860     		str	r0, [r7, #4]
 193 0008 3960     		str	r1, [r7, #0]
 219:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t divider = 0, apbclock = 0, tmpreg = 0;
 194              		.loc 1 219 0
 195 000a 4FF00003 		mov	r3, #0
 196 000e FB64     		str	r3, [r7, #76]
 197 0010 4FF00003 		mov	r3, #0
 198 0014 BB64     		str	r3, [r7, #72]
 199 0016 4FF00003 		mov	r3, #0
 200 001a 7B64     		str	r3, [r7, #68]
 220:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   RCC_ClocksTypeDef RCC_ClocksStatus;
 221:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 222:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 223:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 201              		.loc 1 223 0
 202 001c 7A68     		ldr	r2, [r7, #4]
 203 001e 874B     		ldr	r3, .L41
 204 0020 9A42     		cmp	r2, r3
 205 0022 0FD0     		beq	.L13
 206              		.loc 1 223 0 is_stmt 0 discriminator 2
 207 0024 7A68     		ldr	r2, [r7, #4]
 208 0026 864B     		ldr	r3, .L41+4
 209 0028 9A42     		cmp	r2, r3
 210 002a 0BD0     		beq	.L13
 211              		.loc 1 223 0 discriminator 1
 212 002c 7A68     		ldr	r2, [r7, #4]
 213 002e 854B     		ldr	r3, .L41+8
 214 0030 9A42     		cmp	r2, r3
 215 0032 07D0     		beq	.L13
 216              		.loc 1 223 0 discriminator 2
 217 0034 7A68     		ldr	r2, [r7, #4]
 218 0036 844B     		ldr	r3, .L41+12
 219 0038 9A42     		cmp	r2, r3
 220 003a 03D0     		beq	.L13
 221              		.loc 1 223 0 discriminator 3
 222 003c 7A68     		ldr	r2, [r7, #4]
 223 003e 834B     		ldr	r3, .L41+16
 224 0040 9A42     		cmp	r2, r3
 225 0042 02D1     		bne	.L14
 226              	.L13:
 227              		.loc 1 223 0 discriminator 1
 228 0044 4FF00103 		mov	r3, #1
 229 0048 01E0     		b	.L15
 230              	.L14:
 231              		.loc 1 223 0 discriminator 3
 232 004a 4FF00003 		mov	r3, #0
 233              	.L15:
 234              		.loc 1 223 0 discriminator 4
 235 004e 1846     		mov	r0, r3
 236 0050 FFF7FEFF 		bl	assert_param
 224:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));
 237              		.loc 1 224 0 is_stmt 1 discriminator 4
 238 0054 3B68     		ldr	r3, [r7, #0]
 239 0056 1B68     		ldr	r3, [r3, #0]
 240 0058 002B     		cmp	r3, #0
 241 005a 07D0     		beq	.L16
 242              		.loc 1 224 0 is_stmt 0 discriminator 1
 243 005c 3B68     		ldr	r3, [r7, #0]
 244 005e 1A68     		ldr	r2, [r3, #0]
 245 0060 7B4B     		ldr	r3, .L41+20
 246 0062 9A42     		cmp	r2, r3
 247 0064 02D8     		bhi	.L16
 248              		.loc 1 224 0 discriminator 3
 249 0066 4FF00103 		mov	r3, #1
 250 006a 01E0     		b	.L17
 251              	.L16:
 252              		.loc 1 224 0 discriminator 2
 253 006c 4FF00003 		mov	r3, #0
 254              	.L17:
 255              		.loc 1 224 0 discriminator 4
 256 0070 1846     		mov	r0, r3
 257 0072 FFF7FEFF 		bl	assert_param
 225:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 258              		.loc 1 225 0 is_stmt 1 discriminator 4
 259 0076 3B68     		ldr	r3, [r7, #0]
 260 0078 5B68     		ldr	r3, [r3, #4]
 261 007a 002B     		cmp	r3, #0
 262 007c 04D0     		beq	.L18
 263              		.loc 1 225 0 is_stmt 0 discriminator 2
 264 007e 3B68     		ldr	r3, [r7, #0]
 265 0080 5B68     		ldr	r3, [r3, #4]
 266 0082 B3F5805F 		cmp	r3, #4096
 267 0086 02D1     		bne	.L19
 268              	.L18:
 269              		.loc 1 225 0 discriminator 1
 270 0088 4FF00103 		mov	r3, #1
 271 008c 01E0     		b	.L20
 272              	.L19:
 273              		.loc 1 225 0 discriminator 3
 274 008e 4FF00003 		mov	r3, #0
 275              	.L20:
 276              		.loc 1 225 0 discriminator 4
 277 0092 1846     		mov	r0, r3
 278 0094 FFF7FEFF 		bl	assert_param
 226:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 279              		.loc 1 226 0 is_stmt 1 discriminator 4
 280 0098 3B68     		ldr	r3, [r7, #0]
 281 009a 9B68     		ldr	r3, [r3, #8]
 282 009c 002B     		cmp	r3, #0
 283 009e 09D0     		beq	.L21
 284              		.loc 1 226 0 is_stmt 0 discriminator 2
 285 00a0 3B68     		ldr	r3, [r7, #0]
 286 00a2 9B68     		ldr	r3, [r3, #8]
 287 00a4 B3F5005F 		cmp	r3, #8192
 288 00a8 04D0     		beq	.L21
 289              		.loc 1 226 0 discriminator 1
 290 00aa 3B68     		ldr	r3, [r7, #0]
 291 00ac 9B68     		ldr	r3, [r3, #8]
 292 00ae B3F5405F 		cmp	r3, #12288
 293 00b2 02D1     		bne	.L22
 294              	.L21:
 295 00b4 4FF00103 		mov	r3, #1
 296 00b8 01E0     		b	.L23
 297              	.L22:
 298              		.loc 1 226 0 discriminator 3
 299 00ba 4FF00003 		mov	r3, #0
 300              	.L23:
 301              		.loc 1 226 0 discriminator 4
 302 00be 1846     		mov	r0, r3
 303 00c0 FFF7FEFF 		bl	assert_param
 227:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 304              		.loc 1 227 0 is_stmt 1 discriminator 4
 305 00c4 3B68     		ldr	r3, [r7, #0]
 306 00c6 DB68     		ldr	r3, [r3, #12]
 307 00c8 002B     		cmp	r3, #0
 308 00ca 09D0     		beq	.L24
 309              		.loc 1 227 0 is_stmt 0 discriminator 2
 310 00cc 3B68     		ldr	r3, [r7, #0]
 311 00ce DB68     		ldr	r3, [r3, #12]
 312 00d0 B3F5806F 		cmp	r3, #1024
 313 00d4 04D0     		beq	.L24
 314              		.loc 1 227 0 discriminator 1
 315 00d6 3B68     		ldr	r3, [r7, #0]
 316 00d8 DB68     		ldr	r3, [r3, #12]
 317 00da B3F5C06F 		cmp	r3, #1536
 318 00de 02D1     		bne	.L25
 319              	.L24:
 320 00e0 4FF00103 		mov	r3, #1
 321 00e4 01E0     		b	.L26
 322              	.L25:
 323              		.loc 1 227 0 discriminator 3
 324 00e6 4FF00003 		mov	r3, #0
 325              	.L26:
 326              		.loc 1 227 0 discriminator 4
 327 00ea 1846     		mov	r0, r3
 328 00ec FFF7FEFF 		bl	assert_param
 228:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 329              		.loc 1 228 0 is_stmt 1 discriminator 4
 330 00f0 3B68     		ldr	r3, [r7, #0]
 331 00f2 1B69     		ldr	r3, [r3, #16]
 332 00f4 23F00C03 		bic	r3, r3, #12
 333 00f8 002B     		cmp	r3, #0
 334 00fa 06D1     		bne	.L27
 335              		.loc 1 228 0 is_stmt 0 discriminator 1
 336 00fc 3B68     		ldr	r3, [r7, #0]
 337 00fe 1B69     		ldr	r3, [r3, #16]
 338 0100 002B     		cmp	r3, #0
 339 0102 02D0     		beq	.L27
 340              		.loc 1 228 0 discriminator 3
 341 0104 4FF00103 		mov	r3, #1
 342 0108 01E0     		b	.L28
 343              	.L27:
 344              		.loc 1 228 0 discriminator 2
 345 010a 4FF00003 		mov	r3, #0
 346              	.L28:
 347              		.loc 1 228 0 discriminator 4
 348 010e 1846     		mov	r0, r3
 349 0110 FFF7FEFF 		bl	assert_param
 229:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 350              		.loc 1 229 0 is_stmt 1 discriminator 4
 351 0114 3B68     		ldr	r3, [r7, #0]
 352 0116 5B69     		ldr	r3, [r3, #20]
 353 0118 002B     		cmp	r3, #0
 354 011a 0ED0     		beq	.L29
 355              		.loc 1 229 0 is_stmt 0 discriminator 2
 356 011c 3B68     		ldr	r3, [r7, #0]
 357 011e 5B69     		ldr	r3, [r3, #20]
 358 0120 B3F5807F 		cmp	r3, #256
 359 0124 09D0     		beq	.L29
 360              		.loc 1 229 0 discriminator 1
 361 0126 3B68     		ldr	r3, [r7, #0]
 362 0128 5B69     		ldr	r3, [r3, #20]
 363 012a B3F5007F 		cmp	r3, #512
 364 012e 04D0     		beq	.L29
 365              		.loc 1 229 0 discriminator 2
 366 0130 3B68     		ldr	r3, [r7, #0]
 367 0132 5B69     		ldr	r3, [r3, #20]
 368 0134 B3F5407F 		cmp	r3, #768
 369 0138 02D1     		bne	.L30
 370              	.L29:
 371              		.loc 1 229 0 discriminator 1
 372 013a 4FF00103 		mov	r3, #1
 373 013e 01E0     		b	.L31
 374              	.L30:
 375              		.loc 1 229 0 discriminator 3
 376 0140 4FF00003 		mov	r3, #0
 377              	.L31:
 378              		.loc 1 229 0 discriminator 4
 379 0144 1846     		mov	r0, r3
 380 0146 FFF7FEFF 		bl	assert_param
 230:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 231:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Disable USART */
 232:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_UE);
 381              		.loc 1 232 0 is_stmt 1 discriminator 4
 382 014a 7B68     		ldr	r3, [r7, #4]
 383 014c 1B68     		ldr	r3, [r3, #0]
 384 014e 23F00102 		bic	r2, r3, #1
 385 0152 7B68     		ldr	r3, [r7, #4]
 386 0154 1A60     		str	r2, [r3, #0]
 233:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 234:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART CR2 Configuration -----------------------*/
 235:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR2;
 387              		.loc 1 235 0 discriminator 4
 388 0156 7B68     		ldr	r3, [r7, #4]
 389 0158 5B68     		ldr	r3, [r3, #4]
 390 015a 7B64     		str	r3, [r7, #68]
 236:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear STOP[13:12] bits */
 237:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)USART_CR2_STOP);
 391              		.loc 1 237 0 discriminator 4
 392 015c 7B6C     		ldr	r3, [r7, #68]
 393 015e 23F44053 		bic	r3, r3, #12288
 394 0162 7B64     		str	r3, [r7, #68]
 238:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 239:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
 240:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set STOP[13:12] bits according to USART_StopBits value */
 241:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 395              		.loc 1 241 0 discriminator 4
 396 0164 3B68     		ldr	r3, [r7, #0]
 397 0166 9B68     		ldr	r3, [r3, #8]
 398 0168 7A6C     		ldr	r2, [r7, #68]
 399 016a 1343     		orrs	r3, r3, r2
 400 016c 7B64     		str	r3, [r7, #68]
 242:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 243:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR2 */
 244:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 = tmpreg;
 401              		.loc 1 244 0 discriminator 4
 402 016e 7B68     		ldr	r3, [r7, #4]
 403 0170 7A6C     		ldr	r2, [r7, #68]
 404 0172 5A60     		str	r2, [r3, #4]
 245:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 246:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART CR1 Configuration -----------------------*/
 247:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR1;
 405              		.loc 1 247 0 discriminator 4
 406 0174 7B68     		ldr	r3, [r7, #4]
 407 0176 1B68     		ldr	r3, [r3, #0]
 408 0178 7B64     		str	r3, [r7, #68]
 248:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear M, PCE, PS, TE and RE bits */
 249:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR1_CLEAR_MASK);
 409              		.loc 1 249 0 discriminator 4
 410 017a 7B6C     		ldr	r3, [r7, #68]
 411 017c 23F4B053 		bic	r3, r3, #5632
 412 0180 23F00C03 		bic	r3, r3, #12
 413 0184 7B64     		str	r3, [r7, #68]
 250:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 251:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Word Length, Parity and mode ----------------------- */
 252:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the M bits according to USART_WordLength value */
 253:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set PCE and PS bits according to USART_Parity value */
 254:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set TE and RE bits according to USART_Mode value */
 255:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 414              		.loc 1 255 0 discriminator 4
 415 0186 3B68     		ldr	r3, [r7, #0]
 416 0188 5A68     		ldr	r2, [r3, #4]
 417 018a 3B68     		ldr	r3, [r7, #0]
 418 018c DB68     		ldr	r3, [r3, #12]
 419 018e 1A43     		orrs	r2, r2, r3
 256:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USART_InitStruct->USART_Mode;
 420              		.loc 1 256 0 discriminator 4
 421 0190 3B68     		ldr	r3, [r7, #0]
 422 0192 1B69     		ldr	r3, [r3, #16]
 255:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 423              		.loc 1 255 0 discriminator 4
 424 0194 1343     		orrs	r3, r3, r2
 425 0196 7A6C     		ldr	r2, [r7, #68]
 426 0198 1343     		orrs	r3, r3, r2
 427 019a 7B64     		str	r3, [r7, #68]
 257:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 258:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR1 */
 259:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 = tmpreg;
 428              		.loc 1 259 0 discriminator 4
 429 019c 7B68     		ldr	r3, [r7, #4]
 430 019e 7A6C     		ldr	r2, [r7, #68]
 431 01a0 1A60     		str	r2, [r3, #0]
 260:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 261:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART CR3 Configuration -----------------------*/
 262:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR3;
 432              		.loc 1 262 0 discriminator 4
 433 01a2 7B68     		ldr	r3, [r7, #4]
 434 01a4 9B68     		ldr	r3, [r3, #8]
 435 01a6 7B64     		str	r3, [r7, #68]
 263:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear CTSE and RTSE bits */
 264:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR3_CLEAR_MASK);
 436              		.loc 1 264 0 discriminator 4
 437 01a8 7B6C     		ldr	r3, [r7, #68]
 438 01aa 23F44073 		bic	r3, r3, #768
 439 01ae 7B64     		str	r3, [r7, #68]
 265:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 266:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART HFC -------------------------------------------------*/
 267:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
 268:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 440              		.loc 1 268 0 discriminator 4
 441 01b0 3B68     		ldr	r3, [r7, #0]
 442 01b2 5B69     		ldr	r3, [r3, #20]
 443 01b4 7A6C     		ldr	r2, [r7, #68]
 444 01b6 1343     		orrs	r3, r3, r2
 445 01b8 7B64     		str	r3, [r7, #68]
 269:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 270:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR3 */
 271:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 = tmpreg;
 446              		.loc 1 271 0 discriminator 4
 447 01ba 7B68     		ldr	r3, [r7, #4]
 448 01bc 7A6C     		ldr	r2, [r7, #68]
 449 01be 9A60     		str	r2, [r3, #8]
 272:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 273:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /*---------------------------- USART BRR Configuration -----------------------*/
 274:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Baud Rate -------------------------------------------*/
 275:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   RCC_GetClocksFreq(&RCC_ClocksStatus);
 450              		.loc 1 275 0 discriminator 4
 451 01c0 07F10803 		add	r3, r7, #8
 452 01c4 1846     		mov	r0, r3
 453 01c6 FFF7FEFF 		bl	RCC_GetClocksFreq
 276:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 277:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (USARTx == USART1)
 454              		.loc 1 277 0 discriminator 4
 455 01ca 7A68     		ldr	r2, [r7, #4]
 456 01cc 1B4B     		ldr	r3, .L41
 457 01ce 9A42     		cmp	r2, r3
 458 01d0 02D1     		bne	.L32
 278:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 279:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.USART1CLK_Frequency;
 459              		.loc 1 279 0
 460 01d2 3B6B     		ldr	r3, [r7, #48]
 461 01d4 BB64     		str	r3, [r7, #72]
 462 01d6 16E0     		b	.L33
 463              	.L32:
 280:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 281:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART2)
 464              		.loc 1 281 0
 465 01d8 7A68     		ldr	r2, [r7, #4]
 466 01da 194B     		ldr	r3, .L41+4
 467 01dc 9A42     		cmp	r2, r3
 468 01de 02D1     		bne	.L34
 282:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 283:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.USART2CLK_Frequency;
 469              		.loc 1 283 0
 470 01e0 7B6B     		ldr	r3, [r7, #52]
 471 01e2 BB64     		str	r3, [r7, #72]
 472 01e4 0FE0     		b	.L33
 473              	.L34:
 284:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 285:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == USART3)
 474              		.loc 1 285 0
 475 01e6 7A68     		ldr	r2, [r7, #4]
 476 01e8 164B     		ldr	r3, .L41+8
 477 01ea 9A42     		cmp	r2, r3
 478 01ec 02D1     		bne	.L35
 286:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 287:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.USART3CLK_Frequency;
 479              		.loc 1 287 0
 480 01ee BB6B     		ldr	r3, [r7, #56]
 481 01f0 BB64     		str	r3, [r7, #72]
 482 01f2 08E0     		b	.L33
 483              	.L35:
 288:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 289:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (USARTx == UART4)
 484              		.loc 1 289 0
 485 01f4 7A68     		ldr	r2, [r7, #4]
 486 01f6 144B     		ldr	r3, .L41+12
 487 01f8 9A42     		cmp	r2, r3
 488 01fa 02D1     		bne	.L36
 290:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 291:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.UART4CLK_Frequency;
 489              		.loc 1 291 0
 490 01fc FB6B     		ldr	r3, [r7, #60]
 491 01fe BB64     		str	r3, [r7, #72]
 492 0200 01E0     		b	.L33
 493              	.L36:
 292:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 293:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else 
 294:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 295:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     apbclock = RCC_ClocksStatus.UART5CLK_Frequency;
 494              		.loc 1 295 0
 495 0202 3B6C     		ldr	r3, [r7, #64]
 496 0204 BB64     		str	r3, [r7, #72]
 497              	.L33:
 296:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }  
 297:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 298:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Determine the integer part */
 299:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 498              		.loc 1 299 0
 499 0206 7B68     		ldr	r3, [r7, #4]
 500 0208 1B68     		ldr	r3, [r3, #0]
 501 020a 03F40043 		and	r3, r3, #32768
 502 020e 002B     		cmp	r3, #0
 503 0210 20D0     		beq	.L37
 300:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 301:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* (divider * 10) computing in case Oversampling mode is 8 Samples */
 302:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider = (uint32_t)((2 * apbclock) / (USART_InitStruct->USART_BaudRate));
 504              		.loc 1 302 0
 505 0212 BB6C     		ldr	r3, [r7, #72]
 506 0214 4FEA4302 		lsl	r2, r3, #1
 507 0218 3B68     		ldr	r3, [r7, #0]
 508 021a 1B68     		ldr	r3, [r3, #0]
 509 021c B2FBF3F3 		udiv	r3, r2, r3
 510 0220 FB64     		str	r3, [r7, #76]
 303:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     tmpreg  = (uint32_t)((2 * apbclock) % (USART_InitStruct->USART_BaudRate));
 511              		.loc 1 303 0
 512 0222 BB6C     		ldr	r3, [r7, #72]
 513 0224 4FEA4303 		lsl	r3, r3, #1
 514 0228 3A68     		ldr	r2, [r7, #0]
 515 022a 1268     		ldr	r2, [r2, #0]
 516 022c B3FBF2F1 		udiv	r1, r3, r2
 517 0230 02FB01F2 		mul	r2, r2, r1
 518 0234 9B1A     		subs	r3, r3, r2
 519 0236 7B64     		str	r3, [r7, #68]
 520 0238 1BE0     		b	.L38
 521              	.L42:
 522 023a 00BF     		.align	2
 523              	.L41:
 524 023c 00380140 		.word	1073821696
 525 0240 00440040 		.word	1073759232
 526 0244 00480040 		.word	1073760256
 527 0248 004C0040 		.word	1073761280
 528 024c 00500040 		.word	1073762304
 529 0250 808D5B00 		.word	6000000
 530              	.L37:
 304:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 305:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else /* if ((USARTx->CR1 & CR1_OVER8_Set) == 0) */
 306:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 307:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* (divider * 10) computing in case Oversampling mode is 16 Samples */
 308:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider = (uint32_t)((apbclock) / (USART_InitStruct->USART_BaudRate));
 531              		.loc 1 308 0
 532 0254 3B68     		ldr	r3, [r7, #0]
 533 0256 1B68     		ldr	r3, [r3, #0]
 534 0258 BA6C     		ldr	r2, [r7, #72]
 535 025a B2FBF3F3 		udiv	r3, r2, r3
 536 025e FB64     		str	r3, [r7, #76]
 309:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     tmpreg  = (uint32_t)((apbclock) % (USART_InitStruct->USART_BaudRate));
 537              		.loc 1 309 0
 538 0260 3B68     		ldr	r3, [r7, #0]
 539 0262 1A68     		ldr	r2, [r3, #0]
 540 0264 BB6C     		ldr	r3, [r7, #72]
 541 0266 B3FBF2F1 		udiv	r1, r3, r2
 542 026a 02FB01F2 		mul	r2, r2, r1
 543 026e 9B1A     		subs	r3, r3, r2
 544 0270 7B64     		str	r3, [r7, #68]
 545              	.L38:
 310:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 311:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 312:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* round the divider : if fractional part i greater than 0.5 increment divider */
 313:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (tmpreg >=  (USART_InitStruct->USART_BaudRate) / 2)
 546              		.loc 1 313 0
 547 0272 3B68     		ldr	r3, [r7, #0]
 548 0274 1B68     		ldr	r3, [r3, #0]
 549 0276 4FEA5302 		lsr	r2, r3, #1
 550 027a 7B6C     		ldr	r3, [r7, #68]
 551 027c 9A42     		cmp	r2, r3
 552 027e 03D8     		bhi	.L39
 314:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 315:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider++;
 553              		.loc 1 315 0
 554 0280 FB6C     		ldr	r3, [r7, #76]
 555 0282 03F10103 		add	r3, r3, #1
 556 0286 FB64     		str	r3, [r7, #76]
 557              	.L39:
 316:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   } 
 317:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 318:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Implement the divider in case Oversampling mode is 8 Samples */
 319:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((USARTx->CR1 & USART_CR1_OVER8) != 0)
 558              		.loc 1 319 0
 559 0288 7B68     		ldr	r3, [r7, #4]
 560 028a 1B68     		ldr	r3, [r3, #0]
 561 028c 03F40043 		and	r3, r3, #32768
 562 0290 002B     		cmp	r3, #0
 563 0292 0CD0     		beq	.L40
 320:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 321:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* get the LSB of divider and shift it to the right by 1 bit */
 322:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     tmpreg = (divider & (uint16_t)0x000F) >> 1;
 564              		.loc 1 322 0
 565 0294 FB6C     		ldr	r3, [r7, #76]
 566 0296 03F00F03 		and	r3, r3, #15
 567 029a 4FEA5303 		lsr	r3, r3, #1
 568 029e 7B64     		str	r3, [r7, #68]
 323:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     
 324:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* update the divider value */
 325:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     divider = (divider & (uint16_t)0xFFF0) | tmpreg;
 569              		.loc 1 325 0
 570 02a0 FA6C     		ldr	r2, [r7, #76]
 571 02a2 4FF6F073 		movw	r3, #65520
 572 02a6 1340     		ands	r3, r3, r2
 573 02a8 7A6C     		ldr	r2, [r7, #68]
 574 02aa 1343     		orrs	r3, r3, r2
 575 02ac FB64     		str	r3, [r7, #76]
 576              	.L40:
 326:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 327:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 328:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART BRR */
 329:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->BRR = (uint16_t)divider;
 577              		.loc 1 329 0
 578 02ae FB6C     		ldr	r3, [r7, #76]
 579 02b0 9AB2     		uxth	r2, r3
 580 02b2 7B68     		ldr	r3, [r7, #4]
 581 02b4 9A81     		strh	r2, [r3, #12]	@ movhi
 330:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 582              		.loc 1 330 0
 583 02b6 07F15007 		add	r7, r7, #80
 584 02ba BD46     		mov	sp, r7
 585 02bc 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE111:
 589 02be 00BF     		.section	.text.USART_StructInit,"ax",%progbits
 590              		.align	2
 591              		.global	USART_StructInit
 592              		.thumb
 593              		.thumb_func
 595              	USART_StructInit:
 596              	.LFB112:
 331:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 332:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 333:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Fills each USART_InitStruct member with its default value.
 334:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
 335:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         which will be initialized.
 336:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 337:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 338:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_StructInit(USART_InitTypeDef* USART_InitStruct)
 339:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 597              		.loc 1 339 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602 0000 80B4     		push	{r7}
 603              	.LCFI6:
 604              		.cfi_def_cfa_offset 4
 605              		.cfi_offset 7, -4
 606 0002 83B0     		sub	sp, sp, #12
 607              	.LCFI7:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI8:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 340:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* USART_InitStruct members default value */
 341:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_BaudRate = 9600;
 613              		.loc 1 341 0
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 4FF41652 		mov	r2, #9600
 616 000e 1A60     		str	r2, [r3, #0]
 342:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_WordLength = USART_WordLength_8b;
 617              		.loc 1 342 0
 618 0010 7B68     		ldr	r3, [r7, #4]
 619 0012 4FF00002 		mov	r2, #0
 620 0016 5A60     		str	r2, [r3, #4]
 343:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_StopBits = USART_StopBits_1;
 621              		.loc 1 343 0
 622 0018 7B68     		ldr	r3, [r7, #4]
 623 001a 4FF00002 		mov	r2, #0
 624 001e 9A60     		str	r2, [r3, #8]
 344:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_Parity = USART_Parity_No ;
 625              		.loc 1 344 0
 626 0020 7B68     		ldr	r3, [r7, #4]
 627 0022 4FF00002 		mov	r2, #0
 628 0026 DA60     		str	r2, [r3, #12]
 345:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 629              		.loc 1 345 0
 630 0028 7B68     		ldr	r3, [r7, #4]
 631 002a 4FF00C02 		mov	r2, #12
 632 002e 1A61     		str	r2, [r3, #16]
 346:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_InitStruct->USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 633              		.loc 1 346 0
 634 0030 7B68     		ldr	r3, [r7, #4]
 635 0032 4FF00002 		mov	r2, #0
 636 0036 5A61     		str	r2, [r3, #20]
 347:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 637              		.loc 1 347 0
 638 0038 07F10C07 		add	r7, r7, #12
 639 003c BD46     		mov	sp, r7
 640 003e 80BC     		pop	{r7}
 641 0040 7047     		bx	lr
 642              		.cfi_endproc
 643              	.LFE112:
 645 0042 00BF     		.section	.text.USART_ClockInit,"ax",%progbits
 646              		.align	2
 647              		.global	USART_ClockInit
 648              		.thumb
 649              		.thumb_func
 651              	USART_ClockInit:
 652              	.LFB113:
 348:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 349:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 350:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Initializes the USARTx peripheral Clock according to the
 351:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         specified parameters in the USART_ClockInitStruct.
 352:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 353:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
 354:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef
 355:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         structure that contains the configuration information for the specified
 356:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         USART peripheral.
 357:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 358:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 359:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClockInit(USART_TypeDef* USARTx, USART_ClockInitTypeDef* USART_ClockInitStruct)
 360:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 653              		.loc 1 360 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 16
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657 0000 80B5     		push	{r7, lr}
 658              	.LCFI9:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 7, -8
 661              		.cfi_offset 14, -4
 662 0002 84B0     		sub	sp, sp, #16
 663              	.LCFI10:
 664              		.cfi_def_cfa_offset 24
 665 0004 00AF     		add	r7, sp, #0
 666              	.LCFI11:
 667              		.cfi_def_cfa_register 7
 668 0006 7860     		str	r0, [r7, #4]
 669 0008 3960     		str	r1, [r7, #0]
 361:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t tmpreg = 0;
 670              		.loc 1 361 0
 671 000a 4FF00003 		mov	r3, #0
 672 000e FB60     		str	r3, [r7, #12]
 362:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 363:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 673              		.loc 1 363 0
 674 0010 7A68     		ldr	r2, [r7, #4]
 675 0012 394B     		ldr	r3, .L60
 676 0014 9A42     		cmp	r2, r3
 677 0016 07D0     		beq	.L45
 678              		.loc 1 363 0 is_stmt 0 discriminator 2
 679 0018 7A68     		ldr	r2, [r7, #4]
 680 001a 384B     		ldr	r3, .L60+4
 681 001c 9A42     		cmp	r2, r3
 682 001e 03D0     		beq	.L45
 683              		.loc 1 363 0 discriminator 1
 684 0020 7A68     		ldr	r2, [r7, #4]
 685 0022 374B     		ldr	r3, .L60+8
 686 0024 9A42     		cmp	r2, r3
 687 0026 02D1     		bne	.L46
 688              	.L45:
 689 0028 4FF00103 		mov	r3, #1
 690 002c 01E0     		b	.L47
 691              	.L46:
 692              		.loc 1 363 0 discriminator 3
 693 002e 4FF00003 		mov	r3, #0
 694              	.L47:
 695              		.loc 1 363 0 discriminator 4
 696 0032 1846     		mov	r0, r3
 697 0034 FFF7FEFF 		bl	assert_param
 364:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CLOCK(USART_ClockInitStruct->USART_Clock));
 698              		.loc 1 364 0 is_stmt 1 discriminator 4
 699 0038 3B68     		ldr	r3, [r7, #0]
 700 003a 1B68     		ldr	r3, [r3, #0]
 701 003c 002B     		cmp	r3, #0
 702 003e 04D0     		beq	.L48
 703              		.loc 1 364 0 is_stmt 0 discriminator 2
 704 0040 3B68     		ldr	r3, [r7, #0]
 705 0042 1B68     		ldr	r3, [r3, #0]
 706 0044 B3F5006F 		cmp	r3, #2048
 707 0048 02D1     		bne	.L49
 708              	.L48:
 709              		.loc 1 364 0 discriminator 1
 710 004a 4FF00103 		mov	r3, #1
 711 004e 01E0     		b	.L50
 712              	.L49:
 713              		.loc 1 364 0 discriminator 3
 714 0050 4FF00003 		mov	r3, #0
 715              	.L50:
 716              		.loc 1 364 0 discriminator 4
 717 0054 1846     		mov	r0, r3
 718 0056 FFF7FEFF 		bl	assert_param
 365:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CPOL(USART_ClockInitStruct->USART_CPOL));
 719              		.loc 1 365 0 is_stmt 1 discriminator 4
 720 005a 3B68     		ldr	r3, [r7, #0]
 721 005c 5B68     		ldr	r3, [r3, #4]
 722 005e 002B     		cmp	r3, #0
 723 0060 04D0     		beq	.L51
 724              		.loc 1 365 0 is_stmt 0 discriminator 2
 725 0062 3B68     		ldr	r3, [r7, #0]
 726 0064 5B68     		ldr	r3, [r3, #4]
 727 0066 B3F5806F 		cmp	r3, #1024
 728 006a 02D1     		bne	.L52
 729              	.L51:
 730              		.loc 1 365 0 discriminator 1
 731 006c 4FF00103 		mov	r3, #1
 732 0070 01E0     		b	.L53
 733              	.L52:
 734              		.loc 1 365 0 discriminator 3
 735 0072 4FF00003 		mov	r3, #0
 736              	.L53:
 737              		.loc 1 365 0 discriminator 4
 738 0076 1846     		mov	r0, r3
 739 0078 FFF7FEFF 		bl	assert_param
 366:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CPHA(USART_ClockInitStruct->USART_CPHA));
 740              		.loc 1 366 0 is_stmt 1 discriminator 4
 741 007c 3B68     		ldr	r3, [r7, #0]
 742 007e 9B68     		ldr	r3, [r3, #8]
 743 0080 002B     		cmp	r3, #0
 744 0082 04D0     		beq	.L54
 745              		.loc 1 366 0 is_stmt 0 discriminator 2
 746 0084 3B68     		ldr	r3, [r7, #0]
 747 0086 9B68     		ldr	r3, [r3, #8]
 748 0088 B3F5007F 		cmp	r3, #512
 749 008c 02D1     		bne	.L55
 750              	.L54:
 751              		.loc 1 366 0 discriminator 1
 752 008e 4FF00103 		mov	r3, #1
 753 0092 01E0     		b	.L56
 754              	.L55:
 755              		.loc 1 366 0 discriminator 3
 756 0094 4FF00003 		mov	r3, #0
 757              	.L56:
 758              		.loc 1 366 0 discriminator 4
 759 0098 1846     		mov	r0, r3
 760 009a FFF7FEFF 		bl	assert_param
 367:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_LASTBIT(USART_ClockInitStruct->USART_LastBit));
 761              		.loc 1 367 0 is_stmt 1 discriminator 4
 762 009e 3B68     		ldr	r3, [r7, #0]
 763 00a0 DB68     		ldr	r3, [r3, #12]
 764 00a2 002B     		cmp	r3, #0
 765 00a4 04D0     		beq	.L57
 766              		.loc 1 367 0 is_stmt 0 discriminator 2
 767 00a6 3B68     		ldr	r3, [r7, #0]
 768 00a8 DB68     		ldr	r3, [r3, #12]
 769 00aa B3F5807F 		cmp	r3, #256
 770 00ae 02D1     		bne	.L58
 771              	.L57:
 772              		.loc 1 367 0 discriminator 1
 773 00b0 4FF00103 		mov	r3, #1
 774 00b4 01E0     		b	.L59
 775              	.L58:
 776              		.loc 1 367 0 discriminator 3
 777 00b6 4FF00003 		mov	r3, #0
 778              	.L59:
 779              		.loc 1 367 0 discriminator 4
 780 00ba 1846     		mov	r0, r3
 781 00bc FFF7FEFF 		bl	assert_param
 368:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /*---------------------------- USART CR2 Configuration -----------------------*/
 369:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg = USARTx->CR2;
 782              		.loc 1 369 0 is_stmt 1 discriminator 4
 783 00c0 7B68     		ldr	r3, [r7, #4]
 784 00c2 5B68     		ldr	r3, [r3, #4]
 785 00c4 FB60     		str	r3, [r7, #12]
 370:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear CLKEN, CPOL, CPHA, LBCL and SSM bits */
 371:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg &= (uint32_t)~((uint32_t)CR2_CLOCK_CLEAR_MASK);
 786              		.loc 1 371 0 discriminator 4
 787 00c6 FB68     		ldr	r3, [r7, #12]
 788 00c8 23F47063 		bic	r3, r3, #3840
 789 00cc FB60     		str	r3, [r7, #12]
 372:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Configure the USART Clock, CPOL, CPHA, LastBit and SSM ------------*/
 373:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CLKEN bit according to USART_Clock value */
 374:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CPOL bit according to USART_CPOL value */
 375:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set CPHA bit according to USART_CPHA value */
 376:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set LBCL bit according to USART_LastBit value */
 377:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)(USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 790              		.loc 1 377 0 discriminator 4
 791 00ce 3B68     		ldr	r3, [r7, #0]
 792 00d0 1A68     		ldr	r2, [r3, #0]
 793 00d2 3B68     		ldr	r3, [r7, #0]
 794 00d4 5B68     		ldr	r3, [r3, #4]
 795 00d6 1A43     		orrs	r2, r2, r3
 378:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                        USART_ClockInitStruct->USART_CPHA | USART_ClockInitStruct->USART_LastBit);
 796              		.loc 1 378 0 discriminator 4
 797 00d8 3B68     		ldr	r3, [r7, #0]
 798 00da 9B68     		ldr	r3, [r3, #8]
 377:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)(USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 799              		.loc 1 377 0 discriminator 4
 800 00dc 1A43     		orrs	r2, r2, r3
 801              		.loc 1 378 0 discriminator 4
 802 00de 3B68     		ldr	r3, [r7, #0]
 803 00e0 DB68     		ldr	r3, [r3, #12]
 377:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   tmpreg |= (uint32_t)(USART_ClockInitStruct->USART_Clock | USART_ClockInitStruct->USART_CPOL | 
 804              		.loc 1 377 0 discriminator 4
 805 00e2 1343     		orrs	r3, r3, r2
 806 00e4 FA68     		ldr	r2, [r7, #12]
 807 00e6 1343     		orrs	r3, r3, r2
 808 00e8 FB60     		str	r3, [r7, #12]
 379:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Write to USART CR2 */
 380:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 = tmpreg;
 809              		.loc 1 380 0 discriminator 4
 810 00ea 7B68     		ldr	r3, [r7, #4]
 811 00ec FA68     		ldr	r2, [r7, #12]
 812 00ee 5A60     		str	r2, [r3, #4]
 381:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 813              		.loc 1 381 0 discriminator 4
 814 00f0 07F11007 		add	r7, r7, #16
 815 00f4 BD46     		mov	sp, r7
 816 00f6 80BD     		pop	{r7, pc}
 817              	.L61:
 818              		.align	2
 819              	.L60:
 820 00f8 00380140 		.word	1073821696
 821 00fc 00440040 		.word	1073759232
 822 0100 00480040 		.word	1073760256
 823              		.cfi_endproc
 824              	.LFE113:
 826              		.section	.text.USART_ClockStructInit,"ax",%progbits
 827              		.align	2
 828              		.global	USART_ClockStructInit
 829              		.thumb
 830              		.thumb_func
 832              	USART_ClockStructInit:
 833              	.LFB114:
 382:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 383:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 384:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Fills each USART_ClockInitStruct member with its default value.
 385:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_ClockInitStruct: pointer to a USART_ClockInitTypeDef
 386:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         structure which will be initialized.
 387:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 388:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 389:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClockStructInit(USART_ClockInitTypeDef* USART_ClockInitStruct)
 390:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 834              		.loc 1 390 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 8
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839 0000 80B4     		push	{r7}
 840              	.LCFI12:
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 7, -4
 843 0002 83B0     		sub	sp, sp, #12
 844              	.LCFI13:
 845              		.cfi_def_cfa_offset 16
 846 0004 00AF     		add	r7, sp, #0
 847              	.LCFI14:
 848              		.cfi_def_cfa_register 7
 849 0006 7860     		str	r0, [r7, #4]
 391:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* USART_ClockInitStruct members default value */
 392:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_Clock = USART_Clock_Disable;
 850              		.loc 1 392 0
 851 0008 7B68     		ldr	r3, [r7, #4]
 852 000a 4FF00002 		mov	r2, #0
 853 000e 1A60     		str	r2, [r3, #0]
 393:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_CPOL = USART_CPOL_Low;
 854              		.loc 1 393 0
 855 0010 7B68     		ldr	r3, [r7, #4]
 856 0012 4FF00002 		mov	r2, #0
 857 0016 5A60     		str	r2, [r3, #4]
 394:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_CPHA = USART_CPHA_1Edge;
 858              		.loc 1 394 0
 859 0018 7B68     		ldr	r3, [r7, #4]
 860 001a 4FF00002 		mov	r2, #0
 861 001e 9A60     		str	r2, [r3, #8]
 395:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USART_ClockInitStruct->USART_LastBit = USART_LastBit_Disable;
 862              		.loc 1 395 0
 863 0020 7B68     		ldr	r3, [r7, #4]
 864 0022 4FF00002 		mov	r2, #0
 865 0026 DA60     		str	r2, [r3, #12]
 396:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 866              		.loc 1 396 0
 867 0028 07F10C07 		add	r7, r7, #12
 868 002c BD46     		mov	sp, r7
 869 002e 80BC     		pop	{r7}
 870 0030 7047     		bx	lr
 871              		.cfi_endproc
 872              	.LFE114:
 874 0032 00BF     		.section	.text.USART_Cmd,"ax",%progbits
 875              		.align	2
 876              		.global	USART_Cmd
 877              		.thumb
 878              		.thumb_func
 880              	USART_Cmd:
 881              	.LFB115:
 397:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 398:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 399:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the specified USART peripheral.
 400:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 401:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 402:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx peripheral.
 403:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 404:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 405:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 406:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 407:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 882              		.loc 1 407 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              	.LCFI15:
 888              		.cfi_def_cfa_offset 8
 889              		.cfi_offset 7, -8
 890              		.cfi_offset 14, -4
 891 0002 82B0     		sub	sp, sp, #8
 892              	.LCFI16:
 893              		.cfi_def_cfa_offset 16
 894 0004 00AF     		add	r7, sp, #0
 895              	.LCFI17:
 896              		.cfi_def_cfa_register 7
 897 0006 7860     		str	r0, [r7, #4]
 898 0008 0B46     		mov	r3, r1
 899 000a FB70     		strb	r3, [r7, #3]
 408:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 409:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 900              		.loc 1 409 0
 901 000c 7A68     		ldr	r2, [r7, #4]
 902 000e 1E4B     		ldr	r3, .L72
 903 0010 9A42     		cmp	r2, r3
 904 0012 0FD0     		beq	.L64
 905              		.loc 1 409 0 is_stmt 0 discriminator 2
 906 0014 7A68     		ldr	r2, [r7, #4]
 907 0016 1D4B     		ldr	r3, .L72+4
 908 0018 9A42     		cmp	r2, r3
 909 001a 0BD0     		beq	.L64
 910              		.loc 1 409 0 discriminator 1
 911 001c 7A68     		ldr	r2, [r7, #4]
 912 001e 1C4B     		ldr	r3, .L72+8
 913 0020 9A42     		cmp	r2, r3
 914 0022 07D0     		beq	.L64
 915              		.loc 1 409 0 discriminator 2
 916 0024 7A68     		ldr	r2, [r7, #4]
 917 0026 1B4B     		ldr	r3, .L72+12
 918 0028 9A42     		cmp	r2, r3
 919 002a 03D0     		beq	.L64
 920              		.loc 1 409 0 discriminator 3
 921 002c 7A68     		ldr	r2, [r7, #4]
 922 002e 1A4B     		ldr	r3, .L72+16
 923 0030 9A42     		cmp	r2, r3
 924 0032 02D1     		bne	.L65
 925              	.L64:
 926              		.loc 1 409 0 discriminator 1
 927 0034 4FF00103 		mov	r3, #1
 928 0038 01E0     		b	.L66
 929              	.L65:
 930              		.loc 1 409 0 discriminator 3
 931 003a 4FF00003 		mov	r3, #0
 932              	.L66:
 933              		.loc 1 409 0 discriminator 4
 934 003e 1846     		mov	r0, r3
 935 0040 FFF7FEFF 		bl	assert_param
 410:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 936              		.loc 1 410 0 is_stmt 1 discriminator 4
 937 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 938 0046 002B     		cmp	r3, #0
 939 0048 02D0     		beq	.L67
 940              		.loc 1 410 0 is_stmt 0 discriminator 2
 941 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 942 004c 012B     		cmp	r3, #1
 943 004e 02D1     		bne	.L68
 944              	.L67:
 945              		.loc 1 410 0 discriminator 1
 946 0050 4FF00103 		mov	r3, #1
 947 0054 01E0     		b	.L69
 948              	.L68:
 949              		.loc 1 410 0 discriminator 3
 950 0056 4FF00003 		mov	r3, #0
 951              	.L69:
 952              		.loc 1 410 0 discriminator 4
 953 005a 1846     		mov	r0, r3
 954 005c FFF7FEFF 		bl	assert_param
 411:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 412:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 955              		.loc 1 412 0 is_stmt 1 discriminator 4
 956 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 957 0062 002B     		cmp	r3, #0
 958 0064 06D0     		beq	.L70
 413:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 414:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the selected USART by setting the UE bit in the CR1 register */
 415:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_UE;
 959              		.loc 1 415 0
 960 0066 7B68     		ldr	r3, [r7, #4]
 961 0068 1B68     		ldr	r3, [r3, #0]
 962 006a 43F00102 		orr	r2, r3, #1
 963 006e 7B68     		ldr	r3, [r7, #4]
 964 0070 1A60     		str	r2, [r3, #0]
 965 0072 05E0     		b	.L63
 966              	.L70:
 416:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 417:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 418:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 419:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the selected USART by clearing the UE bit in the CR1 register */
 420:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_UE);
 967              		.loc 1 420 0
 968 0074 7B68     		ldr	r3, [r7, #4]
 969 0076 1B68     		ldr	r3, [r3, #0]
 970 0078 23F00102 		bic	r2, r3, #1
 971 007c 7B68     		ldr	r3, [r7, #4]
 972 007e 1A60     		str	r2, [r3, #0]
 973              	.L63:
 421:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 422:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 974              		.loc 1 422 0
 975 0080 07F10807 		add	r7, r7, #8
 976 0084 BD46     		mov	sp, r7
 977 0086 80BD     		pop	{r7, pc}
 978              	.L73:
 979              		.align	2
 980              	.L72:
 981 0088 00380140 		.word	1073821696
 982 008c 00440040 		.word	1073759232
 983 0090 00480040 		.word	1073760256
 984 0094 004C0040 		.word	1073761280
 985 0098 00500040 		.word	1073762304
 986              		.cfi_endproc
 987              	.LFE115:
 989              		.section	.text.USART_DirectionModeCmd,"ax",%progbits
 990              		.align	2
 991              		.global	USART_DirectionModeCmd
 992              		.thumb
 993              		.thumb_func
 995              	USART_DirectionModeCmd:
 996              	.LFB116:
 423:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 424:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 425:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's transmitter or receiver.
 426:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 427:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 428:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Direction: specifies the USART direction.
 429:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
 430:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Mode_Tx: USART Transmitter
 431:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Mode_Rx: USART Receiver
 432:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART transfer direction.
 433:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
 434:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 435:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 436:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DirectionModeCmd(USART_TypeDef* USARTx, uint32_t USART_DirectionMode, FunctionalState Ne
 437:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 997              		.loc 1 437 0
 998              		.cfi_startproc
 999              		@ args = 0, pretend = 0, frame = 16
 1000              		@ frame_needed = 1, uses_anonymous_args = 0
 1001 0000 80B5     		push	{r7, lr}
 1002              	.LCFI18:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 7, -8
 1005              		.cfi_offset 14, -4
 1006 0002 84B0     		sub	sp, sp, #16
 1007              	.LCFI19:
 1008              		.cfi_def_cfa_offset 24
 1009 0004 00AF     		add	r7, sp, #0
 1010              	.LCFI20:
 1011              		.cfi_def_cfa_register 7
 1012 0006 F860     		str	r0, [r7, #12]
 1013 0008 B960     		str	r1, [r7, #8]
 1014 000a 1346     		mov	r3, r2
 1015 000c FB71     		strb	r3, [r7, #7]
 438:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 439:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1016              		.loc 1 439 0
 1017 000e FA68     		ldr	r2, [r7, #12]
 1018 0010 274B     		ldr	r3, .L85
 1019 0012 9A42     		cmp	r2, r3
 1020 0014 0FD0     		beq	.L75
 1021              		.loc 1 439 0 is_stmt 0 discriminator 2
 1022 0016 FA68     		ldr	r2, [r7, #12]
 1023 0018 264B     		ldr	r3, .L85+4
 1024 001a 9A42     		cmp	r2, r3
 1025 001c 0BD0     		beq	.L75
 1026              		.loc 1 439 0 discriminator 1
 1027 001e FA68     		ldr	r2, [r7, #12]
 1028 0020 254B     		ldr	r3, .L85+8
 1029 0022 9A42     		cmp	r2, r3
 1030 0024 07D0     		beq	.L75
 1031              		.loc 1 439 0 discriminator 2
 1032 0026 FA68     		ldr	r2, [r7, #12]
 1033 0028 244B     		ldr	r3, .L85+12
 1034 002a 9A42     		cmp	r2, r3
 1035 002c 03D0     		beq	.L75
 1036              		.loc 1 439 0 discriminator 3
 1037 002e FA68     		ldr	r2, [r7, #12]
 1038 0030 234B     		ldr	r3, .L85+16
 1039 0032 9A42     		cmp	r2, r3
 1040 0034 02D1     		bne	.L76
 1041              	.L75:
 1042              		.loc 1 439 0 discriminator 1
 1043 0036 4FF00103 		mov	r3, #1
 1044 003a 01E0     		b	.L77
 1045              	.L76:
 1046              		.loc 1 439 0 discriminator 3
 1047 003c 4FF00003 		mov	r3, #0
 1048              	.L77:
 1049              		.loc 1 439 0 discriminator 4
 1050 0040 1846     		mov	r0, r3
 1051 0042 FFF7FEFF 		bl	assert_param
 440:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_MODE(USART_DirectionMode));
 1052              		.loc 1 440 0 is_stmt 1 discriminator 4
 1053 0046 BB68     		ldr	r3, [r7, #8]
 1054 0048 23F00C03 		bic	r3, r3, #12
 1055 004c 002B     		cmp	r3, #0
 1056 004e 05D1     		bne	.L78
 1057              		.loc 1 440 0 is_stmt 0 discriminator 1
 1058 0050 BB68     		ldr	r3, [r7, #8]
 1059 0052 002B     		cmp	r3, #0
 1060 0054 02D0     		beq	.L78
 1061              		.loc 1 440 0 discriminator 3
 1062 0056 4FF00103 		mov	r3, #1
 1063 005a 01E0     		b	.L79
 1064              	.L78:
 1065              		.loc 1 440 0 discriminator 2
 1066 005c 4FF00003 		mov	r3, #0
 1067              	.L79:
 1068              		.loc 1 440 0 discriminator 4
 1069 0060 1846     		mov	r0, r3
 1070 0062 FFF7FEFF 		bl	assert_param
 441:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 1071              		.loc 1 441 0 is_stmt 1 discriminator 4
 1072 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1073 0068 002B     		cmp	r3, #0
 1074 006a 02D0     		beq	.L80
 1075              		.loc 1 441 0 is_stmt 0 discriminator 2
 1076 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1077 006e 012B     		cmp	r3, #1
 1078 0070 02D1     		bne	.L81
 1079              	.L80:
 1080              		.loc 1 441 0 discriminator 1
 1081 0072 4FF00103 		mov	r3, #1
 1082 0076 01E0     		b	.L82
 1083              	.L81:
 1084              		.loc 1 441 0 discriminator 3
 1085 0078 4FF00003 		mov	r3, #0
 1086              	.L82:
 1087              		.loc 1 441 0 discriminator 4
 1088 007c 1846     		mov	r0, r3
 1089 007e FFF7FEFF 		bl	assert_param
 442:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 443:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1090              		.loc 1 443 0 is_stmt 1 discriminator 4
 1091 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1092 0084 002B     		cmp	r3, #0
 1093 0086 06D0     		beq	.L83
 444:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 445:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the USART's transfer interface by setting the TE and/or RE bits 
 446:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        in the USART CR1 register */
 447:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_DirectionMode;
 1094              		.loc 1 447 0
 1095 0088 FB68     		ldr	r3, [r7, #12]
 1096 008a 1A68     		ldr	r2, [r3, #0]
 1097 008c BB68     		ldr	r3, [r7, #8]
 1098 008e 1A43     		orrs	r2, r2, r3
 1099 0090 FB68     		ldr	r3, [r7, #12]
 1100 0092 1A60     		str	r2, [r3, #0]
 1101 0094 07E0     		b	.L74
 1102              	.L83:
 448:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 449:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 450:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 451:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the USART's transfer interface by clearing the TE and/or RE bits
 452:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        in the USART CR3 register */
 453:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~USART_DirectionMode;
 1103              		.loc 1 453 0
 1104 0096 FB68     		ldr	r3, [r7, #12]
 1105 0098 1A68     		ldr	r2, [r3, #0]
 1106 009a BB68     		ldr	r3, [r7, #8]
 1107 009c 6FEA0303 		mvn	r3, r3
 1108 00a0 1A40     		ands	r2, r2, r3
 1109 00a2 FB68     		ldr	r3, [r7, #12]
 1110 00a4 1A60     		str	r2, [r3, #0]
 1111              	.L74:
 454:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 455:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1112              		.loc 1 455 0
 1113 00a6 07F11007 		add	r7, r7, #16
 1114 00aa BD46     		mov	sp, r7
 1115 00ac 80BD     		pop	{r7, pc}
 1116              	.L86:
 1117 00ae 00BF     		.align	2
 1118              	.L85:
 1119 00b0 00380140 		.word	1073821696
 1120 00b4 00440040 		.word	1073759232
 1121 00b8 00480040 		.word	1073760256
 1122 00bc 004C0040 		.word	1073761280
 1123 00c0 00500040 		.word	1073762304
 1124              		.cfi_endproc
 1125              	.LFE116:
 1127              		.section	.text.USART_OverSampling8Cmd,"ax",%progbits
 1128              		.align	2
 1129              		.global	USART_OverSampling8Cmd
 1130              		.thumb
 1131              		.thumb_func
 1133              	USART_OverSampling8Cmd:
 1134              	.LFB117:
 456:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 457:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 458:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's 8x oversampling mode.
 459:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 460:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 461:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART 8x oversampling mode.
 462:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 463:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 464:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Init()
 465:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   function in order to have correct baudrate Divider value.
 466:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 467:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 468:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_OverSampling8Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
 469:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1135              		.loc 1 469 0
 1136              		.cfi_startproc
 1137              		@ args = 0, pretend = 0, frame = 8
 1138              		@ frame_needed = 1, uses_anonymous_args = 0
 1139 0000 80B5     		push	{r7, lr}
 1140              	.LCFI21:
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 82B0     		sub	sp, sp, #8
 1145              	.LCFI22:
 1146              		.cfi_def_cfa_offset 16
 1147 0004 00AF     		add	r7, sp, #0
 1148              	.LCFI23:
 1149              		.cfi_def_cfa_register 7
 1150 0006 7860     		str	r0, [r7, #4]
 1151 0008 0B46     		mov	r3, r1
 1152 000a FB70     		strb	r3, [r7, #3]
 470:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 471:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1153              		.loc 1 471 0
 1154 000c 7A68     		ldr	r2, [r7, #4]
 1155 000e 1E4B     		ldr	r3, .L96
 1156 0010 9A42     		cmp	r2, r3
 1157 0012 0FD0     		beq	.L88
 1158              		.loc 1 471 0 is_stmt 0 discriminator 2
 1159 0014 7A68     		ldr	r2, [r7, #4]
 1160 0016 1D4B     		ldr	r3, .L96+4
 1161 0018 9A42     		cmp	r2, r3
 1162 001a 0BD0     		beq	.L88
 1163              		.loc 1 471 0 discriminator 1
 1164 001c 7A68     		ldr	r2, [r7, #4]
 1165 001e 1C4B     		ldr	r3, .L96+8
 1166 0020 9A42     		cmp	r2, r3
 1167 0022 07D0     		beq	.L88
 1168              		.loc 1 471 0 discriminator 2
 1169 0024 7A68     		ldr	r2, [r7, #4]
 1170 0026 1B4B     		ldr	r3, .L96+12
 1171 0028 9A42     		cmp	r2, r3
 1172 002a 03D0     		beq	.L88
 1173              		.loc 1 471 0 discriminator 3
 1174 002c 7A68     		ldr	r2, [r7, #4]
 1175 002e 1A4B     		ldr	r3, .L96+16
 1176 0030 9A42     		cmp	r2, r3
 1177 0032 02D1     		bne	.L89
 1178              	.L88:
 1179              		.loc 1 471 0 discriminator 1
 1180 0034 4FF00103 		mov	r3, #1
 1181 0038 01E0     		b	.L90
 1182              	.L89:
 1183              		.loc 1 471 0 discriminator 3
 1184 003a 4FF00003 		mov	r3, #0
 1185              	.L90:
 1186              		.loc 1 471 0 discriminator 4
 1187 003e 1846     		mov	r0, r3
 1188 0040 FFF7FEFF 		bl	assert_param
 472:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1189              		.loc 1 472 0 is_stmt 1 discriminator 4
 1190 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1191 0046 002B     		cmp	r3, #0
 1192 0048 02D0     		beq	.L91
 1193              		.loc 1 472 0 is_stmt 0 discriminator 2
 1194 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1195 004c 012B     		cmp	r3, #1
 1196 004e 02D1     		bne	.L92
 1197              	.L91:
 1198              		.loc 1 472 0 discriminator 1
 1199 0050 4FF00103 		mov	r3, #1
 1200 0054 01E0     		b	.L93
 1201              	.L92:
 1202              		.loc 1 472 0 discriminator 3
 1203 0056 4FF00003 		mov	r3, #0
 1204              	.L93:
 1205              		.loc 1 472 0 discriminator 4
 1206 005a 1846     		mov	r0, r3
 1207 005c FFF7FEFF 		bl	assert_param
 473:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 474:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1208              		.loc 1 474 0 is_stmt 1 discriminator 4
 1209 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1210 0062 002B     		cmp	r3, #0
 1211 0064 06D0     		beq	.L94
 475:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 476:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the 8x Oversampling mode by setting the OVER8 bit in the CR1 register */
 477:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_OVER8;
 1212              		.loc 1 477 0
 1213 0066 7B68     		ldr	r3, [r7, #4]
 1214 0068 1B68     		ldr	r3, [r3, #0]
 1215 006a 43F40042 		orr	r2, r3, #32768
 1216 006e 7B68     		ldr	r3, [r7, #4]
 1217 0070 1A60     		str	r2, [r3, #0]
 1218 0072 05E0     		b	.L87
 1219              	.L94:
 478:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 479:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 480:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 481:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the 8x Oversampling mode by clearing the OVER8 bit in the CR1 register */
 482:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_OVER8);
 1220              		.loc 1 482 0
 1221 0074 7B68     		ldr	r3, [r7, #4]
 1222 0076 1B68     		ldr	r3, [r3, #0]
 1223 0078 23F40042 		bic	r2, r3, #32768
 1224 007c 7B68     		ldr	r3, [r7, #4]
 1225 007e 1A60     		str	r2, [r3, #0]
 1226              	.L87:
 483:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 484:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1227              		.loc 1 484 0
 1228 0080 07F10807 		add	r7, r7, #8
 1229 0084 BD46     		mov	sp, r7
 1230 0086 80BD     		pop	{r7, pc}
 1231              	.L97:
 1232              		.align	2
 1233              	.L96:
 1234 0088 00380140 		.word	1073821696
 1235 008c 00440040 		.word	1073759232
 1236 0090 00480040 		.word	1073760256
 1237 0094 004C0040 		.word	1073761280
 1238 0098 00500040 		.word	1073762304
 1239              		.cfi_endproc
 1240              	.LFE117:
 1242              		.section	.text.USART_OneBitMethodCmd,"ax",%progbits
 1243              		.align	2
 1244              		.global	USART_OneBitMethodCmd
 1245              		.thumb
 1246              		.thumb_func
 1248              	USART_OneBitMethodCmd:
 1249              	.LFB118:
 485:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 486:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 487:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's one bit sampling method.
 488:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 489:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 490:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART one bit sampling method.
 491:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 492:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 493:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.
 494:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 495:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 496:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_OneBitMethodCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 497:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1250              		.loc 1 497 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 8
 1253              		@ frame_needed = 1, uses_anonymous_args = 0
 1254 0000 80B5     		push	{r7, lr}
 1255              	.LCFI24:
 1256              		.cfi_def_cfa_offset 8
 1257              		.cfi_offset 7, -8
 1258              		.cfi_offset 14, -4
 1259 0002 82B0     		sub	sp, sp, #8
 1260              	.LCFI25:
 1261              		.cfi_def_cfa_offset 16
 1262 0004 00AF     		add	r7, sp, #0
 1263              	.LCFI26:
 1264              		.cfi_def_cfa_register 7
 1265 0006 7860     		str	r0, [r7, #4]
 1266 0008 0B46     		mov	r3, r1
 1267 000a FB70     		strb	r3, [r7, #3]
 498:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 499:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1268              		.loc 1 499 0
 1269 000c 7A68     		ldr	r2, [r7, #4]
 1270 000e 1E4B     		ldr	r3, .L107
 1271 0010 9A42     		cmp	r2, r3
 1272 0012 0FD0     		beq	.L99
 1273              		.loc 1 499 0 is_stmt 0 discriminator 2
 1274 0014 7A68     		ldr	r2, [r7, #4]
 1275 0016 1D4B     		ldr	r3, .L107+4
 1276 0018 9A42     		cmp	r2, r3
 1277 001a 0BD0     		beq	.L99
 1278              		.loc 1 499 0 discriminator 1
 1279 001c 7A68     		ldr	r2, [r7, #4]
 1280 001e 1C4B     		ldr	r3, .L107+8
 1281 0020 9A42     		cmp	r2, r3
 1282 0022 07D0     		beq	.L99
 1283              		.loc 1 499 0 discriminator 2
 1284 0024 7A68     		ldr	r2, [r7, #4]
 1285 0026 1B4B     		ldr	r3, .L107+12
 1286 0028 9A42     		cmp	r2, r3
 1287 002a 03D0     		beq	.L99
 1288              		.loc 1 499 0 discriminator 3
 1289 002c 7A68     		ldr	r2, [r7, #4]
 1290 002e 1A4B     		ldr	r3, .L107+16
 1291 0030 9A42     		cmp	r2, r3
 1292 0032 02D1     		bne	.L100
 1293              	.L99:
 1294              		.loc 1 499 0 discriminator 1
 1295 0034 4FF00103 		mov	r3, #1
 1296 0038 01E0     		b	.L101
 1297              	.L100:
 1298              		.loc 1 499 0 discriminator 3
 1299 003a 4FF00003 		mov	r3, #0
 1300              	.L101:
 1301              		.loc 1 499 0 discriminator 4
 1302 003e 1846     		mov	r0, r3
 1303 0040 FFF7FEFF 		bl	assert_param
 500:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1304              		.loc 1 500 0 is_stmt 1 discriminator 4
 1305 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1306 0046 002B     		cmp	r3, #0
 1307 0048 02D0     		beq	.L102
 1308              		.loc 1 500 0 is_stmt 0 discriminator 2
 1309 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1310 004c 012B     		cmp	r3, #1
 1311 004e 02D1     		bne	.L103
 1312              	.L102:
 1313              		.loc 1 500 0 discriminator 1
 1314 0050 4FF00103 		mov	r3, #1
 1315 0054 01E0     		b	.L104
 1316              	.L103:
 1317              		.loc 1 500 0 discriminator 3
 1318 0056 4FF00003 		mov	r3, #0
 1319              	.L104:
 1320              		.loc 1 500 0 discriminator 4
 1321 005a 1846     		mov	r0, r3
 1322 005c FFF7FEFF 		bl	assert_param
 501:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 502:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1323              		.loc 1 502 0 is_stmt 1 discriminator 4
 1324 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1325 0062 002B     		cmp	r3, #0
 1326 0064 06D0     		beq	.L105
 503:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 504:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the one bit method by setting the ONEBITE bit in the CR3 register */
 505:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_ONEBIT;
 1327              		.loc 1 505 0
 1328 0066 7B68     		ldr	r3, [r7, #4]
 1329 0068 9B68     		ldr	r3, [r3, #8]
 1330 006a 43F40062 		orr	r2, r3, #2048
 1331 006e 7B68     		ldr	r3, [r7, #4]
 1332 0070 9A60     		str	r2, [r3, #8]
 1333 0072 05E0     		b	.L98
 1334              	.L105:
 506:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 507:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 508:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 509:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the one bit method by clearing the ONEBITE bit in the CR3 register */
 510:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_ONEBIT);
 1335              		.loc 1 510 0
 1336 0074 7B68     		ldr	r3, [r7, #4]
 1337 0076 9B68     		ldr	r3, [r3, #8]
 1338 0078 23F40062 		bic	r2, r3, #2048
 1339 007c 7B68     		ldr	r3, [r7, #4]
 1340 007e 9A60     		str	r2, [r3, #8]
 1341              	.L98:
 511:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 512:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1342              		.loc 1 512 0
 1343 0080 07F10807 		add	r7, r7, #8
 1344 0084 BD46     		mov	sp, r7
 1345 0086 80BD     		pop	{r7, pc}
 1346              	.L108:
 1347              		.align	2
 1348              	.L107:
 1349 0088 00380140 		.word	1073821696
 1350 008c 00440040 		.word	1073759232
 1351 0090 00480040 		.word	1073760256
 1352 0094 004C0040 		.word	1073761280
 1353 0098 00500040 		.word	1073762304
 1354              		.cfi_endproc
 1355              	.LFE118:
 1357              		.section	.text.USART_MSBFirstCmd,"ax",%progbits
 1358              		.align	2
 1359              		.global	USART_MSBFirstCmd
 1360              		.thumb
 1361              		.thumb_func
 1363              	USART_MSBFirstCmd:
 1364              	.LFB119:
 513:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 514:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 515:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's most significant bit first 
 516:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         transmitted/received following the start bit.
 517:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 518:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 519:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART most significant bit first
 520:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         transmitted/received following the start bit.
 521:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 522:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 523:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function. 
 524:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 525:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 526:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_MSBFirstCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 527:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1365              		.loc 1 527 0
 1366              		.cfi_startproc
 1367              		@ args = 0, pretend = 0, frame = 8
 1368              		@ frame_needed = 1, uses_anonymous_args = 0
 1369 0000 80B5     		push	{r7, lr}
 1370              	.LCFI27:
 1371              		.cfi_def_cfa_offset 8
 1372              		.cfi_offset 7, -8
 1373              		.cfi_offset 14, -4
 1374 0002 82B0     		sub	sp, sp, #8
 1375              	.LCFI28:
 1376              		.cfi_def_cfa_offset 16
 1377 0004 00AF     		add	r7, sp, #0
 1378              	.LCFI29:
 1379              		.cfi_def_cfa_register 7
 1380 0006 7860     		str	r0, [r7, #4]
 1381 0008 0B46     		mov	r3, r1
 1382 000a FB70     		strb	r3, [r7, #3]
 528:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 529:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1383              		.loc 1 529 0
 1384 000c 7A68     		ldr	r2, [r7, #4]
 1385 000e 1E4B     		ldr	r3, .L118
 1386 0010 9A42     		cmp	r2, r3
 1387 0012 0FD0     		beq	.L110
 1388              		.loc 1 529 0 is_stmt 0 discriminator 2
 1389 0014 7A68     		ldr	r2, [r7, #4]
 1390 0016 1D4B     		ldr	r3, .L118+4
 1391 0018 9A42     		cmp	r2, r3
 1392 001a 0BD0     		beq	.L110
 1393              		.loc 1 529 0 discriminator 1
 1394 001c 7A68     		ldr	r2, [r7, #4]
 1395 001e 1C4B     		ldr	r3, .L118+8
 1396 0020 9A42     		cmp	r2, r3
 1397 0022 07D0     		beq	.L110
 1398              		.loc 1 529 0 discriminator 2
 1399 0024 7A68     		ldr	r2, [r7, #4]
 1400 0026 1B4B     		ldr	r3, .L118+12
 1401 0028 9A42     		cmp	r2, r3
 1402 002a 03D0     		beq	.L110
 1403              		.loc 1 529 0 discriminator 3
 1404 002c 7A68     		ldr	r2, [r7, #4]
 1405 002e 1A4B     		ldr	r3, .L118+16
 1406 0030 9A42     		cmp	r2, r3
 1407 0032 02D1     		bne	.L111
 1408              	.L110:
 1409              		.loc 1 529 0 discriminator 1
 1410 0034 4FF00103 		mov	r3, #1
 1411 0038 01E0     		b	.L112
 1412              	.L111:
 1413              		.loc 1 529 0 discriminator 3
 1414 003a 4FF00003 		mov	r3, #0
 1415              	.L112:
 1416              		.loc 1 529 0 discriminator 4
 1417 003e 1846     		mov	r0, r3
 1418 0040 FFF7FEFF 		bl	assert_param
 530:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1419              		.loc 1 530 0 is_stmt 1 discriminator 4
 1420 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1421 0046 002B     		cmp	r3, #0
 1422 0048 02D0     		beq	.L113
 1423              		.loc 1 530 0 is_stmt 0 discriminator 2
 1424 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1425 004c 012B     		cmp	r3, #1
 1426 004e 02D1     		bne	.L114
 1427              	.L113:
 1428              		.loc 1 530 0 discriminator 1
 1429 0050 4FF00103 		mov	r3, #1
 1430 0054 01E0     		b	.L115
 1431              	.L114:
 1432              		.loc 1 530 0 discriminator 3
 1433 0056 4FF00003 		mov	r3, #0
 1434              	.L115:
 1435              		.loc 1 530 0 discriminator 4
 1436 005a 1846     		mov	r0, r3
 1437 005c FFF7FEFF 		bl	assert_param
 531:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 532:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1438              		.loc 1 532 0 is_stmt 1 discriminator 4
 1439 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1440 0062 002B     		cmp	r3, #0
 1441 0064 06D0     		beq	.L116
 533:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 534:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the most significant bit first transmitted/received following the
 535:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        start bit by setting the MSBFIRST bit in the CR2 register */
 536:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_MSBFIRST;
 1442              		.loc 1 536 0
 1443 0066 7B68     		ldr	r3, [r7, #4]
 1444 0068 5B68     		ldr	r3, [r3, #4]
 1445 006a 43F40022 		orr	r2, r3, #524288
 1446 006e 7B68     		ldr	r3, [r7, #4]
 1447 0070 5A60     		str	r2, [r3, #4]
 1448 0072 05E0     		b	.L109
 1449              	.L116:
 537:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 538:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 539:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 540:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the most significant bit first transmitted/received following the
 541:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        start bit by clearing the MSBFIRST bit in the CR2 register */
 542:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_MSBFIRST);
 1450              		.loc 1 542 0
 1451 0074 7B68     		ldr	r3, [r7, #4]
 1452 0076 5B68     		ldr	r3, [r3, #4]
 1453 0078 23F40022 		bic	r2, r3, #524288
 1454 007c 7B68     		ldr	r3, [r7, #4]
 1455 007e 5A60     		str	r2, [r3, #4]
 1456              	.L109:
 543:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 544:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1457              		.loc 1 544 0
 1458 0080 07F10807 		add	r7, r7, #8
 1459 0084 BD46     		mov	sp, r7
 1460 0086 80BD     		pop	{r7, pc}
 1461              	.L119:
 1462              		.align	2
 1463              	.L118:
 1464 0088 00380140 		.word	1073821696
 1465 008c 00440040 		.word	1073759232
 1466 0090 00480040 		.word	1073760256
 1467 0094 004C0040 		.word	1073761280
 1468 0098 00500040 		.word	1073762304
 1469              		.cfi_endproc
 1470              	.LFE119:
 1472              		.section	.text.USART_DataInvCmd,"ax",%progbits
 1473              		.align	2
 1474              		.global	USART_DataInvCmd
 1475              		.thumb
 1476              		.thumb_func
 1478              	USART_DataInvCmd:
 1479              	.LFB120:
 545:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 546:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 547:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the binary data inversion.
 548:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 549:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 550:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new defined levels for the USART data.
 551:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 552:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   @arg  ENABLE: Logical data from the data register are send/received in negative
 553:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         logic. (1=L, 0=H). The parity bit is also inverted.
 554:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   @arg  DISABLE: Logical data from the data register are send/received in positive
 555:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         logic. (1=H, 0=L) 
 556:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 557:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function. 
 558:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 559:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 560:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DataInvCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 561:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1480              		.loc 1 561 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 8
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484 0000 80B5     		push	{r7, lr}
 1485              	.LCFI30:
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 7, -8
 1488              		.cfi_offset 14, -4
 1489 0002 82B0     		sub	sp, sp, #8
 1490              	.LCFI31:
 1491              		.cfi_def_cfa_offset 16
 1492 0004 00AF     		add	r7, sp, #0
 1493              	.LCFI32:
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
 1496 0008 0B46     		mov	r3, r1
 1497 000a FB70     		strb	r3, [r7, #3]
 562:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 563:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1498              		.loc 1 563 0
 1499 000c 7A68     		ldr	r2, [r7, #4]
 1500 000e 1E4B     		ldr	r3, .L129
 1501 0010 9A42     		cmp	r2, r3
 1502 0012 0FD0     		beq	.L121
 1503              		.loc 1 563 0 is_stmt 0 discriminator 2
 1504 0014 7A68     		ldr	r2, [r7, #4]
 1505 0016 1D4B     		ldr	r3, .L129+4
 1506 0018 9A42     		cmp	r2, r3
 1507 001a 0BD0     		beq	.L121
 1508              		.loc 1 563 0 discriminator 1
 1509 001c 7A68     		ldr	r2, [r7, #4]
 1510 001e 1C4B     		ldr	r3, .L129+8
 1511 0020 9A42     		cmp	r2, r3
 1512 0022 07D0     		beq	.L121
 1513              		.loc 1 563 0 discriminator 2
 1514 0024 7A68     		ldr	r2, [r7, #4]
 1515 0026 1B4B     		ldr	r3, .L129+12
 1516 0028 9A42     		cmp	r2, r3
 1517 002a 03D0     		beq	.L121
 1518              		.loc 1 563 0 discriminator 3
 1519 002c 7A68     		ldr	r2, [r7, #4]
 1520 002e 1A4B     		ldr	r3, .L129+16
 1521 0030 9A42     		cmp	r2, r3
 1522 0032 02D1     		bne	.L122
 1523              	.L121:
 1524              		.loc 1 563 0 discriminator 1
 1525 0034 4FF00103 		mov	r3, #1
 1526 0038 01E0     		b	.L123
 1527              	.L122:
 1528              		.loc 1 563 0 discriminator 3
 1529 003a 4FF00003 		mov	r3, #0
 1530              	.L123:
 1531              		.loc 1 563 0 discriminator 4
 1532 003e 1846     		mov	r0, r3
 1533 0040 FFF7FEFF 		bl	assert_param
 564:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1534              		.loc 1 564 0 is_stmt 1 discriminator 4
 1535 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1536 0046 002B     		cmp	r3, #0
 1537 0048 02D0     		beq	.L124
 1538              		.loc 1 564 0 is_stmt 0 discriminator 2
 1539 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1540 004c 012B     		cmp	r3, #1
 1541 004e 02D1     		bne	.L125
 1542              	.L124:
 1543              		.loc 1 564 0 discriminator 1
 1544 0050 4FF00103 		mov	r3, #1
 1545 0054 01E0     		b	.L126
 1546              	.L125:
 1547              		.loc 1 564 0 discriminator 3
 1548 0056 4FF00003 		mov	r3, #0
 1549              	.L126:
 1550              		.loc 1 564 0 discriminator 4
 1551 005a 1846     		mov	r0, r3
 1552 005c FFF7FEFF 		bl	assert_param
 565:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 566:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1553              		.loc 1 566 0 is_stmt 1 discriminator 4
 1554 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1555 0062 002B     		cmp	r3, #0
 1556 0064 06D0     		beq	.L127
 567:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 568:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the binary data inversion feature by setting the DATAINV bit in
 569:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        the CR2 register */
 570:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_DATAINV;
 1557              		.loc 1 570 0
 1558 0066 7B68     		ldr	r3, [r7, #4]
 1559 0068 5B68     		ldr	r3, [r3, #4]
 1560 006a 43F48022 		orr	r2, r3, #262144
 1561 006e 7B68     		ldr	r3, [r7, #4]
 1562 0070 5A60     		str	r2, [r3, #4]
 1563 0072 05E0     		b	.L120
 1564              	.L127:
 571:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 572:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 573:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 574:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the binary data inversion feature by clearing the DATAINV bit in
 575:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        the CR2 register */
 576:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_DATAINV);
 1565              		.loc 1 576 0
 1566 0074 7B68     		ldr	r3, [r7, #4]
 1567 0076 5B68     		ldr	r3, [r3, #4]
 1568 0078 23F48022 		bic	r2, r3, #262144
 1569 007c 7B68     		ldr	r3, [r7, #4]
 1570 007e 5A60     		str	r2, [r3, #4]
 1571              	.L120:
 577:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 578:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1572              		.loc 1 578 0
 1573 0080 07F10807 		add	r7, r7, #8
 1574 0084 BD46     		mov	sp, r7
 1575 0086 80BD     		pop	{r7, pc}
 1576              	.L130:
 1577              		.align	2
 1578              	.L129:
 1579 0088 00380140 		.word	1073821696
 1580 008c 00440040 		.word	1073759232
 1581 0090 00480040 		.word	1073760256
 1582 0094 004C0040 		.word	1073761280
 1583 0098 00500040 		.word	1073762304
 1584              		.cfi_endproc
 1585              	.LFE120:
 1587              		.section	.text.USART_InvPinCmd,"ax",%progbits
 1588              		.align	2
 1589              		.global	USART_InvPinCmd
 1590              		.thumb
 1591              		.thumb_func
 1593              	USART_InvPinCmd:
 1594              	.LFB121:
 579:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 580:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 581:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the Pin(s) active level inversion.
 582:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 583:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 584:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_InvPin: specifies the USART pin(s) to invert.
 585:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
 586:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_InvPin_Tx: USART Tx pin active level inversion.
 587:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_InvPin_Rx: USART Rx pin active level inversion.
 588:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new active level status for the USART pin(s).
 589:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 590:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          - ENABLE: pin(s) signal values are inverted (Vdd =0, Gnd =1).
 591:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          - DISABLE: pin(s) signal works using the standard logic levels (Vdd =1, Gnd =0).
 592:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 593:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.  
 594:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 595:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 596:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_InvPinCmd(USART_TypeDef* USARTx, uint32_t USART_InvPin, FunctionalState NewState)
 597:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1595              		.loc 1 597 0
 1596              		.cfi_startproc
 1597              		@ args = 0, pretend = 0, frame = 16
 1598              		@ frame_needed = 1, uses_anonymous_args = 0
 1599 0000 80B5     		push	{r7, lr}
 1600              	.LCFI33:
 1601              		.cfi_def_cfa_offset 8
 1602              		.cfi_offset 7, -8
 1603              		.cfi_offset 14, -4
 1604 0002 84B0     		sub	sp, sp, #16
 1605              	.LCFI34:
 1606              		.cfi_def_cfa_offset 24
 1607 0004 00AF     		add	r7, sp, #0
 1608              	.LCFI35:
 1609              		.cfi_def_cfa_register 7
 1610 0006 F860     		str	r0, [r7, #12]
 1611 0008 B960     		str	r1, [r7, #8]
 1612 000a 1346     		mov	r3, r2
 1613 000c FB71     		strb	r3, [r7, #7]
 598:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 599:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1614              		.loc 1 599 0
 1615 000e FA68     		ldr	r2, [r7, #12]
 1616 0010 274B     		ldr	r3, .L142
 1617 0012 9A42     		cmp	r2, r3
 1618 0014 0FD0     		beq	.L132
 1619              		.loc 1 599 0 is_stmt 0 discriminator 2
 1620 0016 FA68     		ldr	r2, [r7, #12]
 1621 0018 264B     		ldr	r3, .L142+4
 1622 001a 9A42     		cmp	r2, r3
 1623 001c 0BD0     		beq	.L132
 1624              		.loc 1 599 0 discriminator 1
 1625 001e FA68     		ldr	r2, [r7, #12]
 1626 0020 254B     		ldr	r3, .L142+8
 1627 0022 9A42     		cmp	r2, r3
 1628 0024 07D0     		beq	.L132
 1629              		.loc 1 599 0 discriminator 2
 1630 0026 FA68     		ldr	r2, [r7, #12]
 1631 0028 244B     		ldr	r3, .L142+12
 1632 002a 9A42     		cmp	r2, r3
 1633 002c 03D0     		beq	.L132
 1634              		.loc 1 599 0 discriminator 3
 1635 002e FA68     		ldr	r2, [r7, #12]
 1636 0030 234B     		ldr	r3, .L142+16
 1637 0032 9A42     		cmp	r2, r3
 1638 0034 02D1     		bne	.L133
 1639              	.L132:
 1640              		.loc 1 599 0 discriminator 1
 1641 0036 4FF00103 		mov	r3, #1
 1642 003a 01E0     		b	.L134
 1643              	.L133:
 1644              		.loc 1 599 0 discriminator 3
 1645 003c 4FF00003 		mov	r3, #0
 1646              	.L134:
 1647              		.loc 1 599 0 discriminator 4
 1648 0040 1846     		mov	r0, r3
 1649 0042 FFF7FEFF 		bl	assert_param
 600:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_INVERSTION_PIN(USART_InvPin));
 1650              		.loc 1 600 0 is_stmt 1 discriminator 4
 1651 0046 BB68     		ldr	r3, [r7, #8]
 1652 0048 23F44033 		bic	r3, r3, #196608
 1653 004c 002B     		cmp	r3, #0
 1654 004e 05D1     		bne	.L135
 1655              		.loc 1 600 0 is_stmt 0 discriminator 1
 1656 0050 BB68     		ldr	r3, [r7, #8]
 1657 0052 002B     		cmp	r3, #0
 1658 0054 02D0     		beq	.L135
 1659              		.loc 1 600 0 discriminator 3
 1660 0056 4FF00103 		mov	r3, #1
 1661 005a 01E0     		b	.L136
 1662              	.L135:
 1663              		.loc 1 600 0 discriminator 2
 1664 005c 4FF00003 		mov	r3, #0
 1665              	.L136:
 1666              		.loc 1 600 0 discriminator 4
 1667 0060 1846     		mov	r0, r3
 1668 0062 FFF7FEFF 		bl	assert_param
 601:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 1669              		.loc 1 601 0 is_stmt 1 discriminator 4
 1670 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1671 0068 002B     		cmp	r3, #0
 1672 006a 02D0     		beq	.L137
 1673              		.loc 1 601 0 is_stmt 0 discriminator 2
 1674 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1675 006e 012B     		cmp	r3, #1
 1676 0070 02D1     		bne	.L138
 1677              	.L137:
 1678              		.loc 1 601 0 discriminator 1
 1679 0072 4FF00103 		mov	r3, #1
 1680 0076 01E0     		b	.L139
 1681              	.L138:
 1682              		.loc 1 601 0 discriminator 3
 1683 0078 4FF00003 		mov	r3, #0
 1684              	.L139:
 1685              		.loc 1 601 0 discriminator 4
 1686 007c 1846     		mov	r0, r3
 1687 007e FFF7FEFF 		bl	assert_param
 602:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 603:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1688              		.loc 1 603 0 is_stmt 1 discriminator 4
 1689 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1690 0084 002B     		cmp	r3, #0
 1691 0086 06D0     		beq	.L140
 604:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 605:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the active level inversion for selected pins by setting the TXINV 
 606:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        and/or RXINV bits in the USART CR2 register */
 607:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_InvPin;
 1692              		.loc 1 607 0
 1693 0088 FB68     		ldr	r3, [r7, #12]
 1694 008a 5A68     		ldr	r2, [r3, #4]
 1695 008c BB68     		ldr	r3, [r7, #8]
 1696 008e 1A43     		orrs	r2, r2, r3
 1697 0090 FB68     		ldr	r3, [r7, #12]
 1698 0092 5A60     		str	r2, [r3, #4]
 1699 0094 07E0     		b	.L131
 1700              	.L140:
 608:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 609:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 610:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 611:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the active level inversion for selected requests by clearing the 
 612:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        TXINV and/or RXINV bits in the USART CR2 register */
 613:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~USART_InvPin;
 1701              		.loc 1 613 0
 1702 0096 FB68     		ldr	r3, [r7, #12]
 1703 0098 5A68     		ldr	r2, [r3, #4]
 1704 009a BB68     		ldr	r3, [r7, #8]
 1705 009c 6FEA0303 		mvn	r3, r3
 1706 00a0 1A40     		ands	r2, r2, r3
 1707 00a2 FB68     		ldr	r3, [r7, #12]
 1708 00a4 5A60     		str	r2, [r3, #4]
 1709              	.L131:
 614:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 615:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1710              		.loc 1 615 0
 1711 00a6 07F11007 		add	r7, r7, #16
 1712 00aa BD46     		mov	sp, r7
 1713 00ac 80BD     		pop	{r7, pc}
 1714              	.L143:
 1715 00ae 00BF     		.align	2
 1716              	.L142:
 1717 00b0 00380140 		.word	1073821696
 1718 00b4 00440040 		.word	1073759232
 1719 00b8 00480040 		.word	1073760256
 1720 00bc 004C0040 		.word	1073761280
 1721 00c0 00500040 		.word	1073762304
 1722              		.cfi_endproc
 1723              	.LFE121:
 1725              		.section	.text.USART_SWAPPinCmd,"ax",%progbits
 1726              		.align	2
 1727              		.global	USART_SWAPPinCmd
 1728              		.thumb
 1729              		.thumb_func
 1731              	USART_SWAPPinCmd:
 1732              	.LFB122:
 616:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 617:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 618:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the swap Tx/Rx pins.
 619:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 620:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 621:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx TX/RX pins pinout.
 622:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 623:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg ENABLE: The TX and RX pins functions are swapped.
 624:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg DISABLE: TX/RX pins are used as defined in standard pinout
 625:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 626:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.
 627:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 628:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 629:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SWAPPinCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 630:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1733              		.loc 1 630 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 8
 1736              		@ frame_needed = 1, uses_anonymous_args = 0
 1737 0000 80B5     		push	{r7, lr}
 1738              	.LCFI36:
 1739              		.cfi_def_cfa_offset 8
 1740              		.cfi_offset 7, -8
 1741              		.cfi_offset 14, -4
 1742 0002 82B0     		sub	sp, sp, #8
 1743              	.LCFI37:
 1744              		.cfi_def_cfa_offset 16
 1745 0004 00AF     		add	r7, sp, #0
 1746              	.LCFI38:
 1747              		.cfi_def_cfa_register 7
 1748 0006 7860     		str	r0, [r7, #4]
 1749 0008 0B46     		mov	r3, r1
 1750 000a FB70     		strb	r3, [r7, #3]
 631:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 632:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1751              		.loc 1 632 0
 1752 000c 7A68     		ldr	r2, [r7, #4]
 1753 000e 1E4B     		ldr	r3, .L153
 1754 0010 9A42     		cmp	r2, r3
 1755 0012 0FD0     		beq	.L145
 1756              		.loc 1 632 0 is_stmt 0 discriminator 2
 1757 0014 7A68     		ldr	r2, [r7, #4]
 1758 0016 1D4B     		ldr	r3, .L153+4
 1759 0018 9A42     		cmp	r2, r3
 1760 001a 0BD0     		beq	.L145
 1761              		.loc 1 632 0 discriminator 1
 1762 001c 7A68     		ldr	r2, [r7, #4]
 1763 001e 1C4B     		ldr	r3, .L153+8
 1764 0020 9A42     		cmp	r2, r3
 1765 0022 07D0     		beq	.L145
 1766              		.loc 1 632 0 discriminator 2
 1767 0024 7A68     		ldr	r2, [r7, #4]
 1768 0026 1B4B     		ldr	r3, .L153+12
 1769 0028 9A42     		cmp	r2, r3
 1770 002a 03D0     		beq	.L145
 1771              		.loc 1 632 0 discriminator 3
 1772 002c 7A68     		ldr	r2, [r7, #4]
 1773 002e 1A4B     		ldr	r3, .L153+16
 1774 0030 9A42     		cmp	r2, r3
 1775 0032 02D1     		bne	.L146
 1776              	.L145:
 1777              		.loc 1 632 0 discriminator 1
 1778 0034 4FF00103 		mov	r3, #1
 1779 0038 01E0     		b	.L147
 1780              	.L146:
 1781              		.loc 1 632 0 discriminator 3
 1782 003a 4FF00003 		mov	r3, #0
 1783              	.L147:
 1784              		.loc 1 632 0 discriminator 4
 1785 003e 1846     		mov	r0, r3
 1786 0040 FFF7FEFF 		bl	assert_param
 633:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1787              		.loc 1 633 0 is_stmt 1 discriminator 4
 1788 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1789 0046 002B     		cmp	r3, #0
 1790 0048 02D0     		beq	.L148
 1791              		.loc 1 633 0 is_stmt 0 discriminator 2
 1792 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1793 004c 012B     		cmp	r3, #1
 1794 004e 02D1     		bne	.L149
 1795              	.L148:
 1796              		.loc 1 633 0 discriminator 1
 1797 0050 4FF00103 		mov	r3, #1
 1798 0054 01E0     		b	.L150
 1799              	.L149:
 1800              		.loc 1 633 0 discriminator 3
 1801 0056 4FF00003 		mov	r3, #0
 1802              	.L150:
 1803              		.loc 1 633 0 discriminator 4
 1804 005a 1846     		mov	r0, r3
 1805 005c FFF7FEFF 		bl	assert_param
 634:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 635:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1806              		.loc 1 635 0 is_stmt 1 discriminator 4
 1807 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1808 0062 002B     		cmp	r3, #0
 1809 0064 06D0     		beq	.L151
 636:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 637:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the SWAP feature by setting the SWAP bit in the CR2 register */
 638:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_SWAP;
 1810              		.loc 1 638 0
 1811 0066 7B68     		ldr	r3, [r7, #4]
 1812 0068 5B68     		ldr	r3, [r3, #4]
 1813 006a 43F40042 		orr	r2, r3, #32768
 1814 006e 7B68     		ldr	r3, [r7, #4]
 1815 0070 5A60     		str	r2, [r3, #4]
 1816 0072 05E0     		b	.L144
 1817              	.L151:
 639:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 640:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 641:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 642:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the SWAP feature by clearing the SWAP bit in the CR2 register */
 643:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_SWAP);
 1818              		.loc 1 643 0
 1819 0074 7B68     		ldr	r3, [r7, #4]
 1820 0076 5B68     		ldr	r3, [r3, #4]
 1821 0078 23F40042 		bic	r2, r3, #32768
 1822 007c 7B68     		ldr	r3, [r7, #4]
 1823 007e 5A60     		str	r2, [r3, #4]
 1824              	.L144:
 644:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 645:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1825              		.loc 1 645 0
 1826 0080 07F10807 		add	r7, r7, #8
 1827 0084 BD46     		mov	sp, r7
 1828 0086 80BD     		pop	{r7, pc}
 1829              	.L154:
 1830              		.align	2
 1831              	.L153:
 1832 0088 00380140 		.word	1073821696
 1833 008c 00440040 		.word	1073759232
 1834 0090 00480040 		.word	1073760256
 1835 0094 004C0040 		.word	1073761280
 1836 0098 00500040 		.word	1073762304
 1837              		.cfi_endproc
 1838              	.LFE122:
 1840              		.section	.text.USART_ReceiverTimeOutCmd,"ax",%progbits
 1841              		.align	2
 1842              		.global	USART_ReceiverTimeOutCmd
 1843              		.thumb
 1844              		.thumb_func
 1846              	USART_ReceiverTimeOutCmd:
 1847              	.LFB123:
 646:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 647:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 648:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the receiver Time Out feature.
 649:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 650:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 651:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx receiver Time Out.
 652:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 653:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 654:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 655:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ReceiverTimeOutCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 656:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 1848              		.loc 1 656 0
 1849              		.cfi_startproc
 1850              		@ args = 0, pretend = 0, frame = 8
 1851              		@ frame_needed = 1, uses_anonymous_args = 0
 1852 0000 80B5     		push	{r7, lr}
 1853              	.LCFI39:
 1854              		.cfi_def_cfa_offset 8
 1855              		.cfi_offset 7, -8
 1856              		.cfi_offset 14, -4
 1857 0002 82B0     		sub	sp, sp, #8
 1858              	.LCFI40:
 1859              		.cfi_def_cfa_offset 16
 1860 0004 00AF     		add	r7, sp, #0
 1861              	.LCFI41:
 1862              		.cfi_def_cfa_register 7
 1863 0006 7860     		str	r0, [r7, #4]
 1864 0008 0B46     		mov	r3, r1
 1865 000a FB70     		strb	r3, [r7, #3]
 657:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 658:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1866              		.loc 1 658 0
 1867 000c 7A68     		ldr	r2, [r7, #4]
 1868 000e 1E4B     		ldr	r3, .L164
 1869 0010 9A42     		cmp	r2, r3
 1870 0012 0FD0     		beq	.L156
 1871              		.loc 1 658 0 is_stmt 0 discriminator 2
 1872 0014 7A68     		ldr	r2, [r7, #4]
 1873 0016 1D4B     		ldr	r3, .L164+4
 1874 0018 9A42     		cmp	r2, r3
 1875 001a 0BD0     		beq	.L156
 1876              		.loc 1 658 0 discriminator 1
 1877 001c 7A68     		ldr	r2, [r7, #4]
 1878 001e 1C4B     		ldr	r3, .L164+8
 1879 0020 9A42     		cmp	r2, r3
 1880 0022 07D0     		beq	.L156
 1881              		.loc 1 658 0 discriminator 2
 1882 0024 7A68     		ldr	r2, [r7, #4]
 1883 0026 1B4B     		ldr	r3, .L164+12
 1884 0028 9A42     		cmp	r2, r3
 1885 002a 03D0     		beq	.L156
 1886              		.loc 1 658 0 discriminator 3
 1887 002c 7A68     		ldr	r2, [r7, #4]
 1888 002e 1A4B     		ldr	r3, .L164+16
 1889 0030 9A42     		cmp	r2, r3
 1890 0032 02D1     		bne	.L157
 1891              	.L156:
 1892              		.loc 1 658 0 discriminator 1
 1893 0034 4FF00103 		mov	r3, #1
 1894 0038 01E0     		b	.L158
 1895              	.L157:
 1896              		.loc 1 658 0 discriminator 3
 1897 003a 4FF00003 		mov	r3, #0
 1898              	.L158:
 1899              		.loc 1 658 0 discriminator 4
 1900 003e 1846     		mov	r0, r3
 1901 0040 FFF7FEFF 		bl	assert_param
 659:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 1902              		.loc 1 659 0 is_stmt 1 discriminator 4
 1903 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1904 0046 002B     		cmp	r3, #0
 1905 0048 02D0     		beq	.L159
 1906              		.loc 1 659 0 is_stmt 0 discriminator 2
 1907 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1908 004c 012B     		cmp	r3, #1
 1909 004e 02D1     		bne	.L160
 1910              	.L159:
 1911              		.loc 1 659 0 discriminator 1
 1912 0050 4FF00103 		mov	r3, #1
 1913 0054 01E0     		b	.L161
 1914              	.L160:
 1915              		.loc 1 659 0 discriminator 3
 1916 0056 4FF00003 		mov	r3, #0
 1917              	.L161:
 1918              		.loc 1 659 0 discriminator 4
 1919 005a 1846     		mov	r0, r3
 1920 005c FFF7FEFF 		bl	assert_param
 660:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 661:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 1921              		.loc 1 661 0 is_stmt 1 discriminator 4
 1922 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1923 0062 002B     		cmp	r3, #0
 1924 0064 06D0     		beq	.L162
 662:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 663:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the receiver time out feature by setting the RTOEN bit in the CR2 
 664:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 665:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_RTOEN;
 1925              		.loc 1 665 0
 1926 0066 7B68     		ldr	r3, [r7, #4]
 1927 0068 5B68     		ldr	r3, [r3, #4]
 1928 006a 43F40002 		orr	r2, r3, #8388608
 1929 006e 7B68     		ldr	r3, [r7, #4]
 1930 0070 5A60     		str	r2, [r3, #4]
 1931 0072 05E0     		b	.L155
 1932              	.L162:
 666:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 667:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 668:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 669:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the receiver time out feature by clearing the RTOEN bit in the CR2 
 670:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 671:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_RTOEN);
 1933              		.loc 1 671 0
 1934 0074 7B68     		ldr	r3, [r7, #4]
 1935 0076 5B68     		ldr	r3, [r3, #4]
 1936 0078 23F40002 		bic	r2, r3, #8388608
 1937 007c 7B68     		ldr	r3, [r7, #4]
 1938 007e 5A60     		str	r2, [r3, #4]
 1939              	.L155:
 672:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 673:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 1940              		.loc 1 673 0
 1941 0080 07F10807 		add	r7, r7, #8
 1942 0084 BD46     		mov	sp, r7
 1943 0086 80BD     		pop	{r7, pc}
 1944              	.L165:
 1945              		.align	2
 1946              	.L164:
 1947 0088 00380140 		.word	1073821696
 1948 008c 00440040 		.word	1073759232
 1949 0090 00480040 		.word	1073760256
 1950 0094 004C0040 		.word	1073761280
 1951 0098 00500040 		.word	1073762304
 1952              		.cfi_endproc
 1953              	.LFE123:
 1955              		.section	.text.USART_SetReceiverTimeOut,"ax",%progbits
 1956              		.align	2
 1957              		.global	USART_SetReceiverTimeOut
 1958              		.thumb
 1959              		.thumb_func
 1961              	USART_SetReceiverTimeOut:
 1962              	.LFB124:
 674:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 675:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 676:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the receiver Time Out value.
 677:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 678:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 679:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_ReceiverTimeOut: specifies the Receiver Time Out value.
 680:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 681:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 682:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetReceiverTimeOut(USART_TypeDef* USARTx, uint32_t USART_ReceiverTimeOut)
 683:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 1963              		.loc 1 683 0
 1964              		.cfi_startproc
 1965              		@ args = 0, pretend = 0, frame = 8
 1966              		@ frame_needed = 1, uses_anonymous_args = 0
 1967 0000 80B5     		push	{r7, lr}
 1968              	.LCFI42:
 1969              		.cfi_def_cfa_offset 8
 1970              		.cfi_offset 7, -8
 1971              		.cfi_offset 14, -4
 1972 0002 82B0     		sub	sp, sp, #8
 1973              	.LCFI43:
 1974              		.cfi_def_cfa_offset 16
 1975 0004 00AF     		add	r7, sp, #0
 1976              	.LCFI44:
 1977              		.cfi_def_cfa_register 7
 1978 0006 7860     		str	r0, [r7, #4]
 1979 0008 3960     		str	r1, [r7, #0]
 684:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 685:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 1980              		.loc 1 685 0
 1981 000a 7A68     		ldr	r2, [r7, #4]
 1982 000c 1A4B     		ldr	r3, .L170
 1983 000e 9A42     		cmp	r2, r3
 1984 0010 0FD0     		beq	.L167
 1985              		.loc 1 685 0 is_stmt 0 discriminator 2
 1986 0012 7A68     		ldr	r2, [r7, #4]
 1987 0014 194B     		ldr	r3, .L170+4
 1988 0016 9A42     		cmp	r2, r3
 1989 0018 0BD0     		beq	.L167
 1990              		.loc 1 685 0 discriminator 1
 1991 001a 7A68     		ldr	r2, [r7, #4]
 1992 001c 184B     		ldr	r3, .L170+8
 1993 001e 9A42     		cmp	r2, r3
 1994 0020 07D0     		beq	.L167
 1995              		.loc 1 685 0 discriminator 2
 1996 0022 7A68     		ldr	r2, [r7, #4]
 1997 0024 174B     		ldr	r3, .L170+12
 1998 0026 9A42     		cmp	r2, r3
 1999 0028 03D0     		beq	.L167
 2000              		.loc 1 685 0 discriminator 3
 2001 002a 7A68     		ldr	r2, [r7, #4]
 2002 002c 164B     		ldr	r3, .L170+16
 2003 002e 9A42     		cmp	r2, r3
 2004 0030 02D1     		bne	.L168
 2005              	.L167:
 2006              		.loc 1 685 0 discriminator 1
 2007 0032 4FF00103 		mov	r3, #1
 2008 0036 01E0     		b	.L169
 2009              	.L168:
 2010              		.loc 1 685 0 discriminator 3
 2011 0038 4FF00003 		mov	r3, #0
 2012              	.L169:
 2013              		.loc 1 685 0 discriminator 4
 2014 003c 1846     		mov	r0, r3
 2015 003e FFF7FEFF 		bl	assert_param
 686:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_TIMEOUT(USART_ReceiverTimeOut));
 2016              		.loc 1 686 0 is_stmt 1 discriminator 4
 2017 0042 3A68     		ldr	r2, [r7, #0]
 2018 0044 6FF07F43 		mvn	r3, #-16777216
 2019 0048 9A42     		cmp	r2, r3
 2020 004a 8CBF     		ite	hi
 2021 004c 0023     		movhi	r3, #0
 2022 004e 0123     		movls	r3, #1
 2023 0050 DBB2     		uxtb	r3, r3
 2024 0052 1846     		mov	r0, r3
 2025 0054 FFF7FEFF 		bl	assert_param
 687:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 688:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the receiver Time Out value by clearing the RTO[23:0] bits in the RTOR
 689:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****      register  */
 690:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR &= (uint32_t)~((uint32_t)USART_RTOR_RTO);
 2026              		.loc 1 690 0 discriminator 4
 2027 0058 7B68     		ldr	r3, [r7, #4]
 2028 005a 5B69     		ldr	r3, [r3, #20]
 2029 005c 03F07F42 		and	r2, r3, #-16777216
 2030 0060 7B68     		ldr	r3, [r7, #4]
 2031 0062 5A61     		str	r2, [r3, #20]
 691:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the receiver Time Out value by setting the RTO[23:0] bits in the RTOR
 692:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****      register  */
 693:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR |= USART_ReceiverTimeOut;
 2032              		.loc 1 693 0 discriminator 4
 2033 0064 7B68     		ldr	r3, [r7, #4]
 2034 0066 5A69     		ldr	r2, [r3, #20]
 2035 0068 3B68     		ldr	r3, [r7, #0]
 2036 006a 1A43     		orrs	r2, r2, r3
 2037 006c 7B68     		ldr	r3, [r7, #4]
 2038 006e 5A61     		str	r2, [r3, #20]
 694:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2039              		.loc 1 694 0 discriminator 4
 2040 0070 07F10807 		add	r7, r7, #8
 2041 0074 BD46     		mov	sp, r7
 2042 0076 80BD     		pop	{r7, pc}
 2043              	.L171:
 2044              		.align	2
 2045              	.L170:
 2046 0078 00380140 		.word	1073821696
 2047 007c 00440040 		.word	1073759232
 2048 0080 00480040 		.word	1073760256
 2049 0084 004C0040 		.word	1073761280
 2050 0088 00500040 		.word	1073762304
 2051              		.cfi_endproc
 2052              	.LFE124:
 2054              		.section	.text.USART_SetPrescaler,"ax",%progbits
 2055              		.align	2
 2056              		.global	USART_SetPrescaler
 2057              		.thumb
 2058              		.thumb_func
 2060              	USART_SetPrescaler:
 2061              	.LFB125:
 695:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 696:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 697:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the system clock prescaler.
 698:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 699:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 700:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Prescaler: specifies the prescaler clock.  
 701:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 702:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.  
 703:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 704:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 705:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetPrescaler(USART_TypeDef* USARTx, uint8_t USART_Prescaler)
 706:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2062              		.loc 1 706 0
 2063              		.cfi_startproc
 2064              		@ args = 0, pretend = 0, frame = 8
 2065              		@ frame_needed = 1, uses_anonymous_args = 0
 2066 0000 80B5     		push	{r7, lr}
 2067              	.LCFI45:
 2068              		.cfi_def_cfa_offset 8
 2069              		.cfi_offset 7, -8
 2070              		.cfi_offset 14, -4
 2071 0002 82B0     		sub	sp, sp, #8
 2072              	.LCFI46:
 2073              		.cfi_def_cfa_offset 16
 2074 0004 00AF     		add	r7, sp, #0
 2075              	.LCFI47:
 2076              		.cfi_def_cfa_register 7
 2077 0006 7860     		str	r0, [r7, #4]
 2078 0008 0B46     		mov	r3, r1
 2079 000a FB70     		strb	r3, [r7, #3]
 707:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 708:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2080              		.loc 1 708 0
 2081 000c 7A68     		ldr	r2, [r7, #4]
 2082 000e 184B     		ldr	r3, .L176
 2083 0010 9A42     		cmp	r2, r3
 2084 0012 0FD0     		beq	.L173
 2085              		.loc 1 708 0 is_stmt 0 discriminator 2
 2086 0014 7A68     		ldr	r2, [r7, #4]
 2087 0016 174B     		ldr	r3, .L176+4
 2088 0018 9A42     		cmp	r2, r3
 2089 001a 0BD0     		beq	.L173
 2090              		.loc 1 708 0 discriminator 1
 2091 001c 7A68     		ldr	r2, [r7, #4]
 2092 001e 164B     		ldr	r3, .L176+8
 2093 0020 9A42     		cmp	r2, r3
 2094 0022 07D0     		beq	.L173
 2095              		.loc 1 708 0 discriminator 2
 2096 0024 7A68     		ldr	r2, [r7, #4]
 2097 0026 154B     		ldr	r3, .L176+12
 2098 0028 9A42     		cmp	r2, r3
 2099 002a 03D0     		beq	.L173
 2100              		.loc 1 708 0 discriminator 3
 2101 002c 7A68     		ldr	r2, [r7, #4]
 2102 002e 144B     		ldr	r3, .L176+16
 2103 0030 9A42     		cmp	r2, r3
 2104 0032 02D1     		bne	.L174
 2105              	.L173:
 2106              		.loc 1 708 0 discriminator 1
 2107 0034 4FF00103 		mov	r3, #1
 2108 0038 01E0     		b	.L175
 2109              	.L174:
 2110              		.loc 1 708 0 discriminator 3
 2111 003a 4FF00003 		mov	r3, #0
 2112              	.L175:
 2113              		.loc 1 708 0 discriminator 4
 2114 003e 1846     		mov	r0, r3
 2115 0040 FFF7FEFF 		bl	assert_param
 709:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 710:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART prescaler */
 711:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR &= USART_GTPR_GT;
 2116              		.loc 1 711 0 is_stmt 1 discriminator 4
 2117 0044 7B68     		ldr	r3, [r7, #4]
 2118 0046 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 2119 0048 9BB2     		uxth	r3, r3
 2120 004a 23F0FF03 		bic	r3, r3, #255
 2121 004e 9AB2     		uxth	r2, r3
 2122 0050 7B68     		ldr	r3, [r7, #4]
 2123 0052 1A82     		strh	r2, [r3, #16]	@ movhi
 712:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART prescaler */
 713:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR |= USART_Prescaler;
 2124              		.loc 1 713 0 discriminator 4
 2125 0054 7B68     		ldr	r3, [r7, #4]
 2126 0056 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 2127 0058 9AB2     		uxth	r2, r3
 2128 005a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2129 005c 9BB2     		uxth	r3, r3
 2130 005e 1343     		orrs	r3, r3, r2
 2131 0060 9AB2     		uxth	r2, r3
 2132 0062 7B68     		ldr	r3, [r7, #4]
 2133 0064 1A82     		strh	r2, [r3, #16]	@ movhi
 714:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2134              		.loc 1 714 0 discriminator 4
 2135 0066 07F10807 		add	r7, r7, #8
 2136 006a BD46     		mov	sp, r7
 2137 006c 80BD     		pop	{r7, pc}
 2138              	.L177:
 2139 006e 00BF     		.align	2
 2140              	.L176:
 2141 0070 00380140 		.word	1073821696
 2142 0074 00440040 		.word	1073759232
 2143 0078 00480040 		.word	1073760256
 2144 007c 004C0040 		.word	1073761280
 2145 0080 00500040 		.word	1073762304
 2146              		.cfi_endproc
 2147              	.LFE125:
 2149              		.section	.text.USART_STOPModeCmd,"ax",%progbits
 2150              		.align	2
 2151              		.global	USART_STOPModeCmd
 2152              		.thumb
 2153              		.thumb_func
 2155              	USART_STOPModeCmd:
 2156              	.LFB126:
 715:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 716:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 717:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 718:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 719:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 720:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 721:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group2 STOP Mode functions
 722:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   STOP Mode functions
 723:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 724:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim
 725:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 726:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                         ##### STOP Mode functions #####
 727:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 728:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage 
 729:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          WakeUp from STOP mode.
 730:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 731:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART is able to WakeUp from Stop Mode if USART clock is set to HSI
 732:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          or LSI.
 733:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 734:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The WakeUp source is configured by calling USART_StopModeWakeUpSourceConfig()
 735:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          function.
 736:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 737:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] After configuring the source of WakeUp and before entering in Stop Mode 
 738:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          USART_STOPModeCmd() function should be called to allow USART WakeUp.
 739:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                            
 740:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 741:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 742:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 743:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 744:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 745:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the specified USART peripheral in STOP Mode.
 746:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the
 747:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 748:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx peripheral state in stop mode.
 749:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 750:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 751:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called when USART clock is set to HSI or LSE.
 752:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 753:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 754:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_STOPModeCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 755:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2157              		.loc 1 755 0
 2158              		.cfi_startproc
 2159              		@ args = 0, pretend = 0, frame = 8
 2160              		@ frame_needed = 1, uses_anonymous_args = 0
 2161 0000 80B5     		push	{r7, lr}
 2162              	.LCFI48:
 2163              		.cfi_def_cfa_offset 8
 2164              		.cfi_offset 7, -8
 2165              		.cfi_offset 14, -4
 2166 0002 82B0     		sub	sp, sp, #8
 2167              	.LCFI49:
 2168              		.cfi_def_cfa_offset 16
 2169 0004 00AF     		add	r7, sp, #0
 2170              	.LCFI50:
 2171              		.cfi_def_cfa_register 7
 2172 0006 7860     		str	r0, [r7, #4]
 2173 0008 0B46     		mov	r3, r1
 2174 000a FB70     		strb	r3, [r7, #3]
 756:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 757:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2175              		.loc 1 757 0
 2176 000c 7A68     		ldr	r2, [r7, #4]
 2177 000e 1E4B     		ldr	r3, .L187
 2178 0010 9A42     		cmp	r2, r3
 2179 0012 0FD0     		beq	.L179
 2180              		.loc 1 757 0 is_stmt 0 discriminator 2
 2181 0014 7A68     		ldr	r2, [r7, #4]
 2182 0016 1D4B     		ldr	r3, .L187+4
 2183 0018 9A42     		cmp	r2, r3
 2184 001a 0BD0     		beq	.L179
 2185              		.loc 1 757 0 discriminator 1
 2186 001c 7A68     		ldr	r2, [r7, #4]
 2187 001e 1C4B     		ldr	r3, .L187+8
 2188 0020 9A42     		cmp	r2, r3
 2189 0022 07D0     		beq	.L179
 2190              		.loc 1 757 0 discriminator 2
 2191 0024 7A68     		ldr	r2, [r7, #4]
 2192 0026 1B4B     		ldr	r3, .L187+12
 2193 0028 9A42     		cmp	r2, r3
 2194 002a 03D0     		beq	.L179
 2195              		.loc 1 757 0 discriminator 3
 2196 002c 7A68     		ldr	r2, [r7, #4]
 2197 002e 1A4B     		ldr	r3, .L187+16
 2198 0030 9A42     		cmp	r2, r3
 2199 0032 02D1     		bne	.L180
 2200              	.L179:
 2201              		.loc 1 757 0 discriminator 1
 2202 0034 4FF00103 		mov	r3, #1
 2203 0038 01E0     		b	.L181
 2204              	.L180:
 2205              		.loc 1 757 0 discriminator 3
 2206 003a 4FF00003 		mov	r3, #0
 2207              	.L181:
 2208              		.loc 1 757 0 discriminator 4
 2209 003e 1846     		mov	r0, r3
 2210 0040 FFF7FEFF 		bl	assert_param
 758:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2211              		.loc 1 758 0 is_stmt 1 discriminator 4
 2212 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2213 0046 002B     		cmp	r3, #0
 2214 0048 02D0     		beq	.L182
 2215              		.loc 1 758 0 is_stmt 0 discriminator 2
 2216 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2217 004c 012B     		cmp	r3, #1
 2218 004e 02D1     		bne	.L183
 2219              	.L182:
 2220              		.loc 1 758 0 discriminator 1
 2221 0050 4FF00103 		mov	r3, #1
 2222 0054 01E0     		b	.L184
 2223              	.L183:
 2224              		.loc 1 758 0 discriminator 3
 2225 0056 4FF00003 		mov	r3, #0
 2226              	.L184:
 2227              		.loc 1 758 0 discriminator 4
 2228 005a 1846     		mov	r0, r3
 2229 005c FFF7FEFF 		bl	assert_param
 759:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 760:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 2230              		.loc 1 760 0 is_stmt 1 discriminator 4
 2231 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2232 0062 002B     		cmp	r3, #0
 2233 0064 06D0     		beq	.L185
 761:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 762:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the selected USART in STOP mode by setting the UESM bit in the CR1
 763:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 764:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_UESM;
 2234              		.loc 1 764 0
 2235 0066 7B68     		ldr	r3, [r7, #4]
 2236 0068 1B68     		ldr	r3, [r3, #0]
 2237 006a 43F00202 		orr	r2, r3, #2
 2238 006e 7B68     		ldr	r3, [r7, #4]
 2239 0070 1A60     		str	r2, [r3, #0]
 2240 0072 05E0     		b	.L178
 2241              	.L185:
 765:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 766:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 767:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 768:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the selected USART in STOP mode by clearing the UE bit in the CR1
 769:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 770:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_UESM);
 2242              		.loc 1 770 0
 2243 0074 7B68     		ldr	r3, [r7, #4]
 2244 0076 1B68     		ldr	r3, [r3, #0]
 2245 0078 23F00202 		bic	r2, r3, #2
 2246 007c 7B68     		ldr	r3, [r7, #4]
 2247 007e 1A60     		str	r2, [r3, #0]
 2248              	.L178:
 771:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 772:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2249              		.loc 1 772 0
 2250 0080 07F10807 		add	r7, r7, #8
 2251 0084 BD46     		mov	sp, r7
 2252 0086 80BD     		pop	{r7, pc}
 2253              	.L188:
 2254              		.align	2
 2255              	.L187:
 2256 0088 00380140 		.word	1073821696
 2257 008c 00440040 		.word	1073759232
 2258 0090 00480040 		.word	1073760256
 2259 0094 004C0040 		.word	1073761280
 2260 0098 00500040 		.word	1073762304
 2261              		.cfi_endproc
 2262              	.LFE126:
 2264              		.section	.text.USART_StopModeWakeUpSourceConfig,"ax",%progbits
 2265              		.align	2
 2266              		.global	USART_StopModeWakeUpSourceConfig
 2267              		.thumb
 2268              		.thumb_func
 2270              	USART_StopModeWakeUpSourceConfig:
 2271              	.LFB127:
 773:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 774:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 775:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Selects the USART WakeUp method form stop mode.
 776:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 777:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 778:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_WakeUp: specifies the selected USART wakeup method.
 779:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
 780:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUpSource_AddressMatch: WUF active on address match.
 781:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUpSource_StartBit: WUF active on Start bit detection.
 782:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUpSource_RXNE: WUF active on RXNE.
 783:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 784:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function.  
 785:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 786:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 787:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_StopModeWakeUpSourceConfig(USART_TypeDef* USARTx, uint32_t USART_WakeUpSource)
 788:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2272              		.loc 1 788 0
 2273              		.cfi_startproc
 2274              		@ args = 0, pretend = 0, frame = 8
 2275              		@ frame_needed = 1, uses_anonymous_args = 0
 2276 0000 80B5     		push	{r7, lr}
 2277              	.LCFI51:
 2278              		.cfi_def_cfa_offset 8
 2279              		.cfi_offset 7, -8
 2280              		.cfi_offset 14, -4
 2281 0002 82B0     		sub	sp, sp, #8
 2282              	.LCFI52:
 2283              		.cfi_def_cfa_offset 16
 2284 0004 00AF     		add	r7, sp, #0
 2285              	.LCFI53:
 2286              		.cfi_def_cfa_register 7
 2287 0006 7860     		str	r0, [r7, #4]
 2288 0008 3960     		str	r1, [r7, #0]
 789:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 790:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2289              		.loc 1 790 0
 2290 000a 7A68     		ldr	r2, [r7, #4]
 2291 000c 1E4B     		ldr	r3, .L196
 2292 000e 9A42     		cmp	r2, r3
 2293 0010 0FD0     		beq	.L190
 2294              		.loc 1 790 0 is_stmt 0 discriminator 2
 2295 0012 7A68     		ldr	r2, [r7, #4]
 2296 0014 1D4B     		ldr	r3, .L196+4
 2297 0016 9A42     		cmp	r2, r3
 2298 0018 0BD0     		beq	.L190
 2299              		.loc 1 790 0 discriminator 1
 2300 001a 7A68     		ldr	r2, [r7, #4]
 2301 001c 1C4B     		ldr	r3, .L196+8
 2302 001e 9A42     		cmp	r2, r3
 2303 0020 07D0     		beq	.L190
 2304              		.loc 1 790 0 discriminator 2
 2305 0022 7A68     		ldr	r2, [r7, #4]
 2306 0024 1B4B     		ldr	r3, .L196+12
 2307 0026 9A42     		cmp	r2, r3
 2308 0028 03D0     		beq	.L190
 2309              		.loc 1 790 0 discriminator 3
 2310 002a 7A68     		ldr	r2, [r7, #4]
 2311 002c 1A4B     		ldr	r3, .L196+16
 2312 002e 9A42     		cmp	r2, r3
 2313 0030 02D1     		bne	.L191
 2314              	.L190:
 2315              		.loc 1 790 0 discriminator 1
 2316 0032 4FF00103 		mov	r3, #1
 2317 0036 01E0     		b	.L192
 2318              	.L191:
 2319              		.loc 1 790 0 discriminator 3
 2320 0038 4FF00003 		mov	r3, #0
 2321              	.L192:
 2322              		.loc 1 790 0 discriminator 4
 2323 003c 1846     		mov	r0, r3
 2324 003e FFF7FEFF 		bl	assert_param
 791:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_STOPMODE_WAKEUPSOURCE(USART_WakeUpSource));
 2325              		.loc 1 791 0 is_stmt 1 discriminator 4
 2326 0042 3B68     		ldr	r3, [r7, #0]
 2327 0044 002B     		cmp	r3, #0
 2328 0046 07D0     		beq	.L193
 2329              		.loc 1 791 0 is_stmt 0 discriminator 2
 2330 0048 3B68     		ldr	r3, [r7, #0]
 2331 004a B3F5001F 		cmp	r3, #2097152
 2332 004e 03D0     		beq	.L193
 2333              		.loc 1 791 0 discriminator 1
 2334 0050 3B68     		ldr	r3, [r7, #0]
 2335 0052 B3F5401F 		cmp	r3, #3145728
 2336 0056 02D1     		bne	.L194
 2337              	.L193:
 2338 0058 4FF00103 		mov	r3, #1
 2339 005c 01E0     		b	.L195
 2340              	.L194:
 2341              		.loc 1 791 0 discriminator 3
 2342 005e 4FF00003 		mov	r3, #0
 2343              	.L195:
 2344              		.loc 1 791 0 discriminator 4
 2345 0062 1846     		mov	r0, r3
 2346 0064 FFF7FEFF 		bl	assert_param
 792:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 793:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_WUS);
 2347              		.loc 1 793 0 is_stmt 1 discriminator 4
 2348 0068 7B68     		ldr	r3, [r7, #4]
 2349 006a 9B68     		ldr	r3, [r3, #8]
 2350 006c 23F44012 		bic	r2, r3, #3145728
 2351 0070 7B68     		ldr	r3, [r7, #4]
 2352 0072 9A60     		str	r2, [r3, #8]
 794:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_WakeUpSource;
 2353              		.loc 1 794 0 discriminator 4
 2354 0074 7B68     		ldr	r3, [r7, #4]
 2355 0076 9A68     		ldr	r2, [r3, #8]
 2356 0078 3B68     		ldr	r3, [r7, #0]
 2357 007a 1A43     		orrs	r2, r2, r3
 2358 007c 7B68     		ldr	r3, [r7, #4]
 2359 007e 9A60     		str	r2, [r3, #8]
 795:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2360              		.loc 1 795 0 discriminator 4
 2361 0080 07F10807 		add	r7, r7, #8
 2362 0084 BD46     		mov	sp, r7
 2363 0086 80BD     		pop	{r7, pc}
 2364              	.L197:
 2365              		.align	2
 2366              	.L196:
 2367 0088 00380140 		.word	1073821696
 2368 008c 00440040 		.word	1073759232
 2369 0090 00480040 		.word	1073760256
 2370 0094 004C0040 		.word	1073761280
 2371 0098 00500040 		.word	1073762304
 2372              		.cfi_endproc
 2373              	.LFE127:
 2375              		.section	.text.USART_AutoBaudRateCmd,"ax",%progbits
 2376              		.align	2
 2377              		.global	USART_AutoBaudRateCmd
 2378              		.thumb
 2379              		.thumb_func
 2381              	USART_AutoBaudRateCmd:
 2382              	.LFB128:
 796:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 797:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 798:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 799:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 800:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 801:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 802:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group3 AutoBaudRate functions
 803:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   AutoBaudRate functions 
 804:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 805:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim
 806:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 807:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                        ##### AutoBaudRate functions #####
 808:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 809:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage 
 810:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the AutoBaudRate detections.
 811:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 812:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] Before Enabling AutoBaudRate detection using USART_AutoBaudRateCmd ()
 813:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          The character patterns used to calculate baudrate must be chosen by calling 
 814:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          USART_AutoBaudRateConfig() function. These function take as parameter :
 815:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (#)USART_AutoBaudRate_StartBit : any character starting with a bit 1.
 816:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (#)USART_AutoBaudRate_FallingEdge : any character starting with a 10xx bit pattern. 
 817:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                           
 818:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] At any later time, another request for AutoBaudRate detection can be performed
 819:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          using USART_RequestCmd() function.
 820:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
 821:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The AutoBaudRate detection is monitored by the status of ABRF flag which indicate
 822:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          that the AutoBaudRate detection is completed. In addition to ABRF flag, the ABRE flag
 823:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          indicate that this procedure is completed without success. USART_GetFlagStatus () 
 824:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          function should be used to monitor the status of these flags.  
 825:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              
 826:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 827:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 828:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 829:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
 830:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 831:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the Auto Baud Rate.
 832:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 833:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 834:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USARTx auto baud rate.
 835:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 836:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 837:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 838:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_AutoBaudRateCmd(USART_TypeDef* USARTx, FunctionalState NewState)
 839:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2383              		.loc 1 839 0
 2384              		.cfi_startproc
 2385              		@ args = 0, pretend = 0, frame = 8
 2386              		@ frame_needed = 1, uses_anonymous_args = 0
 2387 0000 80B5     		push	{r7, lr}
 2388              	.LCFI54:
 2389              		.cfi_def_cfa_offset 8
 2390              		.cfi_offset 7, -8
 2391              		.cfi_offset 14, -4
 2392 0002 82B0     		sub	sp, sp, #8
 2393              	.LCFI55:
 2394              		.cfi_def_cfa_offset 16
 2395 0004 00AF     		add	r7, sp, #0
 2396              	.LCFI56:
 2397              		.cfi_def_cfa_register 7
 2398 0006 7860     		str	r0, [r7, #4]
 2399 0008 0B46     		mov	r3, r1
 2400 000a FB70     		strb	r3, [r7, #3]
 840:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 841:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2401              		.loc 1 841 0
 2402 000c 7A68     		ldr	r2, [r7, #4]
 2403 000e 1E4B     		ldr	r3, .L207
 2404 0010 9A42     		cmp	r2, r3
 2405 0012 0FD0     		beq	.L199
 2406              		.loc 1 841 0 is_stmt 0 discriminator 2
 2407 0014 7A68     		ldr	r2, [r7, #4]
 2408 0016 1D4B     		ldr	r3, .L207+4
 2409 0018 9A42     		cmp	r2, r3
 2410 001a 0BD0     		beq	.L199
 2411              		.loc 1 841 0 discriminator 1
 2412 001c 7A68     		ldr	r2, [r7, #4]
 2413 001e 1C4B     		ldr	r3, .L207+8
 2414 0020 9A42     		cmp	r2, r3
 2415 0022 07D0     		beq	.L199
 2416              		.loc 1 841 0 discriminator 2
 2417 0024 7A68     		ldr	r2, [r7, #4]
 2418 0026 1B4B     		ldr	r3, .L207+12
 2419 0028 9A42     		cmp	r2, r3
 2420 002a 03D0     		beq	.L199
 2421              		.loc 1 841 0 discriminator 3
 2422 002c 7A68     		ldr	r2, [r7, #4]
 2423 002e 1A4B     		ldr	r3, .L207+16
 2424 0030 9A42     		cmp	r2, r3
 2425 0032 02D1     		bne	.L200
 2426              	.L199:
 2427              		.loc 1 841 0 discriminator 1
 2428 0034 4FF00103 		mov	r3, #1
 2429 0038 01E0     		b	.L201
 2430              	.L200:
 2431              		.loc 1 841 0 discriminator 3
 2432 003a 4FF00003 		mov	r3, #0
 2433              	.L201:
 2434              		.loc 1 841 0 discriminator 4
 2435 003e 1846     		mov	r0, r3
 2436 0040 FFF7FEFF 		bl	assert_param
 842:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 2437              		.loc 1 842 0 is_stmt 1 discriminator 4
 2438 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2439 0046 002B     		cmp	r3, #0
 2440 0048 02D0     		beq	.L202
 2441              		.loc 1 842 0 is_stmt 0 discriminator 2
 2442 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2443 004c 012B     		cmp	r3, #1
 2444 004e 02D1     		bne	.L203
 2445              	.L202:
 2446              		.loc 1 842 0 discriminator 1
 2447 0050 4FF00103 		mov	r3, #1
 2448 0054 01E0     		b	.L204
 2449              	.L203:
 2450              		.loc 1 842 0 discriminator 3
 2451 0056 4FF00003 		mov	r3, #0
 2452              	.L204:
 2453              		.loc 1 842 0 discriminator 4
 2454 005a 1846     		mov	r0, r3
 2455 005c FFF7FEFF 		bl	assert_param
 843:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 844:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 2456              		.loc 1 844 0 is_stmt 1 discriminator 4
 2457 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2458 0062 002B     		cmp	r3, #0
 2459 0064 06D0     		beq	.L205
 845:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 846:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the auto baud rate feature by setting the ABREN bit in the CR2 
 847:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 848:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_ABREN;
 2460              		.loc 1 848 0
 2461 0066 7B68     		ldr	r3, [r7, #4]
 2462 0068 5B68     		ldr	r3, [r3, #4]
 2463 006a 43F48012 		orr	r2, r3, #1048576
 2464 006e 7B68     		ldr	r3, [r7, #4]
 2465 0070 5A60     		str	r2, [r3, #4]
 2466 0072 05E0     		b	.L198
 2467              	.L205:
 849:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 850:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
 851:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
 852:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the auto baud rate feature by clearing the ABREN bit in the CR2 
 853:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register */
 854:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ABREN);
 2468              		.loc 1 854 0
 2469 0074 7B68     		ldr	r3, [r7, #4]
 2470 0076 5B68     		ldr	r3, [r3, #4]
 2471 0078 23F48012 		bic	r2, r3, #1048576
 2472 007c 7B68     		ldr	r3, [r7, #4]
 2473 007e 5A60     		str	r2, [r3, #4]
 2474              	.L198:
 855:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
 856:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2475              		.loc 1 856 0
 2476 0080 07F10807 		add	r7, r7, #8
 2477 0084 BD46     		mov	sp, r7
 2478 0086 80BD     		pop	{r7, pc}
 2479              	.L208:
 2480              		.align	2
 2481              	.L207:
 2482 0088 00380140 		.word	1073821696
 2483 008c 00440040 		.word	1073759232
 2484 0090 00480040 		.word	1073760256
 2485 0094 004C0040 		.word	1073761280
 2486 0098 00500040 		.word	1073762304
 2487              		.cfi_endproc
 2488              	.LFE128:
 2490              		.section	.text.USART_AutoBaudRateConfig,"ax",%progbits
 2491              		.align	2
 2492              		.global	USART_AutoBaudRateConfig
 2493              		.thumb
 2494              		.thumb_func
 2496              	USART_AutoBaudRateConfig:
 2497              	.LFB129:
 857:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 858:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 859:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Selects the USART auto baud rate method.
 860:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 861:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 862:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AutoBaudRate: specifies the selected USART auto baud rate method.
 863:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
 864:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_StartBit: Start Bit duration measurement.
 865:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_FallingEdge: Falling edge to falling edge measurement.
 866:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_0x7FFrame: 0x7F frame.
 867:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AutoBaudRate_0x55Frame: 0x55 frame.
 868:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
 869:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   This function has to be called before calling USART_Cmd() function. 
 870:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 871:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 872:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_AutoBaudRateConfig(USART_TypeDef* USARTx, uint32_t USART_AutoBaudRate)
 873:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2498              		.loc 1 873 0
 2499              		.cfi_startproc
 2500              		@ args = 0, pretend = 0, frame = 8
 2501              		@ frame_needed = 1, uses_anonymous_args = 0
 2502 0000 80B5     		push	{r7, lr}
 2503              	.LCFI57:
 2504              		.cfi_def_cfa_offset 8
 2505              		.cfi_offset 7, -8
 2506              		.cfi_offset 14, -4
 2507 0002 82B0     		sub	sp, sp, #8
 2508              	.LCFI58:
 2509              		.cfi_def_cfa_offset 16
 2510 0004 00AF     		add	r7, sp, #0
 2511              	.LCFI59:
 2512              		.cfi_def_cfa_register 7
 2513 0006 7860     		str	r0, [r7, #4]
 2514 0008 3960     		str	r1, [r7, #0]
 874:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 875:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2515              		.loc 1 875 0
 2516 000a 7A68     		ldr	r2, [r7, #4]
 2517 000c 204B     		ldr	r3, .L216
 2518 000e 9A42     		cmp	r2, r3
 2519 0010 0FD0     		beq	.L210
 2520              		.loc 1 875 0 is_stmt 0 discriminator 2
 2521 0012 7A68     		ldr	r2, [r7, #4]
 2522 0014 1F4B     		ldr	r3, .L216+4
 2523 0016 9A42     		cmp	r2, r3
 2524 0018 0BD0     		beq	.L210
 2525              		.loc 1 875 0 discriminator 1
 2526 001a 7A68     		ldr	r2, [r7, #4]
 2527 001c 1E4B     		ldr	r3, .L216+8
 2528 001e 9A42     		cmp	r2, r3
 2529 0020 07D0     		beq	.L210
 2530              		.loc 1 875 0 discriminator 2
 2531 0022 7A68     		ldr	r2, [r7, #4]
 2532 0024 1D4B     		ldr	r3, .L216+12
 2533 0026 9A42     		cmp	r2, r3
 2534 0028 03D0     		beq	.L210
 2535              		.loc 1 875 0 discriminator 3
 2536 002a 7A68     		ldr	r2, [r7, #4]
 2537 002c 1C4B     		ldr	r3, .L216+16
 2538 002e 9A42     		cmp	r2, r3
 2539 0030 02D1     		bne	.L211
 2540              	.L210:
 2541              		.loc 1 875 0 discriminator 1
 2542 0032 4FF00103 		mov	r3, #1
 2543 0036 01E0     		b	.L212
 2544              	.L211:
 2545              		.loc 1 875 0 discriminator 3
 2546 0038 4FF00003 		mov	r3, #0
 2547              	.L212:
 2548              		.loc 1 875 0 discriminator 4
 2549 003c 1846     		mov	r0, r3
 2550 003e FFF7FEFF 		bl	assert_param
 876:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_AUTOBAUDRATE_MODE(USART_AutoBaudRate));
 2551              		.loc 1 876 0 is_stmt 1 discriminator 4
 2552 0042 3B68     		ldr	r3, [r7, #0]
 2553 0044 002B     		cmp	r3, #0
 2554 0046 0BD0     		beq	.L213
 2555              		.loc 1 876 0 is_stmt 0 discriminator 2
 2556 0048 3B68     		ldr	r3, [r7, #0]
 2557 004a B3F5001F 		cmp	r3, #2097152
 2558 004e 07D0     		beq	.L213
 2559              		.loc 1 876 0 discriminator 1
 2560 0050 3B68     		ldr	r3, [r7, #0]
 2561 0052 B3F5800F 		cmp	r3, #4194304
 2562 0056 03D0     		beq	.L213
 2563              		.loc 1 876 0 discriminator 2
 2564 0058 3B68     		ldr	r3, [r7, #0]
 2565 005a B3F5C00F 		cmp	r3, #6291456
 2566 005e 02D1     		bne	.L214
 2567              	.L213:
 2568              		.loc 1 876 0 discriminator 1
 2569 0060 4FF00103 		mov	r3, #1
 2570 0064 01E0     		b	.L215
 2571              	.L214:
 2572              		.loc 1 876 0 discriminator 3
 2573 0066 4FF00003 		mov	r3, #0
 2574              	.L215:
 2575              		.loc 1 876 0 discriminator 4
 2576 006a 1846     		mov	r0, r3
 2577 006c FFF7FEFF 		bl	assert_param
 877:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 878:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ABRMODE);
 2578              		.loc 1 878 0 is_stmt 1 discriminator 4
 2579 0070 7B68     		ldr	r3, [r7, #4]
 2580 0072 5B68     		ldr	r3, [r3, #4]
 2581 0074 23F4C002 		bic	r2, r3, #6291456
 2582 0078 7B68     		ldr	r3, [r7, #4]
 2583 007a 5A60     		str	r2, [r3, #4]
 879:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |= USART_AutoBaudRate;
 2584              		.loc 1 879 0 discriminator 4
 2585 007c 7B68     		ldr	r3, [r7, #4]
 2586 007e 5A68     		ldr	r2, [r3, #4]
 2587 0080 3B68     		ldr	r3, [r7, #0]
 2588 0082 1A43     		orrs	r2, r2, r3
 2589 0084 7B68     		ldr	r3, [r7, #4]
 2590 0086 5A60     		str	r2, [r3, #4]
 880:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2591              		.loc 1 880 0 discriminator 4
 2592 0088 07F10807 		add	r7, r7, #8
 2593 008c BD46     		mov	sp, r7
 2594 008e 80BD     		pop	{r7, pc}
 2595              	.L217:
 2596              		.align	2
 2597              	.L216:
 2598 0090 00380140 		.word	1073821696
 2599 0094 00440040 		.word	1073759232
 2600 0098 00480040 		.word	1073760256
 2601 009c 004C0040 		.word	1073761280
 2602 00a0 00500040 		.word	1073762304
 2603              		.cfi_endproc
 2604              	.LFE129:
 2606              		.section	.text.USART_SendData,"ax",%progbits
 2607              		.align	2
 2608              		.global	USART_SendData
 2609              		.thumb
 2610              		.thumb_func
 2612              	USART_SendData:
 2613              	.LFB130:
 881:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 882:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 883:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 884:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 885:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 886:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 887:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group4 Data transfers functions
 888:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Data transfers functions 
 889:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 890:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim
 891:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 892:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                     ##### Data transfers functions #####
 893:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 894:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage 
 895:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the USART data transfers.
 896:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] During an USART reception, data shifts in least significant bit first 
 897:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          through the RX pin. When a transmission is taking place, a write instruction to 
 898:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the USART_TDR register stores the data in the shift register.
 899:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The read access of the USART_RDR register can be done using 
 900:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the USART_ReceiveData() function and returns the RDR value.
 901:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Whereas a write access to the USART_TDR can be done using USART_SendData()
 902:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          function and stores the written data into TDR.
 903:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 904:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 905:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 906:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 907:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 908:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 909:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Transmits single data through the USARTx peripheral.
 910:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 911:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 912:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  Data: the data to transmit.
 913:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 914:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 915:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
 916:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2614              		.loc 1 916 0
 2615              		.cfi_startproc
 2616              		@ args = 0, pretend = 0, frame = 8
 2617              		@ frame_needed = 1, uses_anonymous_args = 0
 2618 0000 80B5     		push	{r7, lr}
 2619              	.LCFI60:
 2620              		.cfi_def_cfa_offset 8
 2621              		.cfi_offset 7, -8
 2622              		.cfi_offset 14, -4
 2623 0002 82B0     		sub	sp, sp, #8
 2624              	.LCFI61:
 2625              		.cfi_def_cfa_offset 16
 2626 0004 00AF     		add	r7, sp, #0
 2627              	.LCFI62:
 2628              		.cfi_def_cfa_register 7
 2629 0006 7860     		str	r0, [r7, #4]
 2630 0008 0B46     		mov	r3, r1
 2631 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 917:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 918:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2632              		.loc 1 918 0
 2633 000c 7A68     		ldr	r2, [r7, #4]
 2634 000e 194B     		ldr	r3, .L222
 2635 0010 9A42     		cmp	r2, r3
 2636 0012 0FD0     		beq	.L219
 2637              		.loc 1 918 0 is_stmt 0 discriminator 2
 2638 0014 7A68     		ldr	r2, [r7, #4]
 2639 0016 184B     		ldr	r3, .L222+4
 2640 0018 9A42     		cmp	r2, r3
 2641 001a 0BD0     		beq	.L219
 2642              		.loc 1 918 0 discriminator 1
 2643 001c 7A68     		ldr	r2, [r7, #4]
 2644 001e 174B     		ldr	r3, .L222+8
 2645 0020 9A42     		cmp	r2, r3
 2646 0022 07D0     		beq	.L219
 2647              		.loc 1 918 0 discriminator 2
 2648 0024 7A68     		ldr	r2, [r7, #4]
 2649 0026 164B     		ldr	r3, .L222+12
 2650 0028 9A42     		cmp	r2, r3
 2651 002a 03D0     		beq	.L219
 2652              		.loc 1 918 0 discriminator 3
 2653 002c 7A68     		ldr	r2, [r7, #4]
 2654 002e 154B     		ldr	r3, .L222+16
 2655 0030 9A42     		cmp	r2, r3
 2656 0032 02D1     		bne	.L220
 2657              	.L219:
 2658              		.loc 1 918 0 discriminator 1
 2659 0034 4FF00103 		mov	r3, #1
 2660 0038 01E0     		b	.L221
 2661              	.L220:
 2662              		.loc 1 918 0 discriminator 3
 2663 003a 4FF00003 		mov	r3, #0
 2664              	.L221:
 2665              		.loc 1 918 0 discriminator 4
 2666 003e 1846     		mov	r0, r3
 2667 0040 FFF7FEFF 		bl	assert_param
 919:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DATA(Data)); 
 2668              		.loc 1 919 0 is_stmt 1 discriminator 4
 2669 0044 7A88     		ldrh	r2, [r7, #2]
 2670 0046 40F2FF13 		movw	r3, #511
 2671 004a 9A42     		cmp	r2, r3
 2672 004c 8CBF     		ite	hi
 2673 004e 0023     		movhi	r3, #0
 2674 0050 0123     		movls	r3, #1
 2675 0052 DBB2     		uxtb	r3, r3
 2676 0054 1846     		mov	r0, r3
 2677 0056 FFF7FEFF 		bl	assert_param
 920:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 921:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Transmit Data */
 922:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->TDR = (Data & (uint16_t)0x01FF);
 2678              		.loc 1 922 0 discriminator 4
 2679 005a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2680 005c 4FEAC353 		lsl	r3, r3, #23
 2681 0060 4FEAD353 		lsr	r3, r3, #23
 2682 0064 9AB2     		uxth	r2, r3
 2683 0066 7B68     		ldr	r3, [r7, #4]
 2684 0068 1A85     		strh	r2, [r3, #40]	@ movhi
 923:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2685              		.loc 1 923 0 discriminator 4
 2686 006a 07F10807 		add	r7, r7, #8
 2687 006e BD46     		mov	sp, r7
 2688 0070 80BD     		pop	{r7, pc}
 2689              	.L223:
 2690 0072 00BF     		.align	2
 2691              	.L222:
 2692 0074 00380140 		.word	1073821696
 2693 0078 00440040 		.word	1073759232
 2694 007c 00480040 		.word	1073760256
 2695 0080 004C0040 		.word	1073761280
 2696 0084 00500040 		.word	1073762304
 2697              		.cfi_endproc
 2698              	.LFE130:
 2700              		.section	.text.USART_ReceiveData,"ax",%progbits
 2701              		.align	2
 2702              		.global	USART_ReceiveData
 2703              		.thumb
 2704              		.thumb_func
 2706              	USART_ReceiveData:
 2707              	.LFB131:
 924:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 925:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 926:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Returns the most recent received data by the USARTx peripheral.
 927:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 928:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 929:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval The received data.
 930:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 931:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
 932:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2708              		.loc 1 932 0
 2709              		.cfi_startproc
 2710              		@ args = 0, pretend = 0, frame = 8
 2711              		@ frame_needed = 1, uses_anonymous_args = 0
 2712 0000 80B5     		push	{r7, lr}
 2713              	.LCFI63:
 2714              		.cfi_def_cfa_offset 8
 2715              		.cfi_offset 7, -8
 2716              		.cfi_offset 14, -4
 2717 0002 82B0     		sub	sp, sp, #8
 2718              	.LCFI64:
 2719              		.cfi_def_cfa_offset 16
 2720 0004 00AF     		add	r7, sp, #0
 2721              	.LCFI65:
 2722              		.cfi_def_cfa_register 7
 2723 0006 7860     		str	r0, [r7, #4]
 933:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 934:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2724              		.loc 1 934 0
 2725 0008 7A68     		ldr	r2, [r7, #4]
 2726 000a 144B     		ldr	r3, .L229
 2727 000c 9A42     		cmp	r2, r3
 2728 000e 0FD0     		beq	.L225
 2729              		.loc 1 934 0 is_stmt 0 discriminator 2
 2730 0010 7A68     		ldr	r2, [r7, #4]
 2731 0012 134B     		ldr	r3, .L229+4
 2732 0014 9A42     		cmp	r2, r3
 2733 0016 0BD0     		beq	.L225
 2734              		.loc 1 934 0 discriminator 1
 2735 0018 7A68     		ldr	r2, [r7, #4]
 2736 001a 124B     		ldr	r3, .L229+8
 2737 001c 9A42     		cmp	r2, r3
 2738 001e 07D0     		beq	.L225
 2739              		.loc 1 934 0 discriminator 2
 2740 0020 7A68     		ldr	r2, [r7, #4]
 2741 0022 114B     		ldr	r3, .L229+12
 2742 0024 9A42     		cmp	r2, r3
 2743 0026 03D0     		beq	.L225
 2744              		.loc 1 934 0 discriminator 3
 2745 0028 7A68     		ldr	r2, [r7, #4]
 2746 002a 104B     		ldr	r3, .L229+16
 2747 002c 9A42     		cmp	r2, r3
 2748 002e 02D1     		bne	.L226
 2749              	.L225:
 2750              		.loc 1 934 0 discriminator 1
 2751 0030 4FF00103 		mov	r3, #1
 2752 0034 01E0     		b	.L227
 2753              	.L226:
 2754              		.loc 1 934 0 discriminator 3
 2755 0036 4FF00003 		mov	r3, #0
 2756              	.L227:
 2757              		.loc 1 934 0 discriminator 4
 2758 003a 1846     		mov	r0, r3
 2759 003c FFF7FEFF 		bl	assert_param
 935:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 936:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Receive Data */
 937:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   return (uint16_t)(USARTx->RDR & (uint16_t)0x01FF);
 2760              		.loc 1 937 0 is_stmt 1 discriminator 4
 2761 0040 7B68     		ldr	r3, [r7, #4]
 2762 0042 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 2763 0044 9BB2     		uxth	r3, r3
 2764 0046 4FEAC353 		lsl	r3, r3, #23
 2765 004a 4FEAD353 		lsr	r3, r3, #23
 2766 004e 9BB2     		uxth	r3, r3
 938:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2767              		.loc 1 938 0 discriminator 4
 2768 0050 1846     		mov	r0, r3
 2769 0052 07F10807 		add	r7, r7, #8
 2770 0056 BD46     		mov	sp, r7
 2771 0058 80BD     		pop	{r7, pc}
 2772              	.L230:
 2773 005a 00BF     		.align	2
 2774              	.L229:
 2775 005c 00380140 		.word	1073821696
 2776 0060 00440040 		.word	1073759232
 2777 0064 00480040 		.word	1073760256
 2778 0068 004C0040 		.word	1073761280
 2779 006c 00500040 		.word	1073762304
 2780              		.cfi_endproc
 2781              	.LFE131:
 2783              		.section	.text.USART_SetAddress,"ax",%progbits
 2784              		.align	2
 2785              		.global	USART_SetAddress
 2786              		.thumb
 2787              		.thumb_func
 2789              	USART_SetAddress:
 2790              	.LFB132:
 939:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 940:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 941:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
 942:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 943:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 944:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group5 MultiProcessor Communication functions
 945:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Multi-Processor Communication functions 
 946:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
 947:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
 948:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 949:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              ##### Multi-Processor Communication functions #####
 950:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
 951:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
 952:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          multiprocessor communication.
 953:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] For instance one of the USARTs can be the master, its TX output is
 954:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          connected to the RX input of the other USART. The others are slaves,
 955:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          their respective TX outputs are logically ANDed together and connected 
 956:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          to the RX input of the master. USART multiprocessor communication is 
 957:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          possible through the following procedure:
 958:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 9 bits, Stop bits, Parity, 
 959:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Mode transmitter or Mode receiver and hardware flow control values 
 960:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_Init() function.
 961:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the USART address using the USART_SetAddress() function.
 962:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the wake up methode (USART_WakeUp_IdleLine or 
 963:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              USART_WakeUp_AddressMark) using USART_WakeUpConfig() function only 
 964:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              for the slaves.
 965:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
 966:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enter the USART slaves in mute mode using USART_ReceiverWakeUpCmd() 
 967:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
 968:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART Slave exit from mute mode when receive the wake up condition.
 969:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 970:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
 971:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
 972:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 973:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 974:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 975:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the address of the USART node.
 976:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 977:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 978:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Address: Indicates the address of the USART node.
 979:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 980:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
 981:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetAddress(USART_TypeDef* USARTx, uint8_t USART_Address)
 982:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2791              		.loc 1 982 0
 2792              		.cfi_startproc
 2793              		@ args = 0, pretend = 0, frame = 8
 2794              		@ frame_needed = 1, uses_anonymous_args = 0
 2795 0000 80B5     		push	{r7, lr}
 2796              	.LCFI66:
 2797              		.cfi_def_cfa_offset 8
 2798              		.cfi_offset 7, -8
 2799              		.cfi_offset 14, -4
 2800 0002 82B0     		sub	sp, sp, #8
 2801              	.LCFI67:
 2802              		.cfi_def_cfa_offset 16
 2803 0004 00AF     		add	r7, sp, #0
 2804              	.LCFI68:
 2805              		.cfi_def_cfa_register 7
 2806 0006 7860     		str	r0, [r7, #4]
 2807 0008 0B46     		mov	r3, r1
 2808 000a FB70     		strb	r3, [r7, #3]
 983:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
 984:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2809              		.loc 1 984 0
 2810 000c 7A68     		ldr	r2, [r7, #4]
 2811 000e 164B     		ldr	r3, .L235
 2812 0010 9A42     		cmp	r2, r3
 2813 0012 0FD0     		beq	.L232
 2814              		.loc 1 984 0 is_stmt 0 discriminator 2
 2815 0014 7A68     		ldr	r2, [r7, #4]
 2816 0016 154B     		ldr	r3, .L235+4
 2817 0018 9A42     		cmp	r2, r3
 2818 001a 0BD0     		beq	.L232
 2819              		.loc 1 984 0 discriminator 1
 2820 001c 7A68     		ldr	r2, [r7, #4]
 2821 001e 144B     		ldr	r3, .L235+8
 2822 0020 9A42     		cmp	r2, r3
 2823 0022 07D0     		beq	.L232
 2824              		.loc 1 984 0 discriminator 2
 2825 0024 7A68     		ldr	r2, [r7, #4]
 2826 0026 134B     		ldr	r3, .L235+12
 2827 0028 9A42     		cmp	r2, r3
 2828 002a 03D0     		beq	.L232
 2829              		.loc 1 984 0 discriminator 3
 2830 002c 7A68     		ldr	r2, [r7, #4]
 2831 002e 124B     		ldr	r3, .L235+16
 2832 0030 9A42     		cmp	r2, r3
 2833 0032 02D1     		bne	.L233
 2834              	.L232:
 2835              		.loc 1 984 0 discriminator 1
 2836 0034 4FF00103 		mov	r3, #1
 2837 0038 01E0     		b	.L234
 2838              	.L233:
 2839              		.loc 1 984 0 discriminator 3
 2840 003a 4FF00003 		mov	r3, #0
 2841              	.L234:
 2842              		.loc 1 984 0 discriminator 4
 2843 003e 1846     		mov	r0, r3
 2844 0040 FFF7FEFF 		bl	assert_param
 985:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 986:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART address */
 987:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ADD);
 2845              		.loc 1 987 0 is_stmt 1 discriminator 4
 2846 0044 7B68     		ldr	r3, [r7, #4]
 2847 0046 5B68     		ldr	r3, [r3, #4]
 2848 0048 23F07F42 		bic	r2, r3, #-16777216
 2849 004c 7B68     		ldr	r3, [r7, #4]
 2850 004e 5A60     		str	r2, [r3, #4]
 988:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART address node */
 989:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |=((uint32_t)USART_Address << (uint32_t)0x18);
 2851              		.loc 1 989 0 discriminator 4
 2852 0050 7B68     		ldr	r3, [r7, #4]
 2853 0052 5A68     		ldr	r2, [r3, #4]
 2854 0054 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2855 0056 4FEA0363 		lsl	r3, r3, #24
 2856 005a 1A43     		orrs	r2, r2, r3
 2857 005c 7B68     		ldr	r3, [r7, #4]
 2858 005e 5A60     		str	r2, [r3, #4]
 990:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2859              		.loc 1 990 0 discriminator 4
 2860 0060 07F10807 		add	r7, r7, #8
 2861 0064 BD46     		mov	sp, r7
 2862 0066 80BD     		pop	{r7, pc}
 2863              	.L236:
 2864              		.align	2
 2865              	.L235:
 2866 0068 00380140 		.word	1073821696
 2867 006c 00440040 		.word	1073759232
 2868 0070 00480040 		.word	1073760256
 2869 0074 004C0040 		.word	1073761280
 2870 0078 00500040 		.word	1073762304
 2871              		.cfi_endproc
 2872              	.LFE132:
 2874              		.section	.text.USART_MuteModeCmd,"ax",%progbits
 2875              		.align	2
 2876              		.global	USART_MuteModeCmd
 2877              		.thumb
 2878              		.thumb_func
 2880              	USART_MuteModeCmd:
 2881              	.LFB133:
 991:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
 992:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
 993:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's mute mode.
 994:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
 995:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
 996:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART mute mode.
 997:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
 998:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
 999:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1000:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_MuteModeCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1001:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2882              		.loc 1 1001 0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 8
 2885              		@ frame_needed = 1, uses_anonymous_args = 0
 2886 0000 80B5     		push	{r7, lr}
 2887              	.LCFI69:
 2888              		.cfi_def_cfa_offset 8
 2889              		.cfi_offset 7, -8
 2890              		.cfi_offset 14, -4
 2891 0002 82B0     		sub	sp, sp, #8
 2892              	.LCFI70:
 2893              		.cfi_def_cfa_offset 16
 2894 0004 00AF     		add	r7, sp, #0
 2895              	.LCFI71:
 2896              		.cfi_def_cfa_register 7
 2897 0006 7860     		str	r0, [r7, #4]
 2898 0008 0B46     		mov	r3, r1
 2899 000a FB70     		strb	r3, [r7, #3]
1002:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1003:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 2900              		.loc 1 1003 0
 2901 000c 7A68     		ldr	r2, [r7, #4]
 2902 000e 1E4B     		ldr	r3, .L246
 2903 0010 9A42     		cmp	r2, r3
 2904 0012 0FD0     		beq	.L238
 2905              		.loc 1 1003 0 is_stmt 0 discriminator 2
 2906 0014 7A68     		ldr	r2, [r7, #4]
 2907 0016 1D4B     		ldr	r3, .L246+4
 2908 0018 9A42     		cmp	r2, r3
 2909 001a 0BD0     		beq	.L238
 2910              		.loc 1 1003 0 discriminator 1
 2911 001c 7A68     		ldr	r2, [r7, #4]
 2912 001e 1C4B     		ldr	r3, .L246+8
 2913 0020 9A42     		cmp	r2, r3
 2914 0022 07D0     		beq	.L238
 2915              		.loc 1 1003 0 discriminator 2
 2916 0024 7A68     		ldr	r2, [r7, #4]
 2917 0026 1B4B     		ldr	r3, .L246+12
 2918 0028 9A42     		cmp	r2, r3
 2919 002a 03D0     		beq	.L238
 2920              		.loc 1 1003 0 discriminator 3
 2921 002c 7A68     		ldr	r2, [r7, #4]
 2922 002e 1A4B     		ldr	r3, .L246+16
 2923 0030 9A42     		cmp	r2, r3
 2924 0032 02D1     		bne	.L239
 2925              	.L238:
 2926              		.loc 1 1003 0 discriminator 1
 2927 0034 4FF00103 		mov	r3, #1
 2928 0038 01E0     		b	.L240
 2929              	.L239:
 2930              		.loc 1 1003 0 discriminator 3
 2931 003a 4FF00003 		mov	r3, #0
 2932              	.L240:
 2933              		.loc 1 1003 0 discriminator 4
 2934 003e 1846     		mov	r0, r3
 2935 0040 FFF7FEFF 		bl	assert_param
1004:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 2936              		.loc 1 1004 0 is_stmt 1 discriminator 4
 2937 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2938 0046 002B     		cmp	r3, #0
 2939 0048 02D0     		beq	.L241
 2940              		.loc 1 1004 0 is_stmt 0 discriminator 2
 2941 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2942 004c 012B     		cmp	r3, #1
 2943 004e 02D1     		bne	.L242
 2944              	.L241:
 2945              		.loc 1 1004 0 discriminator 1
 2946 0050 4FF00103 		mov	r3, #1
 2947 0054 01E0     		b	.L243
 2948              	.L242:
 2949              		.loc 1 1004 0 discriminator 3
 2950 0056 4FF00003 		mov	r3, #0
 2951              	.L243:
 2952              		.loc 1 1004 0 discriminator 4
 2953 005a 1846     		mov	r0, r3
 2954 005c FFF7FEFF 		bl	assert_param
1005:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1006:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 2955              		.loc 1 1006 0 is_stmt 1 discriminator 4
 2956 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2957 0062 002B     		cmp	r3, #0
 2958 0064 06D0     		beq	.L244
1007:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1008:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the USART mute mode by setting the MME bit in the CR1 register */
1009:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 |= USART_CR1_MME;
 2959              		.loc 1 1009 0
 2960 0066 7B68     		ldr	r3, [r7, #4]
 2961 0068 1B68     		ldr	r3, [r3, #0]
 2962 006a 43F40052 		orr	r2, r3, #8192
 2963 006e 7B68     		ldr	r3, [r7, #4]
 2964 0070 1A60     		str	r2, [r3, #0]
 2965 0072 05E0     		b	.L237
 2966              	.L244:
1010:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1011:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1012:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1013:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the USART mute mode by clearing the MME bit in the CR1 register */
1014:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_MME);
 2967              		.loc 1 1014 0
 2968 0074 7B68     		ldr	r3, [r7, #4]
 2969 0076 1B68     		ldr	r3, [r3, #0]
 2970 0078 23F40052 		bic	r2, r3, #8192
 2971 007c 7B68     		ldr	r3, [r7, #4]
 2972 007e 1A60     		str	r2, [r3, #0]
 2973              	.L237:
1015:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1016:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 2974              		.loc 1 1016 0
 2975 0080 07F10807 		add	r7, r7, #8
 2976 0084 BD46     		mov	sp, r7
 2977 0086 80BD     		pop	{r7, pc}
 2978              	.L247:
 2979              		.align	2
 2980              	.L246:
 2981 0088 00380140 		.word	1073821696
 2982 008c 00440040 		.word	1073759232
 2983 0090 00480040 		.word	1073760256
 2984 0094 004C0040 		.word	1073761280
 2985 0098 00500040 		.word	1073762304
 2986              		.cfi_endproc
 2987              	.LFE133:
 2989              		.section	.text.USART_MuteModeWakeUpConfig,"ax",%progbits
 2990              		.align	2
 2991              		.global	USART_MuteModeWakeUpConfig
 2992              		.thumb
 2993              		.thumb_func
 2995              	USART_MuteModeWakeUpConfig:
 2996              	.LFB134:
1017:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1018:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1019:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Selects the USART WakeUp method from mute mode.
1020:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1021:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1022:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_WakeUp: specifies the USART wakeup method.
1023:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1024:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUp_IdleLine: WakeUp by an idle line detection
1025:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_WakeUp_AddressMark: WakeUp by an address mark
1026:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1027:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1028:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_MuteModeWakeUpConfig(USART_TypeDef* USARTx, uint32_t USART_WakeUp)
1029:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 2997              		.loc 1 1029 0
 2998              		.cfi_startproc
 2999              		@ args = 0, pretend = 0, frame = 8
 3000              		@ frame_needed = 1, uses_anonymous_args = 0
 3001 0000 80B5     		push	{r7, lr}
 3002              	.LCFI72:
 3003              		.cfi_def_cfa_offset 8
 3004              		.cfi_offset 7, -8
 3005              		.cfi_offset 14, -4
 3006 0002 82B0     		sub	sp, sp, #8
 3007              	.LCFI73:
 3008              		.cfi_def_cfa_offset 16
 3009 0004 00AF     		add	r7, sp, #0
 3010              	.LCFI74:
 3011              		.cfi_def_cfa_register 7
 3012 0006 7860     		str	r0, [r7, #4]
 3013 0008 3960     		str	r1, [r7, #0]
1030:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1031:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 3014              		.loc 1 1031 0
 3015 000a 7A68     		ldr	r2, [r7, #4]
 3016 000c 1C4B     		ldr	r3, .L255
 3017 000e 9A42     		cmp	r2, r3
 3018 0010 0FD0     		beq	.L249
 3019              		.loc 1 1031 0 is_stmt 0 discriminator 2
 3020 0012 7A68     		ldr	r2, [r7, #4]
 3021 0014 1B4B     		ldr	r3, .L255+4
 3022 0016 9A42     		cmp	r2, r3
 3023 0018 0BD0     		beq	.L249
 3024              		.loc 1 1031 0 discriminator 1
 3025 001a 7A68     		ldr	r2, [r7, #4]
 3026 001c 1A4B     		ldr	r3, .L255+8
 3027 001e 9A42     		cmp	r2, r3
 3028 0020 07D0     		beq	.L249
 3029              		.loc 1 1031 0 discriminator 2
 3030 0022 7A68     		ldr	r2, [r7, #4]
 3031 0024 194B     		ldr	r3, .L255+12
 3032 0026 9A42     		cmp	r2, r3
 3033 0028 03D0     		beq	.L249
 3034              		.loc 1 1031 0 discriminator 3
 3035 002a 7A68     		ldr	r2, [r7, #4]
 3036 002c 184B     		ldr	r3, .L255+16
 3037 002e 9A42     		cmp	r2, r3
 3038 0030 02D1     		bne	.L250
 3039              	.L249:
 3040              		.loc 1 1031 0 discriminator 1
 3041 0032 4FF00103 		mov	r3, #1
 3042 0036 01E0     		b	.L251
 3043              	.L250:
 3044              		.loc 1 1031 0 discriminator 3
 3045 0038 4FF00003 		mov	r3, #0
 3046              	.L251:
 3047              		.loc 1 1031 0 discriminator 4
 3048 003c 1846     		mov	r0, r3
 3049 003e FFF7FEFF 		bl	assert_param
1032:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_MUTEMODE_WAKEUP(USART_WakeUp));
 3050              		.loc 1 1032 0 is_stmt 1 discriminator 4
 3051 0042 3B68     		ldr	r3, [r7, #0]
 3052 0044 002B     		cmp	r3, #0
 3053 0046 03D0     		beq	.L252
 3054              		.loc 1 1032 0 is_stmt 0 discriminator 2
 3055 0048 3B68     		ldr	r3, [r7, #0]
 3056 004a B3F5006F 		cmp	r3, #2048
 3057 004e 02D1     		bne	.L253
 3058              	.L252:
 3059              		.loc 1 1032 0 discriminator 1
 3060 0050 4FF00103 		mov	r3, #1
 3061 0054 01E0     		b	.L254
 3062              	.L253:
 3063              		.loc 1 1032 0 discriminator 3
 3064 0056 4FF00003 		mov	r3, #0
 3065              	.L254:
 3066              		.loc 1 1032 0 discriminator 4
 3067 005a 1846     		mov	r0, r3
 3068 005c FFF7FEFF 		bl	assert_param
1033:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1034:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_WAKE);
 3069              		.loc 1 1034 0 is_stmt 1 discriminator 4
 3070 0060 7B68     		ldr	r3, [r7, #4]
 3071 0062 1B68     		ldr	r3, [r3, #0]
 3072 0064 23F40062 		bic	r2, r3, #2048
 3073 0068 7B68     		ldr	r3, [r7, #4]
 3074 006a 1A60     		str	r2, [r3, #0]
1035:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 |= USART_WakeUp;
 3075              		.loc 1 1035 0 discriminator 4
 3076 006c 7B68     		ldr	r3, [r7, #4]
 3077 006e 1A68     		ldr	r2, [r3, #0]
 3078 0070 3B68     		ldr	r3, [r7, #0]
 3079 0072 1A43     		orrs	r2, r2, r3
 3080 0074 7B68     		ldr	r3, [r7, #4]
 3081 0076 1A60     		str	r2, [r3, #0]
1036:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3082              		.loc 1 1036 0 discriminator 4
 3083 0078 07F10807 		add	r7, r7, #8
 3084 007c BD46     		mov	sp, r7
 3085 007e 80BD     		pop	{r7, pc}
 3086              	.L256:
 3087              		.align	2
 3088              	.L255:
 3089 0080 00380140 		.word	1073821696
 3090 0084 00440040 		.word	1073759232
 3091 0088 00480040 		.word	1073760256
 3092 008c 004C0040 		.word	1073761280
 3093 0090 00500040 		.word	1073762304
 3094              		.cfi_endproc
 3095              	.LFE134:
 3097              		.section	.text.USART_AddressDetectionConfig,"ax",%progbits
 3098              		.align	2
 3099              		.global	USART_AddressDetectionConfig
 3100              		.thumb
 3101              		.thumb_func
 3103              	USART_AddressDetectionConfig:
 3104              	.LFB135:
1037:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1038:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1039:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Configure the the USART Address detection length.
1040:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1041:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1042:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AddressLength: specifies the USART address length detection.
1043:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1044:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AddressLength_4b: 4-bit address length detection 
1045:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_AddressLength_7b: 7-bit address length detection 
1046:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1047:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1048:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_AddressDetectionConfig(USART_TypeDef* USARTx, uint32_t USART_AddressLength)
1049:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 3105              		.loc 1 1049 0
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 8
 3108              		@ frame_needed = 1, uses_anonymous_args = 0
 3109 0000 80B5     		push	{r7, lr}
 3110              	.LCFI75:
 3111              		.cfi_def_cfa_offset 8
 3112              		.cfi_offset 7, -8
 3113              		.cfi_offset 14, -4
 3114 0002 82B0     		sub	sp, sp, #8
 3115              	.LCFI76:
 3116              		.cfi_def_cfa_offset 16
 3117 0004 00AF     		add	r7, sp, #0
 3118              	.LCFI77:
 3119              		.cfi_def_cfa_register 7
 3120 0006 7860     		str	r0, [r7, #4]
 3121 0008 3960     		str	r1, [r7, #0]
1050:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1051:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 3122              		.loc 1 1051 0
 3123 000a 7A68     		ldr	r2, [r7, #4]
 3124 000c 1C4B     		ldr	r3, .L264
 3125 000e 9A42     		cmp	r2, r3
 3126 0010 0FD0     		beq	.L258
 3127              		.loc 1 1051 0 is_stmt 0 discriminator 2
 3128 0012 7A68     		ldr	r2, [r7, #4]
 3129 0014 1B4B     		ldr	r3, .L264+4
 3130 0016 9A42     		cmp	r2, r3
 3131 0018 0BD0     		beq	.L258
 3132              		.loc 1 1051 0 discriminator 1
 3133 001a 7A68     		ldr	r2, [r7, #4]
 3134 001c 1A4B     		ldr	r3, .L264+8
 3135 001e 9A42     		cmp	r2, r3
 3136 0020 07D0     		beq	.L258
 3137              		.loc 1 1051 0 discriminator 2
 3138 0022 7A68     		ldr	r2, [r7, #4]
 3139 0024 194B     		ldr	r3, .L264+12
 3140 0026 9A42     		cmp	r2, r3
 3141 0028 03D0     		beq	.L258
 3142              		.loc 1 1051 0 discriminator 3
 3143 002a 7A68     		ldr	r2, [r7, #4]
 3144 002c 184B     		ldr	r3, .L264+16
 3145 002e 9A42     		cmp	r2, r3
 3146 0030 02D1     		bne	.L259
 3147              	.L258:
 3148              		.loc 1 1051 0 discriminator 1
 3149 0032 4FF00103 		mov	r3, #1
 3150 0036 01E0     		b	.L260
 3151              	.L259:
 3152              		.loc 1 1051 0 discriminator 3
 3153 0038 4FF00003 		mov	r3, #0
 3154              	.L260:
 3155              		.loc 1 1051 0 discriminator 4
 3156 003c 1846     		mov	r0, r3
 3157 003e FFF7FEFF 		bl	assert_param
1052:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ADDRESS_DETECTION(USART_AddressLength));
 3158              		.loc 1 1052 0 is_stmt 1 discriminator 4
 3159 0042 3B68     		ldr	r3, [r7, #0]
 3160 0044 002B     		cmp	r3, #0
 3161 0046 02D0     		beq	.L261
 3162              		.loc 1 1052 0 is_stmt 0 discriminator 2
 3163 0048 3B68     		ldr	r3, [r7, #0]
 3164 004a 102B     		cmp	r3, #16
 3165 004c 02D1     		bne	.L262
 3166              	.L261:
 3167              		.loc 1 1052 0 discriminator 1
 3168 004e 4FF00103 		mov	r3, #1
 3169 0052 01E0     		b	.L263
 3170              	.L262:
 3171              		.loc 1 1052 0 discriminator 3
 3172 0054 4FF00003 		mov	r3, #0
 3173              	.L263:
 3174              		.loc 1 1052 0 discriminator 4
 3175 0058 1846     		mov	r0, r3
 3176 005a FFF7FEFF 		bl	assert_param
1053:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1054:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_ADDM7);
 3177              		.loc 1 1054 0 is_stmt 1 discriminator 4
 3178 005e 7B68     		ldr	r3, [r7, #4]
 3179 0060 5B68     		ldr	r3, [r3, #4]
 3180 0062 23F01002 		bic	r2, r3, #16
 3181 0066 7B68     		ldr	r3, [r7, #4]
 3182 0068 5A60     		str	r2, [r3, #4]
1055:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |= USART_AddressLength;
 3183              		.loc 1 1055 0 discriminator 4
 3184 006a 7B68     		ldr	r3, [r7, #4]
 3185 006c 5A68     		ldr	r2, [r3, #4]
 3186 006e 3B68     		ldr	r3, [r7, #0]
 3187 0070 1A43     		orrs	r2, r2, r3
 3188 0072 7B68     		ldr	r3, [r7, #4]
 3189 0074 5A60     		str	r2, [r3, #4]
1056:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3190              		.loc 1 1056 0 discriminator 4
 3191 0076 07F10807 		add	r7, r7, #8
 3192 007a BD46     		mov	sp, r7
 3193 007c 80BD     		pop	{r7, pc}
 3194              	.L265:
 3195 007e 00BF     		.align	2
 3196              	.L264:
 3197 0080 00380140 		.word	1073821696
 3198 0084 00440040 		.word	1073759232
 3199 0088 00480040 		.word	1073760256
 3200 008c 004C0040 		.word	1073761280
 3201 0090 00500040 		.word	1073762304
 3202              		.cfi_endproc
 3203              	.LFE135:
 3205              		.section	.text.USART_LINBreakDetectLengthConfig,"ax",%progbits
 3206              		.align	2
 3207              		.global	USART_LINBreakDetectLengthConfig
 3208              		.thumb
 3209              		.thumb_func
 3211              	USART_LINBreakDetectLengthConfig:
 3212              	.LFB136:
1057:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1058:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1059:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1060:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1061:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1062:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group6 LIN mode functions
1063:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   LIN mode functions 
1064:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1065:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1066:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1067:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                        ##### LIN mode functions #####
1068:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1069:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART 
1070:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          LIN Mode communication.
1071:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In LIN mode, 8-bit data format with 1 stop bit is required in accordance 
1072:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          with the LIN standard.
1073:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] Only this LIN Feature is supported by the USART IP:
1074:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) LIN Master Synchronous Break send capability and LIN slave break 
1075:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              detection capability :  13-bit break generation and 10/11 bit break 
1076:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              detection.
1077:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] USART LIN Master transmitter communication is possible through the 
1078:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          following procedure:
1079:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
1080:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Mode transmitter or Mode receiver and hardware flow control values 
1081:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_Init() function.
1082:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the LIN mode using the USART_LINCmd() function.
1083:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1084:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Send the break character using USART_SendBreak() function.
1085:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] USART LIN Master receiver communication is possible through the 
1086:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          following procedure:
1087:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8bits, Stop bits = 1bit, Parity, 
1088:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Mode transmitter or Mode receiver and hardware flow control values 
1089:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_Init() function.
1090:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the break detection length 
1091:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              using the USART_LINBreakDetectLengthConfig() function.
1092:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the LIN mode using the USART_LINCmd() function.
1093:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1094:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          [..]
1095:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) In LIN mode, the following bits must be kept cleared:
1096:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) CLKEN in the USART_CR2 register.
1097:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) STOP[1:0], SCEN, HDSEL and IREN in the USART_CR3 register.
1098:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1099:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1100:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1101:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1102:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1103:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1104:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the USART LIN Break detection length.
1105:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1106:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1107:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_LINBreakDetectLength: specifies the LIN break detection length.
1108:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1109:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_LINBreakDetectLength_10b: 10-bit break detection
1110:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_LINBreakDetectLength_11b: 11-bit break detection
1111:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1112:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1113:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_LINBreakDetectLengthConfig(USART_TypeDef* USARTx, uint32_t USART_LINBreakDetectLength)
1114:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 3213              		.loc 1 1114 0
 3214              		.cfi_startproc
 3215              		@ args = 0, pretend = 0, frame = 8
 3216              		@ frame_needed = 1, uses_anonymous_args = 0
 3217 0000 80B5     		push	{r7, lr}
 3218              	.LCFI78:
 3219              		.cfi_def_cfa_offset 8
 3220              		.cfi_offset 7, -8
 3221              		.cfi_offset 14, -4
 3222 0002 82B0     		sub	sp, sp, #8
 3223              	.LCFI79:
 3224              		.cfi_def_cfa_offset 16
 3225 0004 00AF     		add	r7, sp, #0
 3226              	.LCFI80:
 3227              		.cfi_def_cfa_register 7
 3228 0006 7860     		str	r0, [r7, #4]
 3229 0008 3960     		str	r1, [r7, #0]
1115:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1116:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 3230              		.loc 1 1116 0
 3231 000a 7A68     		ldr	r2, [r7, #4]
 3232 000c 1C4B     		ldr	r3, .L273
 3233 000e 9A42     		cmp	r2, r3
 3234 0010 0FD0     		beq	.L267
 3235              		.loc 1 1116 0 is_stmt 0 discriminator 2
 3236 0012 7A68     		ldr	r2, [r7, #4]
 3237 0014 1B4B     		ldr	r3, .L273+4
 3238 0016 9A42     		cmp	r2, r3
 3239 0018 0BD0     		beq	.L267
 3240              		.loc 1 1116 0 discriminator 1
 3241 001a 7A68     		ldr	r2, [r7, #4]
 3242 001c 1A4B     		ldr	r3, .L273+8
 3243 001e 9A42     		cmp	r2, r3
 3244 0020 07D0     		beq	.L267
 3245              		.loc 1 1116 0 discriminator 2
 3246 0022 7A68     		ldr	r2, [r7, #4]
 3247 0024 194B     		ldr	r3, .L273+12
 3248 0026 9A42     		cmp	r2, r3
 3249 0028 03D0     		beq	.L267
 3250              		.loc 1 1116 0 discriminator 3
 3251 002a 7A68     		ldr	r2, [r7, #4]
 3252 002c 184B     		ldr	r3, .L273+16
 3253 002e 9A42     		cmp	r2, r3
 3254 0030 02D1     		bne	.L268
 3255              	.L267:
 3256              		.loc 1 1116 0 discriminator 1
 3257 0032 4FF00103 		mov	r3, #1
 3258 0036 01E0     		b	.L269
 3259              	.L268:
 3260              		.loc 1 1116 0 discriminator 3
 3261 0038 4FF00003 		mov	r3, #0
 3262              	.L269:
 3263              		.loc 1 1116 0 discriminator 4
 3264 003c 1846     		mov	r0, r3
 3265 003e FFF7FEFF 		bl	assert_param
1117:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_LIN_BREAK_DETECT_LENGTH(USART_LINBreakDetectLength));
 3266              		.loc 1 1117 0 is_stmt 1 discriminator 4
 3267 0042 3B68     		ldr	r3, [r7, #0]
 3268 0044 002B     		cmp	r3, #0
 3269 0046 02D0     		beq	.L270
 3270              		.loc 1 1117 0 is_stmt 0 discriminator 2
 3271 0048 3B68     		ldr	r3, [r7, #0]
 3272 004a 202B     		cmp	r3, #32
 3273 004c 02D1     		bne	.L271
 3274              	.L270:
 3275              		.loc 1 1117 0 discriminator 1
 3276 004e 4FF00103 		mov	r3, #1
 3277 0052 01E0     		b	.L272
 3278              	.L271:
 3279              		.loc 1 1117 0 discriminator 3
 3280 0054 4FF00003 		mov	r3, #0
 3281              	.L272:
 3282              		.loc 1 1117 0 discriminator 4
 3283 0058 1846     		mov	r0, r3
 3284 005a FFF7FEFF 		bl	assert_param
1118:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1119:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_LBDL);
 3285              		.loc 1 1119 0 is_stmt 1 discriminator 4
 3286 005e 7B68     		ldr	r3, [r7, #4]
 3287 0060 5B68     		ldr	r3, [r3, #4]
 3288 0062 23F02002 		bic	r2, r3, #32
 3289 0066 7B68     		ldr	r3, [r7, #4]
 3290 0068 5A60     		str	r2, [r3, #4]
1120:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR2 |= USART_LINBreakDetectLength;  
 3291              		.loc 1 1120 0 discriminator 4
 3292 006a 7B68     		ldr	r3, [r7, #4]
 3293 006c 5A68     		ldr	r2, [r3, #4]
 3294 006e 3B68     		ldr	r3, [r7, #0]
 3295 0070 1A43     		orrs	r2, r2, r3
 3296 0072 7B68     		ldr	r3, [r7, #4]
 3297 0074 5A60     		str	r2, [r3, #4]
1121:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3298              		.loc 1 1121 0 discriminator 4
 3299 0076 07F10807 		add	r7, r7, #8
 3300 007a BD46     		mov	sp, r7
 3301 007c 80BD     		pop	{r7, pc}
 3302              	.L274:
 3303 007e 00BF     		.align	2
 3304              	.L273:
 3305 0080 00380140 		.word	1073821696
 3306 0084 00440040 		.word	1073759232
 3307 0088 00480040 		.word	1073760256
 3308 008c 004C0040 		.word	1073761280
 3309 0090 00500040 		.word	1073762304
 3310              		.cfi_endproc
 3311              	.LFE136:
 3313              		.section	.text.USART_LINCmd,"ax",%progbits
 3314              		.align	2
 3315              		.global	USART_LINCmd
 3316              		.thumb
 3317              		.thumb_func
 3319              	USART_LINCmd:
 3320              	.LFB137:
1122:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1123:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1124:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's LIN mode.
1125:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1126:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1127:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART LIN mode.
1128:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1129:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1130:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1131:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_LINCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1132:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 3321              		.loc 1 1132 0
 3322              		.cfi_startproc
 3323              		@ args = 0, pretend = 0, frame = 8
 3324              		@ frame_needed = 1, uses_anonymous_args = 0
 3325 0000 80B5     		push	{r7, lr}
 3326              	.LCFI81:
 3327              		.cfi_def_cfa_offset 8
 3328              		.cfi_offset 7, -8
 3329              		.cfi_offset 14, -4
 3330 0002 82B0     		sub	sp, sp, #8
 3331              	.LCFI82:
 3332              		.cfi_def_cfa_offset 16
 3333 0004 00AF     		add	r7, sp, #0
 3334              	.LCFI83:
 3335              		.cfi_def_cfa_register 7
 3336 0006 7860     		str	r0, [r7, #4]
 3337 0008 0B46     		mov	r3, r1
 3338 000a FB70     		strb	r3, [r7, #3]
1133:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1134:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 3339              		.loc 1 1134 0
 3340 000c 7A68     		ldr	r2, [r7, #4]
 3341 000e 1E4B     		ldr	r3, .L284
 3342 0010 9A42     		cmp	r2, r3
 3343 0012 0FD0     		beq	.L276
 3344              		.loc 1 1134 0 is_stmt 0 discriminator 2
 3345 0014 7A68     		ldr	r2, [r7, #4]
 3346 0016 1D4B     		ldr	r3, .L284+4
 3347 0018 9A42     		cmp	r2, r3
 3348 001a 0BD0     		beq	.L276
 3349              		.loc 1 1134 0 discriminator 1
 3350 001c 7A68     		ldr	r2, [r7, #4]
 3351 001e 1C4B     		ldr	r3, .L284+8
 3352 0020 9A42     		cmp	r2, r3
 3353 0022 07D0     		beq	.L276
 3354              		.loc 1 1134 0 discriminator 2
 3355 0024 7A68     		ldr	r2, [r7, #4]
 3356 0026 1B4B     		ldr	r3, .L284+12
 3357 0028 9A42     		cmp	r2, r3
 3358 002a 03D0     		beq	.L276
 3359              		.loc 1 1134 0 discriminator 3
 3360 002c 7A68     		ldr	r2, [r7, #4]
 3361 002e 1A4B     		ldr	r3, .L284+16
 3362 0030 9A42     		cmp	r2, r3
 3363 0032 02D1     		bne	.L277
 3364              	.L276:
 3365              		.loc 1 1134 0 discriminator 1
 3366 0034 4FF00103 		mov	r3, #1
 3367 0038 01E0     		b	.L278
 3368              	.L277:
 3369              		.loc 1 1134 0 discriminator 3
 3370 003a 4FF00003 		mov	r3, #0
 3371              	.L278:
 3372              		.loc 1 1134 0 discriminator 4
 3373 003e 1846     		mov	r0, r3
 3374 0040 FFF7FEFF 		bl	assert_param
1135:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3375              		.loc 1 1135 0 is_stmt 1 discriminator 4
 3376 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3377 0046 002B     		cmp	r3, #0
 3378 0048 02D0     		beq	.L279
 3379              		.loc 1 1135 0 is_stmt 0 discriminator 2
 3380 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3381 004c 012B     		cmp	r3, #1
 3382 004e 02D1     		bne	.L280
 3383              	.L279:
 3384              		.loc 1 1135 0 discriminator 1
 3385 0050 4FF00103 		mov	r3, #1
 3386 0054 01E0     		b	.L281
 3387              	.L280:
 3388              		.loc 1 1135 0 discriminator 3
 3389 0056 4FF00003 		mov	r3, #0
 3390              	.L281:
 3391              		.loc 1 1135 0 discriminator 4
 3392 005a 1846     		mov	r0, r3
 3393 005c FFF7FEFF 		bl	assert_param
1136:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1137:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 3394              		.loc 1 1137 0 is_stmt 1 discriminator 4
 3395 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3396 0062 002B     		cmp	r3, #0
 3397 0064 06D0     		beq	.L282
1138:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1139:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
1140:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 |= USART_CR2_LINEN;
 3398              		.loc 1 1140 0
 3399 0066 7B68     		ldr	r3, [r7, #4]
 3400 0068 5B68     		ldr	r3, [r3, #4]
 3401 006a 43F48042 		orr	r2, r3, #16384
 3402 006e 7B68     		ldr	r3, [r7, #4]
 3403 0070 5A60     		str	r2, [r3, #4]
 3404 0072 05E0     		b	.L275
 3405              	.L282:
1141:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1142:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1143:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1144:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the LIN mode by clearing the LINEN bit in the CR2 register */
1145:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR2 &= (uint32_t)~((uint32_t)USART_CR2_LINEN);
 3406              		.loc 1 1145 0
 3407 0074 7B68     		ldr	r3, [r7, #4]
 3408 0076 5B68     		ldr	r3, [r3, #4]
 3409 0078 23F48042 		bic	r2, r3, #16384
 3410 007c 7B68     		ldr	r3, [r7, #4]
 3411 007e 5A60     		str	r2, [r3, #4]
 3412              	.L275:
1146:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1147:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3413              		.loc 1 1147 0
 3414 0080 07F10807 		add	r7, r7, #8
 3415 0084 BD46     		mov	sp, r7
 3416 0086 80BD     		pop	{r7, pc}
 3417              	.L285:
 3418              		.align	2
 3419              	.L284:
 3420 0088 00380140 		.word	1073821696
 3421 008c 00440040 		.word	1073759232
 3422 0090 00480040 		.word	1073760256
 3423 0094 004C0040 		.word	1073761280
 3424 0098 00500040 		.word	1073762304
 3425              		.cfi_endproc
 3426              	.LFE137:
 3428              		.section	.text.USART_HalfDuplexCmd,"ax",%progbits
 3429              		.align	2
 3430              		.global	USART_HalfDuplexCmd
 3431              		.thumb
 3432              		.thumb_func
 3434              	USART_HalfDuplexCmd:
 3435              	.LFB138:
1148:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1149:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1150:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1151:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1152:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1153:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group7 Halfduplex mode function
1154:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Half-duplex mode function 
1155:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1156:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1157:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1158:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                    ##### Half-duplex mode function #####
1159:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1160:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1161:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Half-duplex communication.
1162:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The USART can be configured to follow a single-wire half-duplex protocol 
1163:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          where the TX and RX lines are internally connected.
1164:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] USART Half duplex communication is possible through the following procedure:
1165:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length, Stop bits, Parity, Mode transmitter 
1166:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              or Mode receiver and hardware flow control values using the USART_Init()
1167:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             function.
1168:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the USART address using the USART_SetAddress() function.
1169:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the half duplex mode using USART_HalfDuplexCmd() function.
1170:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1171:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          [..]
1172:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) The RX pin is no longer used.
1173:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) In Half-duplex mode the following bits must be kept cleared:
1174:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) LINEN and CLKEN bits in the USART_CR2 register.
1175:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) SCEN and IREN bits in the USART_CR3 register.
1176:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1177:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1178:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1179:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1180:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1181:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1182:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's Half Duplex communication.
1183:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1184:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1185:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the USART Communication.
1186:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1187:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1188:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1189:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_HalfDuplexCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1190:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 3436              		.loc 1 1190 0
 3437              		.cfi_startproc
 3438              		@ args = 0, pretend = 0, frame = 8
 3439              		@ frame_needed = 1, uses_anonymous_args = 0
 3440 0000 80B5     		push	{r7, lr}
 3441              	.LCFI84:
 3442              		.cfi_def_cfa_offset 8
 3443              		.cfi_offset 7, -8
 3444              		.cfi_offset 14, -4
 3445 0002 82B0     		sub	sp, sp, #8
 3446              	.LCFI85:
 3447              		.cfi_def_cfa_offset 16
 3448 0004 00AF     		add	r7, sp, #0
 3449              	.LCFI86:
 3450              		.cfi_def_cfa_register 7
 3451 0006 7860     		str	r0, [r7, #4]
 3452 0008 0B46     		mov	r3, r1
 3453 000a FB70     		strb	r3, [r7, #3]
1191:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1192:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 3454              		.loc 1 1192 0
 3455 000c 7A68     		ldr	r2, [r7, #4]
 3456 000e 1E4B     		ldr	r3, .L295
 3457 0010 9A42     		cmp	r2, r3
 3458 0012 0FD0     		beq	.L287
 3459              		.loc 1 1192 0 is_stmt 0 discriminator 2
 3460 0014 7A68     		ldr	r2, [r7, #4]
 3461 0016 1D4B     		ldr	r3, .L295+4
 3462 0018 9A42     		cmp	r2, r3
 3463 001a 0BD0     		beq	.L287
 3464              		.loc 1 1192 0 discriminator 1
 3465 001c 7A68     		ldr	r2, [r7, #4]
 3466 001e 1C4B     		ldr	r3, .L295+8
 3467 0020 9A42     		cmp	r2, r3
 3468 0022 07D0     		beq	.L287
 3469              		.loc 1 1192 0 discriminator 2
 3470 0024 7A68     		ldr	r2, [r7, #4]
 3471 0026 1B4B     		ldr	r3, .L295+12
 3472 0028 9A42     		cmp	r2, r3
 3473 002a 03D0     		beq	.L287
 3474              		.loc 1 1192 0 discriminator 3
 3475 002c 7A68     		ldr	r2, [r7, #4]
 3476 002e 1A4B     		ldr	r3, .L295+16
 3477 0030 9A42     		cmp	r2, r3
 3478 0032 02D1     		bne	.L288
 3479              	.L287:
 3480              		.loc 1 1192 0 discriminator 1
 3481 0034 4FF00103 		mov	r3, #1
 3482 0038 01E0     		b	.L289
 3483              	.L288:
 3484              		.loc 1 1192 0 discriminator 3
 3485 003a 4FF00003 		mov	r3, #0
 3486              	.L289:
 3487              		.loc 1 1192 0 discriminator 4
 3488 003e 1846     		mov	r0, r3
 3489 0040 FFF7FEFF 		bl	assert_param
1193:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3490              		.loc 1 1193 0 is_stmt 1 discriminator 4
 3491 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3492 0046 002B     		cmp	r3, #0
 3493 0048 02D0     		beq	.L290
 3494              		.loc 1 1193 0 is_stmt 0 discriminator 2
 3495 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3496 004c 012B     		cmp	r3, #1
 3497 004e 02D1     		bne	.L291
 3498              	.L290:
 3499              		.loc 1 1193 0 discriminator 1
 3500 0050 4FF00103 		mov	r3, #1
 3501 0054 01E0     		b	.L292
 3502              	.L291:
 3503              		.loc 1 1193 0 discriminator 3
 3504 0056 4FF00003 		mov	r3, #0
 3505              	.L292:
 3506              		.loc 1 1193 0 discriminator 4
 3507 005a 1846     		mov	r0, r3
 3508 005c FFF7FEFF 		bl	assert_param
1194:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1195:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 3509              		.loc 1 1195 0 is_stmt 1 discriminator 4
 3510 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3511 0062 002B     		cmp	r3, #0
 3512 0064 06D0     		beq	.L293
1196:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1197:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
1198:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_HDSEL;
 3513              		.loc 1 1198 0
 3514 0066 7B68     		ldr	r3, [r7, #4]
 3515 0068 9B68     		ldr	r3, [r3, #8]
 3516 006a 43F00802 		orr	r2, r3, #8
 3517 006e 7B68     		ldr	r3, [r7, #4]
 3518 0070 9A60     		str	r2, [r3, #8]
 3519 0072 05E0     		b	.L286
 3520              	.L293:
1199:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1200:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1201:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1202:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the Half-Duplex mode by clearing the HDSEL bit in the CR3 register */
1203:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_HDSEL);
 3521              		.loc 1 1203 0
 3522 0074 7B68     		ldr	r3, [r7, #4]
 3523 0076 9B68     		ldr	r3, [r3, #8]
 3524 0078 23F00802 		bic	r2, r3, #8
 3525 007c 7B68     		ldr	r3, [r7, #4]
 3526 007e 9A60     		str	r2, [r3, #8]
 3527              	.L286:
1204:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1205:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3528              		.loc 1 1205 0
 3529 0080 07F10807 		add	r7, r7, #8
 3530 0084 BD46     		mov	sp, r7
 3531 0086 80BD     		pop	{r7, pc}
 3532              	.L296:
 3533              		.align	2
 3534              	.L295:
 3535 0088 00380140 		.word	1073821696
 3536 008c 00440040 		.word	1073759232
 3537 0090 00480040 		.word	1073760256
 3538 0094 004C0040 		.word	1073761280
 3539 0098 00500040 		.word	1073762304
 3540              		.cfi_endproc
 3541              	.LFE138:
 3543              		.section	.text.USART_SetGuardTime,"ax",%progbits
 3544              		.align	2
 3545              		.global	USART_SetGuardTime
 3546              		.thumb
 3547              		.thumb_func
 3549              	USART_SetGuardTime:
 3550              	.LFB139:
1206:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1207:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1208:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1209:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1210:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1211:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1212:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group8 Smartcard mode functions
1213:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Smartcard mode functions 
1214:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1215:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1216:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1217:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                      ##### Smartcard mode functions #####
1218:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1219:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1220:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Smartcard communication.
1221:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] The Smartcard interface is designed to support asynchronous protocol 
1222:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          Smartcards as defined in the ISO 7816-3 standard. The USART can provide 
1223:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          a clock to the smartcard through the SCLK output. In smartcard mode, 
1224:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          SCLK is not associated to the communication but is simply derived from 
1225:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the internal peripheral input clock through a 5-bit prescaler.
1226:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] Smartcard communication is possible through the following procedure:
1227:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Smartcard Prsecaler using the USART_SetPrescaler() 
1228:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
1229:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Smartcard Guard Time using the USART_SetGuardTime() 
1230:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
1231:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the USART clock using the USART_ClockInit() function as following:
1232:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART Clock enabled.
1233:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART CPOL Low.
1234:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART CPHA on first edge.
1235:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) USART Last Bit Clock Enabled.
1236:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Smartcard interface using the USART_Init() function as 
1237:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              following:
1238:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Word Length = 9 Bits.
1239:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) 1.5 Stop Bit.
1240:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Even parity.
1241:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) BaudRate = 12096 baud.
1242:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Hardware flow control disabled (RTS and CTS signals).
1243:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (++) Tx and Rx enabled
1244:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Optionally you can enable the parity error interrupt using 
1245:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_ITConfig() function.
1246:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the Smartcard NACK using the USART_SmartCardNACKCmd() function.
1247:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the Smartcard interface using the USART_SmartCardCmd() function.
1248:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1249:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] 
1250:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   Please refer to the ISO 7816-3 specification for more details.
1251:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] 
1252:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) It is also possible to choose 0.5 stop bit for receiving but it is 
1253:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              recommended to use 1.5 stop bits for both transmitting and receiving 
1254:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              to avoid switching between the two configurations.
1255:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (@) In smartcard mode, the following bits must be kept cleared:
1256:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) LINEN bit in the USART_CR2 register.
1257:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (+@) HDSEL and IREN bits in the USART_CR3 register.
1258:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1259:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1260:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1261:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1262:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1263:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1264:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the specified USART guard time.
1265:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1266:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1267:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_GuardTime: specifies the guard time.
1268:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1269:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1270:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetGuardTime(USART_TypeDef* USARTx, uint8_t USART_GuardTime)
1271:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 3551              		.loc 1 1271 0
 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 8
 3554              		@ frame_needed = 1, uses_anonymous_args = 0
 3555 0000 80B5     		push	{r7, lr}
 3556              	.LCFI87:
 3557              		.cfi_def_cfa_offset 8
 3558              		.cfi_offset 7, -8
 3559              		.cfi_offset 14, -4
 3560 0002 82B0     		sub	sp, sp, #8
 3561              	.LCFI88:
 3562              		.cfi_def_cfa_offset 16
 3563 0004 00AF     		add	r7, sp, #0
 3564              	.LCFI89:
 3565              		.cfi_def_cfa_register 7
 3566 0006 7860     		str	r0, [r7, #4]
 3567 0008 0B46     		mov	r3, r1
 3568 000a FB70     		strb	r3, [r7, #3]
1272:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1273:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 3569              		.loc 1 1273 0
 3570 000c 7A68     		ldr	r2, [r7, #4]
 3571 000e 154B     		ldr	r3, .L301
 3572 0010 9A42     		cmp	r2, r3
 3573 0012 07D0     		beq	.L298
 3574              		.loc 1 1273 0 is_stmt 0 discriminator 2
 3575 0014 7A68     		ldr	r2, [r7, #4]
 3576 0016 144B     		ldr	r3, .L301+4
 3577 0018 9A42     		cmp	r2, r3
 3578 001a 03D0     		beq	.L298
 3579              		.loc 1 1273 0 discriminator 1
 3580 001c 7A68     		ldr	r2, [r7, #4]
 3581 001e 134B     		ldr	r3, .L301+8
 3582 0020 9A42     		cmp	r2, r3
 3583 0022 02D1     		bne	.L299
 3584              	.L298:
 3585 0024 4FF00103 		mov	r3, #1
 3586 0028 01E0     		b	.L300
 3587              	.L299:
 3588              		.loc 1 1273 0 discriminator 3
 3589 002a 4FF00003 		mov	r3, #0
 3590              	.L300:
 3591              		.loc 1 1273 0 discriminator 4
 3592 002e 1846     		mov	r0, r3
 3593 0030 FFF7FEFF 		bl	assert_param
1274:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1275:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART Guard time */
1276:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR &= USART_GTPR_PSC;
 3594              		.loc 1 1276 0 is_stmt 1 discriminator 4
 3595 0034 7B68     		ldr	r3, [r7, #4]
 3596 0036 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 3597 0038 9BB2     		uxth	r3, r3
 3598 003a DBB2     		uxtb	r3, r3
 3599 003c 9AB2     		uxth	r2, r3
 3600 003e 7B68     		ldr	r3, [r7, #4]
 3601 0040 1A82     		strh	r2, [r3, #16]	@ movhi
1277:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART guard time */
1278:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->GTPR |= (uint16_t)((uint16_t)USART_GuardTime << 0x08);
 3602              		.loc 1 1278 0 discriminator 4
 3603 0042 7B68     		ldr	r3, [r7, #4]
 3604 0044 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 3605 0046 9AB2     		uxth	r2, r3
 3606 0048 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3607 004a 9BB2     		uxth	r3, r3
 3608 004c 4FEA0323 		lsl	r3, r3, #8
 3609 0050 9BB2     		uxth	r3, r3
 3610 0052 1343     		orrs	r3, r3, r2
 3611 0054 9AB2     		uxth	r2, r3
 3612 0056 7B68     		ldr	r3, [r7, #4]
 3613 0058 1A82     		strh	r2, [r3, #16]	@ movhi
1279:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3614              		.loc 1 1279 0 discriminator 4
 3615 005a 07F10807 		add	r7, r7, #8
 3616 005e BD46     		mov	sp, r7
 3617 0060 80BD     		pop	{r7, pc}
 3618              	.L302:
 3619 0062 00BF     		.align	2
 3620              	.L301:
 3621 0064 00380140 		.word	1073821696
 3622 0068 00440040 		.word	1073759232
 3623 006c 00480040 		.word	1073760256
 3624              		.cfi_endproc
 3625              	.LFE139:
 3627              		.section	.text.USART_SmartCardCmd,"ax",%progbits
 3628              		.align	2
 3629              		.global	USART_SmartCardCmd
 3630              		.thumb
 3631              		.thumb_func
 3633              	USART_SmartCardCmd:
 3634              	.LFB140:
1280:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1281:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1282:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's Smart Card mode.
1283:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1284:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1285:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the Smart Card mode.
1286:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.      
1287:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1288:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1289:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SmartCardCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1290:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 3635              		.loc 1 1290 0
 3636              		.cfi_startproc
 3637              		@ args = 0, pretend = 0, frame = 8
 3638              		@ frame_needed = 1, uses_anonymous_args = 0
 3639 0000 80B5     		push	{r7, lr}
 3640              	.LCFI90:
 3641              		.cfi_def_cfa_offset 8
 3642              		.cfi_offset 7, -8
 3643              		.cfi_offset 14, -4
 3644 0002 82B0     		sub	sp, sp, #8
 3645              	.LCFI91:
 3646              		.cfi_def_cfa_offset 16
 3647 0004 00AF     		add	r7, sp, #0
 3648              	.LCFI92:
 3649              		.cfi_def_cfa_register 7
 3650 0006 7860     		str	r0, [r7, #4]
 3651 0008 0B46     		mov	r3, r1
 3652 000a FB70     		strb	r3, [r7, #3]
1291:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1292:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 3653              		.loc 1 1292 0
 3654 000c 7A68     		ldr	r2, [r7, #4]
 3655 000e 1A4B     		ldr	r3, .L312
 3656 0010 9A42     		cmp	r2, r3
 3657 0012 07D0     		beq	.L304
 3658              		.loc 1 1292 0 is_stmt 0 discriminator 2
 3659 0014 7A68     		ldr	r2, [r7, #4]
 3660 0016 194B     		ldr	r3, .L312+4
 3661 0018 9A42     		cmp	r2, r3
 3662 001a 03D0     		beq	.L304
 3663              		.loc 1 1292 0 discriminator 1
 3664 001c 7A68     		ldr	r2, [r7, #4]
 3665 001e 184B     		ldr	r3, .L312+8
 3666 0020 9A42     		cmp	r2, r3
 3667 0022 02D1     		bne	.L305
 3668              	.L304:
 3669 0024 4FF00103 		mov	r3, #1
 3670 0028 01E0     		b	.L306
 3671              	.L305:
 3672              		.loc 1 1292 0 discriminator 3
 3673 002a 4FF00003 		mov	r3, #0
 3674              	.L306:
 3675              		.loc 1 1292 0 discriminator 4
 3676 002e 1846     		mov	r0, r3
 3677 0030 FFF7FEFF 		bl	assert_param
1293:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3678              		.loc 1 1293 0 is_stmt 1 discriminator 4
 3679 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3680 0036 002B     		cmp	r3, #0
 3681 0038 02D0     		beq	.L307
 3682              		.loc 1 1293 0 is_stmt 0 discriminator 2
 3683 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3684 003c 012B     		cmp	r3, #1
 3685 003e 02D1     		bne	.L308
 3686              	.L307:
 3687              		.loc 1 1293 0 discriminator 1
 3688 0040 4FF00103 		mov	r3, #1
 3689 0044 01E0     		b	.L309
 3690              	.L308:
 3691              		.loc 1 1293 0 discriminator 3
 3692 0046 4FF00003 		mov	r3, #0
 3693              	.L309:
 3694              		.loc 1 1293 0 discriminator 4
 3695 004a 1846     		mov	r0, r3
 3696 004c FFF7FEFF 		bl	assert_param
1294:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 3697              		.loc 1 1294 0 is_stmt 1 discriminator 4
 3698 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3699 0052 002B     		cmp	r3, #0
 3700 0054 06D0     		beq	.L310
1295:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1296:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the SC mode by setting the SCEN bit in the CR3 register */
1297:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_SCEN;
 3701              		.loc 1 1297 0
 3702 0056 7B68     		ldr	r3, [r7, #4]
 3703 0058 9B68     		ldr	r3, [r3, #8]
 3704 005a 43F02002 		orr	r2, r3, #32
 3705 005e 7B68     		ldr	r3, [r7, #4]
 3706 0060 9A60     		str	r2, [r3, #8]
 3707 0062 05E0     		b	.L303
 3708              	.L310:
1298:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1299:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1300:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1301:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the SC mode by clearing the SCEN bit in the CR3 register */
1302:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_SCEN);
 3709              		.loc 1 1302 0
 3710 0064 7B68     		ldr	r3, [r7, #4]
 3711 0066 9B68     		ldr	r3, [r3, #8]
 3712 0068 23F02002 		bic	r2, r3, #32
 3713 006c 7B68     		ldr	r3, [r7, #4]
 3714 006e 9A60     		str	r2, [r3, #8]
 3715              	.L303:
1303:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1304:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3716              		.loc 1 1304 0
 3717 0070 07F10807 		add	r7, r7, #8
 3718 0074 BD46     		mov	sp, r7
 3719 0076 80BD     		pop	{r7, pc}
 3720              	.L313:
 3721              		.align	2
 3722              	.L312:
 3723 0078 00380140 		.word	1073821696
 3724 007c 00440040 		.word	1073759232
 3725 0080 00480040 		.word	1073760256
 3726              		.cfi_endproc
 3727              	.LFE140:
 3729              		.section	.text.USART_SmartCardNACKCmd,"ax",%progbits
 3730              		.align	2
 3731              		.global	USART_SmartCardNACKCmd
 3732              		.thumb
 3733              		.thumb_func
 3735              	USART_SmartCardNACKCmd:
 3736              	.LFB141:
1305:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1306:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1307:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables NACK transmission.
1308:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1309:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1310:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the NACK transmission.
1311:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
1312:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1313:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1314:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SmartCardNACKCmd(USART_TypeDef* USARTx, FunctionalState NewState)
1315:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 3737              		.loc 1 1315 0
 3738              		.cfi_startproc
 3739              		@ args = 0, pretend = 0, frame = 8
 3740              		@ frame_needed = 1, uses_anonymous_args = 0
 3741 0000 80B5     		push	{r7, lr}
 3742              	.LCFI93:
 3743              		.cfi_def_cfa_offset 8
 3744              		.cfi_offset 7, -8
 3745              		.cfi_offset 14, -4
 3746 0002 82B0     		sub	sp, sp, #8
 3747              	.LCFI94:
 3748              		.cfi_def_cfa_offset 16
 3749 0004 00AF     		add	r7, sp, #0
 3750              	.LCFI95:
 3751              		.cfi_def_cfa_register 7
 3752 0006 7860     		str	r0, [r7, #4]
 3753 0008 0B46     		mov	r3, r1
 3754 000a FB70     		strb	r3, [r7, #3]
1316:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1317:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx)); 
 3755              		.loc 1 1317 0
 3756 000c 7A68     		ldr	r2, [r7, #4]
 3757 000e 1A4B     		ldr	r3, .L323
 3758 0010 9A42     		cmp	r2, r3
 3759 0012 07D0     		beq	.L315
 3760              		.loc 1 1317 0 is_stmt 0 discriminator 2
 3761 0014 7A68     		ldr	r2, [r7, #4]
 3762 0016 194B     		ldr	r3, .L323+4
 3763 0018 9A42     		cmp	r2, r3
 3764 001a 03D0     		beq	.L315
 3765              		.loc 1 1317 0 discriminator 1
 3766 001c 7A68     		ldr	r2, [r7, #4]
 3767 001e 184B     		ldr	r3, .L323+8
 3768 0020 9A42     		cmp	r2, r3
 3769 0022 02D1     		bne	.L316
 3770              	.L315:
 3771 0024 4FF00103 		mov	r3, #1
 3772 0028 01E0     		b	.L317
 3773              	.L316:
 3774              		.loc 1 1317 0 discriminator 3
 3775 002a 4FF00003 		mov	r3, #0
 3776              	.L317:
 3777              		.loc 1 1317 0 discriminator 4
 3778 002e 1846     		mov	r0, r3
 3779 0030 FFF7FEFF 		bl	assert_param
1318:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 3780              		.loc 1 1318 0 is_stmt 1 discriminator 4
 3781 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3782 0036 002B     		cmp	r3, #0
 3783 0038 02D0     		beq	.L318
 3784              		.loc 1 1318 0 is_stmt 0 discriminator 2
 3785 003a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3786 003c 012B     		cmp	r3, #1
 3787 003e 02D1     		bne	.L319
 3788              	.L318:
 3789              		.loc 1 1318 0 discriminator 1
 3790 0040 4FF00103 		mov	r3, #1
 3791 0044 01E0     		b	.L320
 3792              	.L319:
 3793              		.loc 1 1318 0 discriminator 3
 3794 0046 4FF00003 		mov	r3, #0
 3795              	.L320:
 3796              		.loc 1 1318 0 discriminator 4
 3797 004a 1846     		mov	r0, r3
 3798 004c FFF7FEFF 		bl	assert_param
1319:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 3799              		.loc 1 1319 0 is_stmt 1 discriminator 4
 3800 0050 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3801 0052 002B     		cmp	r3, #0
 3802 0054 06D0     		beq	.L321
1320:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1321:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the NACK transmission by setting the NACK bit in the CR3 register */
1322:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_NACK;
 3803              		.loc 1 1322 0
 3804 0056 7B68     		ldr	r3, [r7, #4]
 3805 0058 9B68     		ldr	r3, [r3, #8]
 3806 005a 43F01002 		orr	r2, r3, #16
 3807 005e 7B68     		ldr	r3, [r7, #4]
 3808 0060 9A60     		str	r2, [r3, #8]
 3809 0062 05E0     		b	.L314
 3810              	.L321:
1323:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1324:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1325:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1326:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the NACK transmission by clearing the NACK bit in the CR3 register */
1327:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_NACK);
 3811              		.loc 1 1327 0
 3812 0064 7B68     		ldr	r3, [r7, #4]
 3813 0066 9B68     		ldr	r3, [r3, #8]
 3814 0068 23F01002 		bic	r2, r3, #16
 3815 006c 7B68     		ldr	r3, [r7, #4]
 3816 006e 9A60     		str	r2, [r3, #8]
 3817              	.L314:
1328:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1329:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3818              		.loc 1 1329 0
 3819 0070 07F10807 		add	r7, r7, #8
 3820 0074 BD46     		mov	sp, r7
 3821 0076 80BD     		pop	{r7, pc}
 3822              	.L324:
 3823              		.align	2
 3824              	.L323:
 3825 0078 00380140 		.word	1073821696
 3826 007c 00440040 		.word	1073759232
 3827 0080 00480040 		.word	1073760256
 3828              		.cfi_endproc
 3829              	.LFE141:
 3831              		.section	.text.USART_SetAutoRetryCount,"ax",%progbits
 3832              		.align	2
 3833              		.global	USART_SetAutoRetryCount
 3834              		.thumb
 3835              		.thumb_func
 3837              	USART_SetAutoRetryCount:
 3838              	.LFB142:
1330:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1331:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1332:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the Smart Card number of retries in transmit and receive.
1333:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1334:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1335:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AutoCount: specifies the Smart Card auto retry count.
1336:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1337:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1338:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetAutoRetryCount(USART_TypeDef* USARTx, uint8_t USART_AutoCount)
1339:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 3839              		.loc 1 1339 0
 3840              		.cfi_startproc
 3841              		@ args = 0, pretend = 0, frame = 8
 3842              		@ frame_needed = 1, uses_anonymous_args = 0
 3843 0000 80B5     		push	{r7, lr}
 3844              	.LCFI96:
 3845              		.cfi_def_cfa_offset 8
 3846              		.cfi_offset 7, -8
 3847              		.cfi_offset 14, -4
 3848 0002 82B0     		sub	sp, sp, #8
 3849              	.LCFI97:
 3850              		.cfi_def_cfa_offset 16
 3851 0004 00AF     		add	r7, sp, #0
 3852              	.LCFI98:
 3853              		.cfi_def_cfa_register 7
 3854 0006 7860     		str	r0, [r7, #4]
 3855 0008 0B46     		mov	r3, r1
 3856 000a FB70     		strb	r3, [r7, #3]
1340:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1341:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 3857              		.loc 1 1341 0
 3858 000c 7A68     		ldr	r2, [r7, #4]
 3859 000e 174B     		ldr	r3, .L329
 3860 0010 9A42     		cmp	r2, r3
 3861 0012 07D0     		beq	.L326
 3862              		.loc 1 1341 0 is_stmt 0 discriminator 2
 3863 0014 7A68     		ldr	r2, [r7, #4]
 3864 0016 164B     		ldr	r3, .L329+4
 3865 0018 9A42     		cmp	r2, r3
 3866 001a 03D0     		beq	.L326
 3867              		.loc 1 1341 0 discriminator 1
 3868 001c 7A68     		ldr	r2, [r7, #4]
 3869 001e 154B     		ldr	r3, .L329+8
 3870 0020 9A42     		cmp	r2, r3
 3871 0022 02D1     		bne	.L327
 3872              	.L326:
 3873 0024 4FF00103 		mov	r3, #1
 3874 0028 01E0     		b	.L328
 3875              	.L327:
 3876              		.loc 1 1341 0 discriminator 3
 3877 002a 4FF00003 		mov	r3, #0
 3878              	.L328:
 3879              		.loc 1 1341 0 discriminator 4
 3880 002e 1846     		mov	r0, r3
 3881 0030 FFF7FEFF 		bl	assert_param
1342:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_AUTO_RETRY_COUNTER(USART_AutoCount));
 3882              		.loc 1 1342 0 is_stmt 1 discriminator 4
 3883 0034 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3884 0036 072B     		cmp	r3, #7
 3885 0038 8CBF     		ite	hi
 3886 003a 0023     		movhi	r3, #0
 3887 003c 0123     		movls	r3, #1
 3888 003e DBB2     		uxtb	r3, r3
 3889 0040 1846     		mov	r0, r3
 3890 0042 FFF7FEFF 		bl	assert_param
1343:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the USART auto retry count */
1344:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_SCARCNT);
 3891              		.loc 1 1344 0 discriminator 4
 3892 0046 7B68     		ldr	r3, [r7, #4]
 3893 0048 9B68     		ldr	r3, [r3, #8]
 3894 004a 23F46022 		bic	r2, r3, #917504
 3895 004e 7B68     		ldr	r3, [r7, #4]
 3896 0050 9A60     		str	r2, [r3, #8]
1345:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the USART auto retry count*/
1346:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= (uint32_t)((uint32_t)USART_AutoCount << 0x11);
 3897              		.loc 1 1346 0 discriminator 4
 3898 0052 7B68     		ldr	r3, [r7, #4]
 3899 0054 9A68     		ldr	r2, [r3, #8]
 3900 0056 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3901 0058 4FEA4343 		lsl	r3, r3, #17
 3902 005c 1A43     		orrs	r2, r2, r3
 3903 005e 7B68     		ldr	r3, [r7, #4]
 3904 0060 9A60     		str	r2, [r3, #8]
1347:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3905              		.loc 1 1347 0 discriminator 4
 3906 0062 07F10807 		add	r7, r7, #8
 3907 0066 BD46     		mov	sp, r7
 3908 0068 80BD     		pop	{r7, pc}
 3909              	.L330:
 3910 006a 00BF     		.align	2
 3911              	.L329:
 3912 006c 00380140 		.word	1073821696
 3913 0070 00440040 		.word	1073759232
 3914 0074 00480040 		.word	1073760256
 3915              		.cfi_endproc
 3916              	.LFE142:
 3918              		.section	.text.USART_SetBlockLength,"ax",%progbits
 3919              		.align	2
 3920              		.global	USART_SetBlockLength
 3921              		.thumb
 3922              		.thumb_func
 3924              	USART_SetBlockLength:
 3925              	.LFB143:
1348:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1349:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1350:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the Smart Card Block length.
1351:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1352:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3.
1353:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_BlockLength: specifies the Smart Card block length.
1354:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1355:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1356:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetBlockLength(USART_TypeDef* USARTx, uint8_t USART_BlockLength)
1357:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {    
 3926              		.loc 1 1357 0
 3927              		.cfi_startproc
 3928              		@ args = 0, pretend = 0, frame = 8
 3929              		@ frame_needed = 1, uses_anonymous_args = 0
 3930 0000 80B5     		push	{r7, lr}
 3931              	.LCFI99:
 3932              		.cfi_def_cfa_offset 8
 3933              		.cfi_offset 7, -8
 3934              		.cfi_offset 14, -4
 3935 0002 82B0     		sub	sp, sp, #8
 3936              	.LCFI100:
 3937              		.cfi_def_cfa_offset 16
 3938 0004 00AF     		add	r7, sp, #0
 3939              	.LCFI101:
 3940              		.cfi_def_cfa_register 7
 3941 0006 7860     		str	r0, [r7, #4]
 3942 0008 0B46     		mov	r3, r1
 3943 000a FB70     		strb	r3, [r7, #3]
1358:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1359:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_123_PERIPH(USARTx));
 3944              		.loc 1 1359 0
 3945 000c 7A68     		ldr	r2, [r7, #4]
 3946 000e 124B     		ldr	r3, .L335
 3947 0010 9A42     		cmp	r2, r3
 3948 0012 07D0     		beq	.L332
 3949              		.loc 1 1359 0 is_stmt 0 discriminator 2
 3950 0014 7A68     		ldr	r2, [r7, #4]
 3951 0016 114B     		ldr	r3, .L335+4
 3952 0018 9A42     		cmp	r2, r3
 3953 001a 03D0     		beq	.L332
 3954              		.loc 1 1359 0 discriminator 1
 3955 001c 7A68     		ldr	r2, [r7, #4]
 3956 001e 104B     		ldr	r3, .L335+8
 3957 0020 9A42     		cmp	r2, r3
 3958 0022 02D1     		bne	.L333
 3959              	.L332:
 3960 0024 4FF00103 		mov	r3, #1
 3961 0028 01E0     		b	.L334
 3962              	.L333:
 3963              		.loc 1 1359 0 discriminator 3
 3964 002a 4FF00003 		mov	r3, #0
 3965              	.L334:
 3966              		.loc 1 1359 0 discriminator 4
 3967 002e 1846     		mov	r0, r3
 3968 0030 FFF7FEFF 		bl	assert_param
1360:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1361:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the Smart card block length */
1362:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR &= (uint32_t)~((uint32_t)USART_RTOR_BLEN);
 3969              		.loc 1 1362 0 is_stmt 1 discriminator 4
 3970 0034 7B68     		ldr	r3, [r7, #4]
 3971 0036 5B69     		ldr	r3, [r3, #20]
 3972 0038 23F07F42 		bic	r2, r3, #-16777216
 3973 003c 7B68     		ldr	r3, [r7, #4]
 3974 003e 5A61     		str	r2, [r3, #20]
1363:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the Smart Card block length */
1364:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->RTOR |= (uint32_t)((uint32_t)USART_BlockLength << 0x18);
 3975              		.loc 1 1364 0 discriminator 4
 3976 0040 7B68     		ldr	r3, [r7, #4]
 3977 0042 5A69     		ldr	r2, [r3, #20]
 3978 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 3979 0046 4FEA0363 		lsl	r3, r3, #24
 3980 004a 1A43     		orrs	r2, r2, r3
 3981 004c 7B68     		ldr	r3, [r7, #4]
 3982 004e 5A61     		str	r2, [r3, #20]
1365:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 3983              		.loc 1 1365 0 discriminator 4
 3984 0050 07F10807 		add	r7, r7, #8
 3985 0054 BD46     		mov	sp, r7
 3986 0056 80BD     		pop	{r7, pc}
 3987              	.L336:
 3988              		.align	2
 3989              	.L335:
 3990 0058 00380140 		.word	1073821696
 3991 005c 00440040 		.word	1073759232
 3992 0060 00480040 		.word	1073760256
 3993              		.cfi_endproc
 3994              	.LFE143:
 3996              		.section	.text.USART_IrDAConfig,"ax",%progbits
 3997              		.align	2
 3998              		.global	USART_IrDAConfig
 3999              		.thumb
 4000              		.thumb_func
 4002              	USART_IrDAConfig:
 4003              	.LFB144:
1366:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1367:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1368:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1369:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1370:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1371:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group9 IrDA mode functions
1372:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   IrDA mode functions 
1373:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1374:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1375:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1376:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                         ##### IrDA mode functions #####
1377:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1378:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1379:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          IrDA communication.
1380:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] IrDA is a half duplex communication protocol. If the Transmitter is busy, 
1381:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          any data on the IrDA receive line will be ignored by the IrDA decoder 
1382:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          and if the Receiver is busy, data on the TX from the USART to IrDA will 
1383:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          not be encoded by IrDA. While receiving data, transmission should be 
1384:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          avoided as the data to be transmitted could be corrupted.
1385:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] IrDA communication is possible through the following procedure:
1386:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8 bits, Stop bits, Parity, 
1387:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Transmitter/Receiver modes and hardware flow control values using 
1388:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_Init() function.
1389:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the IrDA pulse width by configuring the prescaler using  
1390:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_SetPrescaler() function.
1391:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the IrDA  USART_IrDAMode_LowPower or USART_IrDAMode_Normal 
1392:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              mode using the USART_IrDAConfig() function.
1393:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the IrDA using the USART_IrDACmd() function.
1394:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.         
1395:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..]
1396:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     (@) A pulse of width less than two and greater than one PSC period(s) may or 
1397:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         may not be rejected.
1398:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     (@) The receiver set up time should be managed by software. The IrDA physical 
1399:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         layer specification specifies a minimum of 10 ms delay between 
1400:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         transmission and reception (IrDA is a half duplex protocol).
1401:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     (@) In IrDA mode, the following bits must be kept cleared:
1402:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (+@) LINEN, STOP and CLKEN bits in the USART_CR2 register.
1403:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****         (+@) SCEN and HDSEL bits in the USART_CR3 register.
1404:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1405:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1406:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1407:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1408:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1409:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1410:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Configures the USART's IrDA interface.
1411:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1412:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1413:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IrDAMode: specifies the IrDA mode.
1414:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1415:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IrDAMode_LowPower
1416:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IrDAMode_Normal
1417:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1418:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1419:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_IrDAConfig(USART_TypeDef* USARTx, uint32_t USART_IrDAMode)
1420:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4004              		.loc 1 1420 0
 4005              		.cfi_startproc
 4006              		@ args = 0, pretend = 0, frame = 8
 4007              		@ frame_needed = 1, uses_anonymous_args = 0
 4008 0000 80B5     		push	{r7, lr}
 4009              	.LCFI102:
 4010              		.cfi_def_cfa_offset 8
 4011              		.cfi_offset 7, -8
 4012              		.cfi_offset 14, -4
 4013 0002 82B0     		sub	sp, sp, #8
 4014              	.LCFI103:
 4015              		.cfi_def_cfa_offset 16
 4016 0004 00AF     		add	r7, sp, #0
 4017              	.LCFI104:
 4018              		.cfi_def_cfa_register 7
 4019 0006 7860     		str	r0, [r7, #4]
 4020 0008 3960     		str	r1, [r7, #0]
1421:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1422:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4021              		.loc 1 1422 0
 4022 000a 7A68     		ldr	r2, [r7, #4]
 4023 000c 1C4B     		ldr	r3, .L344
 4024 000e 9A42     		cmp	r2, r3
 4025 0010 0FD0     		beq	.L338
 4026              		.loc 1 1422 0 is_stmt 0 discriminator 2
 4027 0012 7A68     		ldr	r2, [r7, #4]
 4028 0014 1B4B     		ldr	r3, .L344+4
 4029 0016 9A42     		cmp	r2, r3
 4030 0018 0BD0     		beq	.L338
 4031              		.loc 1 1422 0 discriminator 1
 4032 001a 7A68     		ldr	r2, [r7, #4]
 4033 001c 1A4B     		ldr	r3, .L344+8
 4034 001e 9A42     		cmp	r2, r3
 4035 0020 07D0     		beq	.L338
 4036              		.loc 1 1422 0 discriminator 2
 4037 0022 7A68     		ldr	r2, [r7, #4]
 4038 0024 194B     		ldr	r3, .L344+12
 4039 0026 9A42     		cmp	r2, r3
 4040 0028 03D0     		beq	.L338
 4041              		.loc 1 1422 0 discriminator 3
 4042 002a 7A68     		ldr	r2, [r7, #4]
 4043 002c 184B     		ldr	r3, .L344+16
 4044 002e 9A42     		cmp	r2, r3
 4045 0030 02D1     		bne	.L339
 4046              	.L338:
 4047              		.loc 1 1422 0 discriminator 1
 4048 0032 4FF00103 		mov	r3, #1
 4049 0036 01E0     		b	.L340
 4050              	.L339:
 4051              		.loc 1 1422 0 discriminator 3
 4052 0038 4FF00003 		mov	r3, #0
 4053              	.L340:
 4054              		.loc 1 1422 0 discriminator 4
 4055 003c 1846     		mov	r0, r3
 4056 003e FFF7FEFF 		bl	assert_param
1423:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_IRDA_MODE(USART_IrDAMode));
 4057              		.loc 1 1423 0 is_stmt 1 discriminator 4
 4058 0042 3B68     		ldr	r3, [r7, #0]
 4059 0044 042B     		cmp	r3, #4
 4060 0046 02D0     		beq	.L341
 4061              		.loc 1 1423 0 is_stmt 0 discriminator 2
 4062 0048 3B68     		ldr	r3, [r7, #0]
 4063 004a 002B     		cmp	r3, #0
 4064 004c 02D1     		bne	.L342
 4065              	.L341:
 4066              		.loc 1 1423 0 discriminator 1
 4067 004e 4FF00103 		mov	r3, #1
 4068 0052 01E0     		b	.L343
 4069              	.L342:
 4070              		.loc 1 1423 0 discriminator 3
 4071 0054 4FF00003 		mov	r3, #0
 4072              	.L343:
 4073              		.loc 1 1423 0 discriminator 4
 4074 0058 1846     		mov	r0, r3
 4075 005a FFF7FEFF 		bl	assert_param
1424:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1425:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_IRLP);
 4076              		.loc 1 1425 0 is_stmt 1 discriminator 4
 4077 005e 7B68     		ldr	r3, [r7, #4]
 4078 0060 9B68     		ldr	r3, [r3, #8]
 4079 0062 23F00402 		bic	r2, r3, #4
 4080 0066 7B68     		ldr	r3, [r7, #4]
 4081 0068 9A60     		str	r2, [r3, #8]
1426:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_IrDAMode;
 4082              		.loc 1 1426 0 discriminator 4
 4083 006a 7B68     		ldr	r3, [r7, #4]
 4084 006c 9A68     		ldr	r2, [r3, #8]
 4085 006e 3B68     		ldr	r3, [r7, #0]
 4086 0070 1A43     		orrs	r2, r2, r3
 4087 0072 7B68     		ldr	r3, [r7, #4]
 4088 0074 9A60     		str	r2, [r3, #8]
1427:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4089              		.loc 1 1427 0 discriminator 4
 4090 0076 07F10807 		add	r7, r7, #8
 4091 007a BD46     		mov	sp, r7
 4092 007c 80BD     		pop	{r7, pc}
 4093              	.L345:
 4094 007e 00BF     		.align	2
 4095              	.L344:
 4096 0080 00380140 		.word	1073821696
 4097 0084 00440040 		.word	1073759232
 4098 0088 00480040 		.word	1073760256
 4099 008c 004C0040 		.word	1073761280
 4100 0090 00500040 		.word	1073762304
 4101              		.cfi_endproc
 4102              	.LFE144:
 4104              		.section	.text.USART_IrDACmd,"ax",%progbits
 4105              		.align	2
 4106              		.global	USART_IrDACmd
 4107              		.thumb
 4108              		.thumb_func
 4110              	USART_IrDACmd:
 4111              	.LFB145:
1428:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1429:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1430:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's IrDA interface. 
1431:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1432:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1433:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the IrDA mode.
1434:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1435:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1436:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1437:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_IrDACmd(USART_TypeDef* USARTx, FunctionalState NewState)
1438:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4112              		.loc 1 1438 0
 4113              		.cfi_startproc
 4114              		@ args = 0, pretend = 0, frame = 8
 4115              		@ frame_needed = 1, uses_anonymous_args = 0
 4116 0000 80B5     		push	{r7, lr}
 4117              	.LCFI105:
 4118              		.cfi_def_cfa_offset 8
 4119              		.cfi_offset 7, -8
 4120              		.cfi_offset 14, -4
 4121 0002 82B0     		sub	sp, sp, #8
 4122              	.LCFI106:
 4123              		.cfi_def_cfa_offset 16
 4124 0004 00AF     		add	r7, sp, #0
 4125              	.LCFI107:
 4126              		.cfi_def_cfa_register 7
 4127 0006 7860     		str	r0, [r7, #4]
 4128 0008 0B46     		mov	r3, r1
 4129 000a FB70     		strb	r3, [r7, #3]
1439:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1440:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4130              		.loc 1 1440 0
 4131 000c 7A68     		ldr	r2, [r7, #4]
 4132 000e 1E4B     		ldr	r3, .L355
 4133 0010 9A42     		cmp	r2, r3
 4134 0012 0FD0     		beq	.L347
 4135              		.loc 1 1440 0 is_stmt 0 discriminator 2
 4136 0014 7A68     		ldr	r2, [r7, #4]
 4137 0016 1D4B     		ldr	r3, .L355+4
 4138 0018 9A42     		cmp	r2, r3
 4139 001a 0BD0     		beq	.L347
 4140              		.loc 1 1440 0 discriminator 1
 4141 001c 7A68     		ldr	r2, [r7, #4]
 4142 001e 1C4B     		ldr	r3, .L355+8
 4143 0020 9A42     		cmp	r2, r3
 4144 0022 07D0     		beq	.L347
 4145              		.loc 1 1440 0 discriminator 2
 4146 0024 7A68     		ldr	r2, [r7, #4]
 4147 0026 1B4B     		ldr	r3, .L355+12
 4148 0028 9A42     		cmp	r2, r3
 4149 002a 03D0     		beq	.L347
 4150              		.loc 1 1440 0 discriminator 3
 4151 002c 7A68     		ldr	r2, [r7, #4]
 4152 002e 1A4B     		ldr	r3, .L355+16
 4153 0030 9A42     		cmp	r2, r3
 4154 0032 02D1     		bne	.L348
 4155              	.L347:
 4156              		.loc 1 1440 0 discriminator 1
 4157 0034 4FF00103 		mov	r3, #1
 4158 0038 01E0     		b	.L349
 4159              	.L348:
 4160              		.loc 1 1440 0 discriminator 3
 4161 003a 4FF00003 		mov	r3, #0
 4162              	.L349:
 4163              		.loc 1 1440 0 discriminator 4
 4164 003e 1846     		mov	r0, r3
 4165 0040 FFF7FEFF 		bl	assert_param
1441:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4166              		.loc 1 1441 0 is_stmt 1 discriminator 4
 4167 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4168 0046 002B     		cmp	r3, #0
 4169 0048 02D0     		beq	.L350
 4170              		.loc 1 1441 0 is_stmt 0 discriminator 2
 4171 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4172 004c 012B     		cmp	r3, #1
 4173 004e 02D1     		bne	.L351
 4174              	.L350:
 4175              		.loc 1 1441 0 discriminator 1
 4176 0050 4FF00103 		mov	r3, #1
 4177 0054 01E0     		b	.L352
 4178              	.L351:
 4179              		.loc 1 1441 0 discriminator 3
 4180 0056 4FF00003 		mov	r3, #0
 4181              	.L352:
 4182              		.loc 1 1441 0 discriminator 4
 4183 005a 1846     		mov	r0, r3
 4184 005c FFF7FEFF 		bl	assert_param
1442:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1443:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 4185              		.loc 1 1443 0 is_stmt 1 discriminator 4
 4186 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4187 0062 002B     		cmp	r3, #0
 4188 0064 06D0     		beq	.L353
1444:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1445:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the IrDA mode by setting the IREN bit in the CR3 register */
1446:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_IREN;
 4189              		.loc 1 1446 0
 4190 0066 7B68     		ldr	r3, [r7, #4]
 4191 0068 9B68     		ldr	r3, [r3, #8]
 4192 006a 43F00202 		orr	r2, r3, #2
 4193 006e 7B68     		ldr	r3, [r7, #4]
 4194 0070 9A60     		str	r2, [r3, #8]
 4195 0072 05E0     		b	.L346
 4196              	.L353:
1447:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1448:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1449:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1450:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the IrDA mode by clearing the IREN bit in the CR3 register */
1451:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_IREN);
 4197              		.loc 1 1451 0
 4198 0074 7B68     		ldr	r3, [r7, #4]
 4199 0076 9B68     		ldr	r3, [r3, #8]
 4200 0078 23F00202 		bic	r2, r3, #2
 4201 007c 7B68     		ldr	r3, [r7, #4]
 4202 007e 9A60     		str	r2, [r3, #8]
 4203              	.L346:
1452:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1453:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4204              		.loc 1 1453 0
 4205 0080 07F10807 		add	r7, r7, #8
 4206 0084 BD46     		mov	sp, r7
 4207 0086 80BD     		pop	{r7, pc}
 4208              	.L356:
 4209              		.align	2
 4210              	.L355:
 4211 0088 00380140 		.word	1073821696
 4212 008c 00440040 		.word	1073759232
 4213 0090 00480040 		.word	1073760256
 4214 0094 004C0040 		.word	1073761280
 4215 0098 00500040 		.word	1073762304
 4216              		.cfi_endproc
 4217              	.LFE145:
 4219              		.section	.text.USART_DECmd,"ax",%progbits
 4220              		.align	2
 4221              		.global	USART_DECmd
 4222              		.thumb
 4223              		.thumb_func
 4225              	USART_DECmd:
 4226              	.LFB146:
1454:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1455:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1456:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1457:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1458:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group10 RS485 mode function
1459:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   RS485 mode function 
1460:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1461:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim  
1462:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1463:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                         ##### RS485 mode functions #####
1464:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1465:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to manage the USART
1466:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          RS485 flow control.
1467:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] RS485 flow control (Driver enable feature) handling is possible through
1468:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          the following procedure:
1469:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Program the Baud rate, Word length = 8 bits, Stop bits, Parity, 
1470:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              Transmitter/Receiver modes and hardware flow control values using 
1471:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              the USART_Init() function.
1472:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the Driver Enable using the USART_DECmd() function.
1473:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Driver Enable polarity using the USART_DEPolarityConfig()
1474:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.
1475:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Configures the Driver Enable assertion time using USART_SetDEAssertionTime() 
1476:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function and deassertion time using the USART_SetDEDeassertionTime()
1477:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              function.    
1478:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) Enable the USART using the USART_Cmd() function.
1479:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****       [..]  
1480:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        (@) The assertion and dessertion times are expressed in sample time units (1/8 or 
1481:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             1/16 bit time, depending on the oversampling rate).
1482:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        
1483:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1484:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1485:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1486:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1487:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1488:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's DE functionality.
1489:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1490:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1491:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the driver enable mode.
1492:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.      
1493:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1494:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1495:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DECmd(USART_TypeDef* USARTx, FunctionalState NewState)
1496:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4227              		.loc 1 1496 0
 4228              		.cfi_startproc
 4229              		@ args = 0, pretend = 0, frame = 8
 4230              		@ frame_needed = 1, uses_anonymous_args = 0
 4231 0000 80B5     		push	{r7, lr}
 4232              	.LCFI108:
 4233              		.cfi_def_cfa_offset 8
 4234              		.cfi_offset 7, -8
 4235              		.cfi_offset 14, -4
 4236 0002 82B0     		sub	sp, sp, #8
 4237              	.LCFI109:
 4238              		.cfi_def_cfa_offset 16
 4239 0004 00AF     		add	r7, sp, #0
 4240              	.LCFI110:
 4241              		.cfi_def_cfa_register 7
 4242 0006 7860     		str	r0, [r7, #4]
 4243 0008 0B46     		mov	r3, r1
 4244 000a FB70     		strb	r3, [r7, #3]
1497:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1498:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4245              		.loc 1 1498 0
 4246 000c 7A68     		ldr	r2, [r7, #4]
 4247 000e 1E4B     		ldr	r3, .L366
 4248 0010 9A42     		cmp	r2, r3
 4249 0012 0FD0     		beq	.L358
 4250              		.loc 1 1498 0 is_stmt 0 discriminator 2
 4251 0014 7A68     		ldr	r2, [r7, #4]
 4252 0016 1D4B     		ldr	r3, .L366+4
 4253 0018 9A42     		cmp	r2, r3
 4254 001a 0BD0     		beq	.L358
 4255              		.loc 1 1498 0 discriminator 1
 4256 001c 7A68     		ldr	r2, [r7, #4]
 4257 001e 1C4B     		ldr	r3, .L366+8
 4258 0020 9A42     		cmp	r2, r3
 4259 0022 07D0     		beq	.L358
 4260              		.loc 1 1498 0 discriminator 2
 4261 0024 7A68     		ldr	r2, [r7, #4]
 4262 0026 1B4B     		ldr	r3, .L366+12
 4263 0028 9A42     		cmp	r2, r3
 4264 002a 03D0     		beq	.L358
 4265              		.loc 1 1498 0 discriminator 3
 4266 002c 7A68     		ldr	r2, [r7, #4]
 4267 002e 1A4B     		ldr	r3, .L366+16
 4268 0030 9A42     		cmp	r2, r3
 4269 0032 02D1     		bne	.L359
 4270              	.L358:
 4271              		.loc 1 1498 0 discriminator 1
 4272 0034 4FF00103 		mov	r3, #1
 4273 0038 01E0     		b	.L360
 4274              	.L359:
 4275              		.loc 1 1498 0 discriminator 3
 4276 003a 4FF00003 		mov	r3, #0
 4277              	.L360:
 4278              		.loc 1 1498 0 discriminator 4
 4279 003e 1846     		mov	r0, r3
 4280 0040 FFF7FEFF 		bl	assert_param
1499:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 4281              		.loc 1 1499 0 is_stmt 1 discriminator 4
 4282 0044 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4283 0046 002B     		cmp	r3, #0
 4284 0048 02D0     		beq	.L361
 4285              		.loc 1 1499 0 is_stmt 0 discriminator 2
 4286 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4287 004c 012B     		cmp	r3, #1
 4288 004e 02D1     		bne	.L362
 4289              	.L361:
 4290              		.loc 1 1499 0 discriminator 1
 4291 0050 4FF00103 		mov	r3, #1
 4292 0054 01E0     		b	.L363
 4293              	.L362:
 4294              		.loc 1 1499 0 discriminator 3
 4295 0056 4FF00003 		mov	r3, #0
 4296              	.L363:
 4297              		.loc 1 1499 0 discriminator 4
 4298 005a 1846     		mov	r0, r3
 4299 005c FFF7FEFF 		bl	assert_param
1500:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 4300              		.loc 1 1500 0 is_stmt 1 discriminator 4
 4301 0060 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4302 0062 002B     		cmp	r3, #0
 4303 0064 06D0     		beq	.L364
1501:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1502:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the DE functionality by setting the DEM bit in the CR3 register */
1503:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_CR3_DEM;
 4304              		.loc 1 1503 0
 4305 0066 7B68     		ldr	r3, [r7, #4]
 4306 0068 9B68     		ldr	r3, [r3, #8]
 4307 006a 43F48042 		orr	r2, r3, #16384
 4308 006e 7B68     		ldr	r3, [r7, #4]
 4309 0070 9A60     		str	r2, [r3, #8]
 4310 0072 05E0     		b	.L357
 4311              	.L364:
1504:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1505:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1506:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1507:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the DE functionality by clearing the DEM bit in the CR3 register */
1508:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DEM);
 4312              		.loc 1 1508 0
 4313 0074 7B68     		ldr	r3, [r7, #4]
 4314 0076 9B68     		ldr	r3, [r3, #8]
 4315 0078 23F48042 		bic	r2, r3, #16384
 4316 007c 7B68     		ldr	r3, [r7, #4]
 4317 007e 9A60     		str	r2, [r3, #8]
 4318              	.L357:
1509:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1510:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4319              		.loc 1 1510 0
 4320 0080 07F10807 		add	r7, r7, #8
 4321 0084 BD46     		mov	sp, r7
 4322 0086 80BD     		pop	{r7, pc}
 4323              	.L367:
 4324              		.align	2
 4325              	.L366:
 4326 0088 00380140 		.word	1073821696
 4327 008c 00440040 		.word	1073759232
 4328 0090 00480040 		.word	1073760256
 4329 0094 004C0040 		.word	1073761280
 4330 0098 00500040 		.word	1073762304
 4331              		.cfi_endproc
 4332              	.LFE146:
 4334              		.section	.text.USART_DEPolarityConfig,"ax",%progbits
 4335              		.align	2
 4336              		.global	USART_DEPolarityConfig
 4337              		.thumb
 4338              		.thumb_func
 4340              	USART_DEPolarityConfig:
 4341              	.LFB147:
1511:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1512:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1513:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Configures the USART's DE polarity
1514:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1515:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1516:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DEPolarity: specifies the DE polarity.
1517:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1518:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DEPolarity_Low
1519:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DEPolarity_High
1520:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1521:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1522:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DEPolarityConfig(USART_TypeDef* USARTx, uint32_t USART_DEPolarity)
1523:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4342              		.loc 1 1523 0
 4343              		.cfi_startproc
 4344              		@ args = 0, pretend = 0, frame = 8
 4345              		@ frame_needed = 1, uses_anonymous_args = 0
 4346 0000 80B5     		push	{r7, lr}
 4347              	.LCFI111:
 4348              		.cfi_def_cfa_offset 8
 4349              		.cfi_offset 7, -8
 4350              		.cfi_offset 14, -4
 4351 0002 82B0     		sub	sp, sp, #8
 4352              	.LCFI112:
 4353              		.cfi_def_cfa_offset 16
 4354 0004 00AF     		add	r7, sp, #0
 4355              	.LCFI113:
 4356              		.cfi_def_cfa_register 7
 4357 0006 7860     		str	r0, [r7, #4]
 4358 0008 3960     		str	r1, [r7, #0]
1524:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1525:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4359              		.loc 1 1525 0
 4360 000a 7A68     		ldr	r2, [r7, #4]
 4361 000c 1C4B     		ldr	r3, .L375
 4362 000e 9A42     		cmp	r2, r3
 4363 0010 0FD0     		beq	.L369
 4364              		.loc 1 1525 0 is_stmt 0 discriminator 2
 4365 0012 7A68     		ldr	r2, [r7, #4]
 4366 0014 1B4B     		ldr	r3, .L375+4
 4367 0016 9A42     		cmp	r2, r3
 4368 0018 0BD0     		beq	.L369
 4369              		.loc 1 1525 0 discriminator 1
 4370 001a 7A68     		ldr	r2, [r7, #4]
 4371 001c 1A4B     		ldr	r3, .L375+8
 4372 001e 9A42     		cmp	r2, r3
 4373 0020 07D0     		beq	.L369
 4374              		.loc 1 1525 0 discriminator 2
 4375 0022 7A68     		ldr	r2, [r7, #4]
 4376 0024 194B     		ldr	r3, .L375+12
 4377 0026 9A42     		cmp	r2, r3
 4378 0028 03D0     		beq	.L369
 4379              		.loc 1 1525 0 discriminator 3
 4380 002a 7A68     		ldr	r2, [r7, #4]
 4381 002c 184B     		ldr	r3, .L375+16
 4382 002e 9A42     		cmp	r2, r3
 4383 0030 02D1     		bne	.L370
 4384              	.L369:
 4385              		.loc 1 1525 0 discriminator 1
 4386 0032 4FF00103 		mov	r3, #1
 4387 0036 01E0     		b	.L371
 4388              	.L370:
 4389              		.loc 1 1525 0 discriminator 3
 4390 0038 4FF00003 		mov	r3, #0
 4391              	.L371:
 4392              		.loc 1 1525 0 discriminator 4
 4393 003c 1846     		mov	r0, r3
 4394 003e FFF7FEFF 		bl	assert_param
1526:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DE_POLARITY(USART_DEPolarity));
 4395              		.loc 1 1526 0 is_stmt 1 discriminator 4
 4396 0042 3B68     		ldr	r3, [r7, #0]
 4397 0044 B3F5004F 		cmp	r3, #32768
 4398 0048 02D0     		beq	.L372
 4399              		.loc 1 1526 0 is_stmt 0 discriminator 2
 4400 004a 3B68     		ldr	r3, [r7, #0]
 4401 004c 002B     		cmp	r3, #0
 4402 004e 02D1     		bne	.L373
 4403              	.L372:
 4404              		.loc 1 1526 0 discriminator 1
 4405 0050 4FF00103 		mov	r3, #1
 4406 0054 01E0     		b	.L374
 4407              	.L373:
 4408              		.loc 1 1526 0 discriminator 3
 4409 0056 4FF00003 		mov	r3, #0
 4410              	.L374:
 4411              		.loc 1 1526 0 discriminator 4
 4412 005a 1846     		mov	r0, r3
 4413 005c FFF7FEFF 		bl	assert_param
1527:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1528:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DEP);
 4414              		.loc 1 1528 0 is_stmt 1 discriminator 4
 4415 0060 7B68     		ldr	r3, [r7, #4]
 4416 0062 9B68     		ldr	r3, [r3, #8]
 4417 0064 23F40042 		bic	r2, r3, #32768
 4418 0068 7B68     		ldr	r3, [r7, #4]
 4419 006a 9A60     		str	r2, [r3, #8]
1529:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_DEPolarity;
 4420              		.loc 1 1529 0 discriminator 4
 4421 006c 7B68     		ldr	r3, [r7, #4]
 4422 006e 9A68     		ldr	r2, [r3, #8]
 4423 0070 3B68     		ldr	r3, [r7, #0]
 4424 0072 1A43     		orrs	r2, r2, r3
 4425 0074 7B68     		ldr	r3, [r7, #4]
 4426 0076 9A60     		str	r2, [r3, #8]
1530:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4427              		.loc 1 1530 0 discriminator 4
 4428 0078 07F10807 		add	r7, r7, #8
 4429 007c BD46     		mov	sp, r7
 4430 007e 80BD     		pop	{r7, pc}
 4431              	.L376:
 4432              		.align	2
 4433              	.L375:
 4434 0080 00380140 		.word	1073821696
 4435 0084 00440040 		.word	1073759232
 4436 0088 00480040 		.word	1073760256
 4437 008c 004C0040 		.word	1073761280
 4438 0090 00500040 		.word	1073762304
 4439              		.cfi_endproc
 4440              	.LFE147:
 4442              		.section	.text.USART_SetDEAssertionTime,"ax",%progbits
 4443              		.align	2
 4444              		.global	USART_SetDEAssertionTime
 4445              		.thumb
 4446              		.thumb_func
 4448              	USART_SetDEAssertionTime:
 4449              	.LFB148:
1531:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1532:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1533:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the specified RS485 DE assertion time
1534:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1535:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1536:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_AssertionTime: specifies the time between the activation of the DE
1537:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          signal and the beginning of the start bit
1538:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1539:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1540:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetDEAssertionTime(USART_TypeDef* USARTx, uint32_t USART_DEAssertionTime)
1541:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4450              		.loc 1 1541 0
 4451              		.cfi_startproc
 4452              		@ args = 0, pretend = 0, frame = 8
 4453              		@ frame_needed = 1, uses_anonymous_args = 0
 4454 0000 80B5     		push	{r7, lr}
 4455              	.LCFI114:
 4456              		.cfi_def_cfa_offset 8
 4457              		.cfi_offset 7, -8
 4458              		.cfi_offset 14, -4
 4459 0002 82B0     		sub	sp, sp, #8
 4460              	.LCFI115:
 4461              		.cfi_def_cfa_offset 16
 4462 0004 00AF     		add	r7, sp, #0
 4463              	.LCFI116:
 4464              		.cfi_def_cfa_register 7
 4465 0006 7860     		str	r0, [r7, #4]
 4466 0008 3960     		str	r1, [r7, #0]
1542:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1543:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4467              		.loc 1 1543 0
 4468 000a 7A68     		ldr	r2, [r7, #4]
 4469 000c 1A4B     		ldr	r3, .L381
 4470 000e 9A42     		cmp	r2, r3
 4471 0010 0FD0     		beq	.L378
 4472              		.loc 1 1543 0 is_stmt 0 discriminator 2
 4473 0012 7A68     		ldr	r2, [r7, #4]
 4474 0014 194B     		ldr	r3, .L381+4
 4475 0016 9A42     		cmp	r2, r3
 4476 0018 0BD0     		beq	.L378
 4477              		.loc 1 1543 0 discriminator 1
 4478 001a 7A68     		ldr	r2, [r7, #4]
 4479 001c 184B     		ldr	r3, .L381+8
 4480 001e 9A42     		cmp	r2, r3
 4481 0020 07D0     		beq	.L378
 4482              		.loc 1 1543 0 discriminator 2
 4483 0022 7A68     		ldr	r2, [r7, #4]
 4484 0024 174B     		ldr	r3, .L381+12
 4485 0026 9A42     		cmp	r2, r3
 4486 0028 03D0     		beq	.L378
 4487              		.loc 1 1543 0 discriminator 3
 4488 002a 7A68     		ldr	r2, [r7, #4]
 4489 002c 164B     		ldr	r3, .L381+16
 4490 002e 9A42     		cmp	r2, r3
 4491 0030 02D1     		bne	.L379
 4492              	.L378:
 4493              		.loc 1 1543 0 discriminator 1
 4494 0032 4FF00103 		mov	r3, #1
 4495 0036 01E0     		b	.L380
 4496              	.L379:
 4497              		.loc 1 1543 0 discriminator 3
 4498 0038 4FF00003 		mov	r3, #0
 4499              	.L380:
 4500              		.loc 1 1543 0 discriminator 4
 4501 003c 1846     		mov	r0, r3
 4502 003e FFF7FEFF 		bl	assert_param
1544:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DE_ASSERTION_DEASSERTION_TIME(USART_DEAssertionTime)); 
 4503              		.loc 1 1544 0 is_stmt 1 discriminator 4
 4504 0042 3B68     		ldr	r3, [r7, #0]
 4505 0044 1F2B     		cmp	r3, #31
 4506 0046 8CBF     		ite	hi
 4507 0048 0023     		movhi	r3, #0
 4508 004a 0123     		movls	r3, #1
 4509 004c DBB2     		uxtb	r3, r3
 4510 004e 1846     		mov	r0, r3
 4511 0050 FFF7FEFF 		bl	assert_param
1545:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1546:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the DE assertion time */
1547:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_DEAT);
 4512              		.loc 1 1547 0 discriminator 4
 4513 0054 7B68     		ldr	r3, [r7, #4]
 4514 0056 1B68     		ldr	r3, [r3, #0]
 4515 0058 23F07872 		bic	r2, r3, #65011712
 4516 005c 7B68     		ldr	r3, [r7, #4]
 4517 005e 1A60     		str	r2, [r3, #0]
1548:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the DE assertion time */
1549:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 |=((uint32_t)USART_DEAssertionTime << (uint32_t)0x15);
 4518              		.loc 1 1549 0 discriminator 4
 4519 0060 7B68     		ldr	r3, [r7, #4]
 4520 0062 1A68     		ldr	r2, [r3, #0]
 4521 0064 3B68     		ldr	r3, [r7, #0]
 4522 0066 4FEA4353 		lsl	r3, r3, #21
 4523 006a 1A43     		orrs	r2, r2, r3
 4524 006c 7B68     		ldr	r3, [r7, #4]
 4525 006e 1A60     		str	r2, [r3, #0]
1550:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4526              		.loc 1 1550 0 discriminator 4
 4527 0070 07F10807 		add	r7, r7, #8
 4528 0074 BD46     		mov	sp, r7
 4529 0076 80BD     		pop	{r7, pc}
 4530              	.L382:
 4531              		.align	2
 4532              	.L381:
 4533 0078 00380140 		.word	1073821696
 4534 007c 00440040 		.word	1073759232
 4535 0080 00480040 		.word	1073760256
 4536 0084 004C0040 		.word	1073761280
 4537 0088 00500040 		.word	1073762304
 4538              		.cfi_endproc
 4539              	.LFE148:
 4541              		.section	.text.USART_SetDEDeassertionTime,"ax",%progbits
 4542              		.align	2
 4543              		.global	USART_SetDEDeassertionTime
 4544              		.thumb
 4545              		.thumb_func
 4547              	USART_SetDEDeassertionTime:
 4548              	.LFB149:
1551:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1552:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1553:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Sets the specified RS485 DE deassertion time
1554:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1555:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1556:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DeassertionTime: specifies the time between the middle of the last 
1557:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         stop bit in a transmitted message and the de-activation of the DE signal
1558:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1559:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1560:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_SetDEDeassertionTime(USART_TypeDef* USARTx, uint32_t USART_DEDeassertionTime)
1561:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4549              		.loc 1 1561 0
 4550              		.cfi_startproc
 4551              		@ args = 0, pretend = 0, frame = 8
 4552              		@ frame_needed = 1, uses_anonymous_args = 0
 4553 0000 80B5     		push	{r7, lr}
 4554              	.LCFI117:
 4555              		.cfi_def_cfa_offset 8
 4556              		.cfi_offset 7, -8
 4557              		.cfi_offset 14, -4
 4558 0002 82B0     		sub	sp, sp, #8
 4559              	.LCFI118:
 4560              		.cfi_def_cfa_offset 16
 4561 0004 00AF     		add	r7, sp, #0
 4562              	.LCFI119:
 4563              		.cfi_def_cfa_register 7
 4564 0006 7860     		str	r0, [r7, #4]
 4565 0008 3960     		str	r1, [r7, #0]
1562:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1563:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4566              		.loc 1 1563 0
 4567 000a 7A68     		ldr	r2, [r7, #4]
 4568 000c 1A4B     		ldr	r3, .L387
 4569 000e 9A42     		cmp	r2, r3
 4570 0010 0FD0     		beq	.L384
 4571              		.loc 1 1563 0 is_stmt 0 discriminator 2
 4572 0012 7A68     		ldr	r2, [r7, #4]
 4573 0014 194B     		ldr	r3, .L387+4
 4574 0016 9A42     		cmp	r2, r3
 4575 0018 0BD0     		beq	.L384
 4576              		.loc 1 1563 0 discriminator 1
 4577 001a 7A68     		ldr	r2, [r7, #4]
 4578 001c 184B     		ldr	r3, .L387+8
 4579 001e 9A42     		cmp	r2, r3
 4580 0020 07D0     		beq	.L384
 4581              		.loc 1 1563 0 discriminator 2
 4582 0022 7A68     		ldr	r2, [r7, #4]
 4583 0024 174B     		ldr	r3, .L387+12
 4584 0026 9A42     		cmp	r2, r3
 4585 0028 03D0     		beq	.L384
 4586              		.loc 1 1563 0 discriminator 3
 4587 002a 7A68     		ldr	r2, [r7, #4]
 4588 002c 164B     		ldr	r3, .L387+16
 4589 002e 9A42     		cmp	r2, r3
 4590 0030 02D1     		bne	.L385
 4591              	.L384:
 4592              		.loc 1 1563 0 discriminator 1
 4593 0032 4FF00103 		mov	r3, #1
 4594 0036 01E0     		b	.L386
 4595              	.L385:
 4596              		.loc 1 1563 0 discriminator 3
 4597 0038 4FF00003 		mov	r3, #0
 4598              	.L386:
 4599              		.loc 1 1563 0 discriminator 4
 4600 003c 1846     		mov	r0, r3
 4601 003e FFF7FEFF 		bl	assert_param
1564:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DE_ASSERTION_DEASSERTION_TIME(USART_DEDeassertionTime)); 
 4602              		.loc 1 1564 0 is_stmt 1 discriminator 4
 4603 0042 3B68     		ldr	r3, [r7, #0]
 4604 0044 1F2B     		cmp	r3, #31
 4605 0046 8CBF     		ite	hi
 4606 0048 0023     		movhi	r3, #0
 4607 004a 0123     		movls	r3, #1
 4608 004c DBB2     		uxtb	r3, r3
 4609 004e 1846     		mov	r0, r3
 4610 0050 FFF7FEFF 		bl	assert_param
1565:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1566:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the DE deassertion time */
1567:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 &= (uint32_t)~((uint32_t)USART_CR1_DEDT);
 4611              		.loc 1 1567 0 discriminator 4
 4612 0054 7B68     		ldr	r3, [r7, #4]
 4613 0056 1B68     		ldr	r3, [r3, #0]
 4614 0058 23F4F812 		bic	r2, r3, #2031616
 4615 005c 7B68     		ldr	r3, [r7, #4]
 4616 005e 1A60     		str	r2, [r3, #0]
1568:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the DE deassertion time */
1569:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR1 |=((uint32_t)USART_DEDeassertionTime << (uint32_t)0x10);
 4617              		.loc 1 1569 0 discriminator 4
 4618 0060 7B68     		ldr	r3, [r7, #4]
 4619 0062 1A68     		ldr	r2, [r3, #0]
 4620 0064 3B68     		ldr	r3, [r7, #0]
 4621 0066 4FEA0343 		lsl	r3, r3, #16
 4622 006a 1A43     		orrs	r2, r2, r3
 4623 006c 7B68     		ldr	r3, [r7, #4]
 4624 006e 1A60     		str	r2, [r3, #0]
1570:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4625              		.loc 1 1570 0 discriminator 4
 4626 0070 07F10807 		add	r7, r7, #8
 4627 0074 BD46     		mov	sp, r7
 4628 0076 80BD     		pop	{r7, pc}
 4629              	.L388:
 4630              		.align	2
 4631              	.L387:
 4632 0078 00380140 		.word	1073821696
 4633 007c 00440040 		.word	1073759232
 4634 0080 00480040 		.word	1073760256
 4635 0084 004C0040 		.word	1073761280
 4636 0088 00500040 		.word	1073762304
 4637              		.cfi_endproc
 4638              	.LFE149:
 4640              		.section	.text.USART_DMACmd,"ax",%progbits
 4641              		.align	2
 4642              		.global	USART_DMACmd
 4643              		.thumb
 4644              		.thumb_func
 4646              	USART_DMACmd:
 4647              	.LFB150:
1571:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1572:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1573:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1574:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1575:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1576:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group11 DMA transfers management functions
1577:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   DMA transfers management functions
1578:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1579:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1580:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1581:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                ##### DMA transfers management functions #####
1582:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1583:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This section provides two functions that can be used only in DMA mode.
1584:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In DMA Mode, the USART communication can be managed by 2 DMA Channel 
1585:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          requests:
1586:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_DMAReq_Tx: specifies the Tx buffer DMA transfer request.
1587:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_DMAReq_Rx: specifies the Rx buffer DMA transfer request.
1588:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In this Mode it is advised to use the following function:
1589:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_DMACmd(USART_TypeDef* USARTx, uint16_t USART_DMAReq, 
1590:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              FunctionalState NewState).
1591:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1592:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1593:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1594:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1595:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1596:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's DMA interface.
1597:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1598:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4.
1599:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DMAReq: specifies the DMA request.
1600:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1601:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAReq_Tx: USART DMA transmit request
1602:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAReq_Rx: USART DMA receive request
1603:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the DMA Request sources.
1604:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
1605:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1606:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1607:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DMACmd(USART_TypeDef* USARTx, uint32_t USART_DMAReq, FunctionalState NewState)
1608:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4648              		.loc 1 1608 0
 4649              		.cfi_startproc
 4650              		@ args = 0, pretend = 0, frame = 16
 4651              		@ frame_needed = 1, uses_anonymous_args = 0
 4652 0000 80B5     		push	{r7, lr}
 4653              	.LCFI120:
 4654              		.cfi_def_cfa_offset 8
 4655              		.cfi_offset 7, -8
 4656              		.cfi_offset 14, -4
 4657 0002 84B0     		sub	sp, sp, #16
 4658              	.LCFI121:
 4659              		.cfi_def_cfa_offset 24
 4660 0004 00AF     		add	r7, sp, #0
 4661              	.LCFI122:
 4662              		.cfi_def_cfa_register 7
 4663 0006 F860     		str	r0, [r7, #12]
 4664 0008 B960     		str	r1, [r7, #8]
 4665 000a 1346     		mov	r3, r2
 4666 000c FB71     		strb	r3, [r7, #7]
1609:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1610:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_1234_PERIPH(USARTx));
 4667              		.loc 1 1610 0
 4668 000e FA68     		ldr	r2, [r7, #12]
 4669 0010 254B     		ldr	r3, .L400
 4670 0012 9A42     		cmp	r2, r3
 4671 0014 0BD0     		beq	.L390
 4672              		.loc 1 1610 0 is_stmt 0 discriminator 2
 4673 0016 FA68     		ldr	r2, [r7, #12]
 4674 0018 244B     		ldr	r3, .L400+4
 4675 001a 9A42     		cmp	r2, r3
 4676 001c 07D0     		beq	.L390
 4677              		.loc 1 1610 0 discriminator 1
 4678 001e FA68     		ldr	r2, [r7, #12]
 4679 0020 234B     		ldr	r3, .L400+8
 4680 0022 9A42     		cmp	r2, r3
 4681 0024 03D0     		beq	.L390
 4682              		.loc 1 1610 0 discriminator 2
 4683 0026 FA68     		ldr	r2, [r7, #12]
 4684 0028 224B     		ldr	r3, .L400+12
 4685 002a 9A42     		cmp	r2, r3
 4686 002c 02D1     		bne	.L391
 4687              	.L390:
 4688              		.loc 1 1610 0 discriminator 1
 4689 002e 4FF00103 		mov	r3, #1
 4690 0032 01E0     		b	.L392
 4691              	.L391:
 4692              		.loc 1 1610 0 discriminator 3
 4693 0034 4FF00003 		mov	r3, #0
 4694              	.L392:
 4695              		.loc 1 1610 0 discriminator 4
 4696 0038 1846     		mov	r0, r3
 4697 003a FFF7FEFF 		bl	assert_param
1611:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DMAREQ(USART_DMAReq));  
 4698              		.loc 1 1611 0 is_stmt 1 discriminator 4
 4699 003e BB68     		ldr	r3, [r7, #8]
 4700 0040 23F0C003 		bic	r3, r3, #192
 4701 0044 002B     		cmp	r3, #0
 4702 0046 05D1     		bne	.L393
 4703              		.loc 1 1611 0 is_stmt 0 discriminator 1
 4704 0048 BB68     		ldr	r3, [r7, #8]
 4705 004a 002B     		cmp	r3, #0
 4706 004c 02D0     		beq	.L393
 4707              		.loc 1 1611 0 discriminator 3
 4708 004e 4FF00103 		mov	r3, #1
 4709 0052 01E0     		b	.L394
 4710              	.L393:
 4711              		.loc 1 1611 0 discriminator 2
 4712 0054 4FF00003 		mov	r3, #0
 4713              	.L394:
 4714              		.loc 1 1611 0 discriminator 4
 4715 0058 1846     		mov	r0, r3
 4716 005a FFF7FEFF 		bl	assert_param
1612:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 4717              		.loc 1 1612 0 is_stmt 1 discriminator 4
 4718 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4719 0060 002B     		cmp	r3, #0
 4720 0062 02D0     		beq	.L395
 4721              		.loc 1 1612 0 is_stmt 0 discriminator 2
 4722 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4723 0066 012B     		cmp	r3, #1
 4724 0068 02D1     		bne	.L396
 4725              	.L395:
 4726              		.loc 1 1612 0 discriminator 1
 4727 006a 4FF00103 		mov	r3, #1
 4728 006e 01E0     		b	.L397
 4729              	.L396:
 4730              		.loc 1 1612 0 discriminator 3
 4731 0070 4FF00003 		mov	r3, #0
 4732              	.L397:
 4733              		.loc 1 1612 0 discriminator 4
 4734 0074 1846     		mov	r0, r3
 4735 0076 FFF7FEFF 		bl	assert_param
1613:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1614:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 4736              		.loc 1 1614 0 is_stmt 1 discriminator 4
 4737 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4738 007c 002B     		cmp	r3, #0
 4739 007e 06D0     		beq	.L398
1615:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1616:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the DMA transfer for selected requests by setting the DMAT and/or
1617:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        DMAR bits in the USART CR3 register */
1618:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 |= USART_DMAReq;
 4740              		.loc 1 1618 0
 4741 0080 FB68     		ldr	r3, [r7, #12]
 4742 0082 9A68     		ldr	r2, [r3, #8]
 4743 0084 BB68     		ldr	r3, [r7, #8]
 4744 0086 1A43     		orrs	r2, r2, r3
 4745 0088 FB68     		ldr	r3, [r7, #12]
 4746 008a 9A60     		str	r2, [r3, #8]
 4747 008c 07E0     		b	.L389
 4748              	.L398:
1619:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1620:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1621:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1622:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the DMA transfer for selected requests by clearing the DMAT and/or
1623:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        DMAR bits in the USART CR3 register */
1624:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->CR3 &= (uint32_t)~USART_DMAReq;
 4749              		.loc 1 1624 0
 4750 008e FB68     		ldr	r3, [r7, #12]
 4751 0090 9A68     		ldr	r2, [r3, #8]
 4752 0092 BB68     		ldr	r3, [r7, #8]
 4753 0094 6FEA0303 		mvn	r3, r3
 4754 0098 1A40     		ands	r2, r2, r3
 4755 009a FB68     		ldr	r3, [r7, #12]
 4756 009c 9A60     		str	r2, [r3, #8]
 4757              	.L389:
1625:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1626:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4758              		.loc 1 1626 0
 4759 009e 07F11007 		add	r7, r7, #16
 4760 00a2 BD46     		mov	sp, r7
 4761 00a4 80BD     		pop	{r7, pc}
 4762              	.L401:
 4763 00a6 00BF     		.align	2
 4764              	.L400:
 4765 00a8 00380140 		.word	1073821696
 4766 00ac 00440040 		.word	1073759232
 4767 00b0 00480040 		.word	1073760256
 4768 00b4 004C0040 		.word	1073761280
 4769              		.cfi_endproc
 4770              	.LFE150:
 4772              		.section	.text.USART_DMAReceptionErrorConfig,"ax",%progbits
 4773              		.align	2
 4774              		.global	USART_DMAReceptionErrorConfig
 4775              		.thumb
 4776              		.thumb_func
 4778              	USART_DMAReceptionErrorConfig:
 4779              	.LFB151:
1627:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1628:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1629:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's DMA interface when reception error occurs.
1630:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1631:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4.
1632:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_DMAOnError: specifies the DMA status in case of reception error.
1633:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1634:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAOnError_Enable: DMA receive request enabled when the USART DMA  
1635:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          reception error is asserted.
1636:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_DMAOnError_Disable: DMA receive request disabled when the USART DMA 
1637:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          reception error is asserted.
1638:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1639:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1640:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_DMAReceptionErrorConfig(USART_TypeDef* USARTx, uint32_t USART_DMAOnError)
1641:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4780              		.loc 1 1641 0
 4781              		.cfi_startproc
 4782              		@ args = 0, pretend = 0, frame = 8
 4783              		@ frame_needed = 1, uses_anonymous_args = 0
 4784 0000 80B5     		push	{r7, lr}
 4785              	.LCFI123:
 4786              		.cfi_def_cfa_offset 8
 4787              		.cfi_offset 7, -8
 4788              		.cfi_offset 14, -4
 4789 0002 82B0     		sub	sp, sp, #8
 4790              	.LCFI124:
 4791              		.cfi_def_cfa_offset 16
 4792 0004 00AF     		add	r7, sp, #0
 4793              	.LCFI125:
 4794              		.cfi_def_cfa_register 7
 4795 0006 7860     		str	r0, [r7, #4]
 4796 0008 3960     		str	r1, [r7, #0]
1642:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1643:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_1234_PERIPH(USARTx));
 4797              		.loc 1 1643 0
 4798 000a 7A68     		ldr	r2, [r7, #4]
 4799 000c 1A4B     		ldr	r3, .L409
 4800 000e 9A42     		cmp	r2, r3
 4801 0010 0BD0     		beq	.L403
 4802              		.loc 1 1643 0 is_stmt 0 discriminator 2
 4803 0012 7A68     		ldr	r2, [r7, #4]
 4804 0014 194B     		ldr	r3, .L409+4
 4805 0016 9A42     		cmp	r2, r3
 4806 0018 07D0     		beq	.L403
 4807              		.loc 1 1643 0 discriminator 1
 4808 001a 7A68     		ldr	r2, [r7, #4]
 4809 001c 184B     		ldr	r3, .L409+8
 4810 001e 9A42     		cmp	r2, r3
 4811 0020 03D0     		beq	.L403
 4812              		.loc 1 1643 0 discriminator 2
 4813 0022 7A68     		ldr	r2, [r7, #4]
 4814 0024 174B     		ldr	r3, .L409+12
 4815 0026 9A42     		cmp	r2, r3
 4816 0028 02D1     		bne	.L404
 4817              	.L403:
 4818              		.loc 1 1643 0 discriminator 1
 4819 002a 4FF00103 		mov	r3, #1
 4820 002e 01E0     		b	.L405
 4821              	.L404:
 4822              		.loc 1 1643 0 discriminator 3
 4823 0030 4FF00003 		mov	r3, #0
 4824              	.L405:
 4825              		.loc 1 1643 0 discriminator 4
 4826 0034 1846     		mov	r0, r3
 4827 0036 FFF7FEFF 		bl	assert_param
1644:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_DMAONERROR(USART_DMAOnError)); 
 4828              		.loc 1 1644 0 is_stmt 1 discriminator 4
 4829 003a 3B68     		ldr	r3, [r7, #0]
 4830 003c B3F5005F 		cmp	r3, #8192
 4831 0040 02D0     		beq	.L406
 4832              		.loc 1 1644 0 is_stmt 0 discriminator 2
 4833 0042 3B68     		ldr	r3, [r7, #0]
 4834 0044 002B     		cmp	r3, #0
 4835 0046 02D1     		bne	.L407
 4836              	.L406:
 4837              		.loc 1 1644 0 discriminator 1
 4838 0048 4FF00103 		mov	r3, #1
 4839 004c 01E0     		b	.L408
 4840              	.L407:
 4841              		.loc 1 1644 0 discriminator 3
 4842 004e 4FF00003 		mov	r3, #0
 4843              	.L408:
 4844              		.loc 1 1644 0 discriminator 4
 4845 0052 1846     		mov	r0, r3
 4846 0054 FFF7FEFF 		bl	assert_param
1645:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1646:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the DMA Reception error detection bit */
1647:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_DDRE);
 4847              		.loc 1 1647 0 is_stmt 1 discriminator 4
 4848 0058 7B68     		ldr	r3, [r7, #4]
 4849 005a 9B68     		ldr	r3, [r3, #8]
 4850 005c 23F40052 		bic	r2, r3, #8192
 4851 0060 7B68     		ldr	r3, [r7, #4]
 4852 0062 9A60     		str	r2, [r3, #8]
1648:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the DMA Reception error detection bit */
1649:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_DMAOnError;
 4853              		.loc 1 1649 0 discriminator 4
 4854 0064 7B68     		ldr	r3, [r7, #4]
 4855 0066 9A68     		ldr	r2, [r3, #8]
 4856 0068 3B68     		ldr	r3, [r7, #0]
 4857 006a 1A43     		orrs	r2, r2, r3
 4858 006c 7B68     		ldr	r3, [r7, #4]
 4859 006e 9A60     		str	r2, [r3, #8]
1650:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 4860              		.loc 1 1650 0 discriminator 4
 4861 0070 07F10807 		add	r7, r7, #8
 4862 0074 BD46     		mov	sp, r7
 4863 0076 80BD     		pop	{r7, pc}
 4864              	.L410:
 4865              		.align	2
 4866              	.L409:
 4867 0078 00380140 		.word	1073821696
 4868 007c 00440040 		.word	1073759232
 4869 0080 00480040 		.word	1073760256
 4870 0084 004C0040 		.word	1073761280
 4871              		.cfi_endproc
 4872              	.LFE151:
 4874              		.section	.text.USART_ITConfig,"ax",%progbits
 4875              		.align	2
 4876              		.global	USART_ITConfig
 4877              		.thumb
 4878              		.thumb_func
 4880              	USART_ITConfig:
 4881              	.LFB152:
1651:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1652:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1653:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @}
1654:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1655:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1656:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /** @defgroup USART_Group12 Interrupts and flags management functions
1657:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *  @brief   Interrupts and flags management functions 
1658:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *
1659:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @verbatim   
1660:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1661:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****             ##### Interrupts and flags management functions #####
1662:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ===============================================================================
1663:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] This subsection provides a set of functions allowing to configure the 
1664:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          USART Interrupts sources, Requests and check or clear the flags or pending bits status. 
1665:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          The user should identify which mode will be used in his application to 
1666:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          manage the communication: Polling mode, Interrupt mode.
1667:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          
1668:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *** Polling Mode ***
1669:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ====================
1670:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In Polling Mode, the SPI communication can be managed by these flags:
1671:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_REACK: to indicate the status of the Receive Enable 
1672:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              acknowledge flag
1673:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_TEACK: to indicate the status of the Transmit Enable 
1674:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              acknowledge flag.
1675:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_WUF: to indicate the status of the Wake up flag.
1676:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_RWU: to indicate the status of the Receive Wake up flag.
1677:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_SBK: to indicate the status of the Send Break flag.
1678:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_CMF: to indicate the status of the Character match flag.
1679:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_BUSY: to indicate the status of the Busy flag.
1680:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_ABRF: to indicate the status of the Auto baud rate flag.
1681:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_ABRE: to indicate the status of the Auto baud rate error flag.
1682:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_EOBF: to indicate the status of the End of block flag.
1683:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_RTOF: to indicate the status of the Receive time out flag.
1684:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_nCTSS: to indicate the status of the Inverted nCTS input 
1685:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              bit status.
1686:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_TXE: to indicate the status of the transmit buffer register.
1687:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_RXNE: to indicate the status of the receive buffer register.
1688:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_TC: to indicate the status of the transmit operation.
1689:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_IDLE: to indicate the status of the Idle Line.
1690:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_CTS: to indicate the status of the nCTS input.
1691:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_LBD: to indicate the status of the LIN break detection.
1692:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_NE: to indicate if a noise error occur.
1693:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_FE: to indicate if a frame error occur.
1694:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_PE: to indicate if a parity error occur.
1695:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (#) USART_FLAG_ORE: to indicate if an Overrun error occur.
1696:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In this Mode it is advised to use the following functions:
1697:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG).
1698:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_ClearFlag(USART_TypeDef* USARTx, uint16_t USART_FLAG).
1699:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                
1700:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  *** Interrupt Mode ***
1701:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****  ======================
1702:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In Interrupt Mode, the USART communication can be managed by 8 interrupt 
1703:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          sources and 10 pending bits:
1704:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) Pending Bits:
1705:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_WU: to indicate the status of the Wake up interrupt.
1706:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CM: to indicate the status of Character match interrupt.
1707:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_EOB: to indicate the status of End of block interrupt.
1708:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_RTO: to indicate the status of Receive time out interrupt.
1709:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CTS: to indicate the status of CTS change interrupt.
1710:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_LBD: to indicate the status of LIN Break detection interrupt.
1711:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_TC: to indicate the status of Transmission complete interrupt.
1712:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_IDLE: to indicate the status of IDLE line detected interrupt.
1713:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_ORE: to indicate the status of OverRun Error interrupt.
1714:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_NE: to indicate the status of Noise Error interrupt.
1715:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_FE: to indicate the status of Framing Error interrupt.
1716:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_PE: to indicate the status of Parity Error interrupt.  
1717:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****               
1718:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) Interrupt Source:
1719:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_WU: specifies the interrupt source for Wake up interrupt.
1720:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CM: specifies the interrupt source for Character match 
1721:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   interrupt.
1722:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_EOB: specifies the interrupt source for End of block
1723:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   interrupt.
1724:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_RTO: specifies the interrupt source for Receive time-out
1725:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   interrupt.
1726:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_CTS: specifies the interrupt source for CTS change interrupt.
1727:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_LBD: specifies the interrupt source for LIN Break 
1728:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   detection interrupt.
1729:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_TXE: specifies the interrupt source for Tansmit Data 
1730:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   Register empty interrupt.
1731:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_TC: specifies the interrupt source for Transmission 
1732:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   complete interrupt.
1733:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_RXNE: specifies the interrupt source for Receive Data 
1734:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   register not empty interrupt.
1735:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_IDLE: specifies the interrupt source for Idle line 
1736:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   detection interrupt.
1737:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_PE: specifies the interrupt source for Parity Error interrupt.
1738:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              (##) USART_IT_ERR: specifies the interrupt source for Error interrupt
1739:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                   (Frame error, noise error, overrun error)
1740:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****              -@@- Some parameters are coded in order to use them as interrupt 
1741:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****                  source or as pending bits.
1742:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     [..] In this Mode it is advised to use the following functions:
1743:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState
1744:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT).
1745:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****          (+) void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT).
1746:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1747:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** @endverbatim
1748:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @{
1749:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1750:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1751:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1752:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the specified USART interrupts.
1753:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1754:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1755:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IT: specifies the USART interrupt sources to be enabled or disabled.
1756:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1757:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_WU:  Wake up interrupt.
1758:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CM:  Character match interrupt.
1759:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_EOB:  End of block interrupt.
1760:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RTO:  Receive time out interrupt.
1761:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CTS:  CTS change interrupt.
1762:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_LBD:  LIN Break detection interrupt.
1763:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TXE:  Tansmit Data Register empty interrupt.
1764:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TC:  Transmission complete interrupt.
1765:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RXNE:  Receive Data register not empty interrupt.
1766:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_IDLE:  Idle line detection interrupt.
1767:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_PE:  Parity Error interrupt.
1768:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_ERR:  Error interrupt(Frame error, noise error, overrun error)
1769:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the specified USARTx interrupts.
1770:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.
1771:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1772:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1773:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ITConfig(USART_TypeDef* USARTx, uint32_t USART_IT, FunctionalState NewState)
1774:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 4882              		.loc 1 1774 0
 4883              		.cfi_startproc
 4884              		@ args = 0, pretend = 0, frame = 32
 4885              		@ frame_needed = 1, uses_anonymous_args = 0
 4886 0000 80B5     		push	{r7, lr}
 4887              	.LCFI126:
 4888              		.cfi_def_cfa_offset 8
 4889              		.cfi_offset 7, -8
 4890              		.cfi_offset 14, -4
 4891 0002 88B0     		sub	sp, sp, #32
 4892              	.LCFI127:
 4893              		.cfi_def_cfa_offset 40
 4894 0004 00AF     		add	r7, sp, #0
 4895              	.LCFI128:
 4896              		.cfi_def_cfa_register 7
 4897 0006 F860     		str	r0, [r7, #12]
 4898 0008 B960     		str	r1, [r7, #8]
 4899 000a 1346     		mov	r3, r2
 4900 000c FB71     		strb	r3, [r7, #7]
1775:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t usartreg = 0, itpos = 0, itmask = 0;
 4901              		.loc 1 1775 0
 4902 000e 4FF00003 		mov	r3, #0
 4903 0012 BB61     		str	r3, [r7, #24]
 4904 0014 4FF00003 		mov	r3, #0
 4905 0018 7B61     		str	r3, [r7, #20]
 4906 001a 4FF00003 		mov	r3, #0
 4907 001e 3B61     		str	r3, [r7, #16]
1776:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t usartxbase = 0;
 4908              		.loc 1 1776 0
 4909 0020 4FF00003 		mov	r3, #0
 4910 0024 FB61     		str	r3, [r7, #28]
1777:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1778:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 4911              		.loc 1 1778 0
 4912 0026 FA68     		ldr	r2, [r7, #12]
 4913 0028 4B4B     		ldr	r3, .L425
 4914 002a 9A42     		cmp	r2, r3
 4915 002c 0FD0     		beq	.L412
 4916              		.loc 1 1778 0 is_stmt 0 discriminator 2
 4917 002e FA68     		ldr	r2, [r7, #12]
 4918 0030 4A4B     		ldr	r3, .L425+4
 4919 0032 9A42     		cmp	r2, r3
 4920 0034 0BD0     		beq	.L412
 4921              		.loc 1 1778 0 discriminator 1
 4922 0036 FA68     		ldr	r2, [r7, #12]
 4923 0038 494B     		ldr	r3, .L425+8
 4924 003a 9A42     		cmp	r2, r3
 4925 003c 07D0     		beq	.L412
 4926              		.loc 1 1778 0 discriminator 2
 4927 003e FA68     		ldr	r2, [r7, #12]
 4928 0040 484B     		ldr	r3, .L425+12
 4929 0042 9A42     		cmp	r2, r3
 4930 0044 03D0     		beq	.L412
 4931              		.loc 1 1778 0 discriminator 3
 4932 0046 FA68     		ldr	r2, [r7, #12]
 4933 0048 474B     		ldr	r3, .L425+16
 4934 004a 9A42     		cmp	r2, r3
 4935 004c 02D1     		bne	.L413
 4936              	.L412:
 4937              		.loc 1 1778 0 discriminator 1
 4938 004e 4FF00103 		mov	r3, #1
 4939 0052 01E0     		b	.L414
 4940              	.L413:
 4941              		.loc 1 1778 0 discriminator 3
 4942 0054 4FF00003 		mov	r3, #0
 4943              	.L414:
 4944              		.loc 1 1778 0 discriminator 4
 4945 0058 1846     		mov	r0, r3
 4946 005a FFF7FEFF 		bl	assert_param
1779:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CONFIG_IT(USART_IT));
 4947              		.loc 1 1779 0 is_stmt 1 discriminator 4
 4948 005e BB68     		ldr	r3, [r7, #8]
 4949 0060 B3F5847F 		cmp	r3, #264
 4950 0064 2BD0     		beq	.L415
 4951              		.loc 1 1779 0 is_stmt 0 discriminator 2
 4952 0066 BA68     		ldr	r2, [r7, #8]
 4953 0068 404B     		ldr	r3, .L425+20
 4954 006a 9A42     		cmp	r2, r3
 4955 006c 27D0     		beq	.L415
 4956              		.loc 1 1779 0 discriminator 1
 4957 006e BA68     		ldr	r2, [r7, #8]
 4958 0070 3F4B     		ldr	r3, .L425+24
 4959 0072 9A42     		cmp	r2, r3
 4960 0074 23D0     		beq	.L415
 4961              		.loc 1 1779 0 discriminator 2
 4962 0076 BA68     		ldr	r2, [r7, #8]
 4963 0078 3E4B     		ldr	r3, .L425+28
 4964 007a 9A42     		cmp	r2, r3
 4965 007c 1FD0     		beq	.L415
 4966              		.loc 1 1779 0 discriminator 3
 4967 007e BA68     		ldr	r2, [r7, #8]
 4968 0080 3D4B     		ldr	r3, .L425+32
 4969 0082 9A42     		cmp	r2, r3
 4970 0084 1BD0     		beq	.L415
 4971              		.loc 1 1779 0 discriminator 4
 4972 0086 BA68     		ldr	r2, [r7, #8]
 4973 0088 3C4B     		ldr	r3, .L425+36
 4974 008a 9A42     		cmp	r2, r3
 4975 008c 17D0     		beq	.L415
 4976              		.loc 1 1779 0 discriminator 5
 4977 008e BA68     		ldr	r2, [r7, #8]
 4978 0090 3B4B     		ldr	r3, .L425+40
 4979 0092 9A42     		cmp	r2, r3
 4980 0094 13D0     		beq	.L415
 4981              		.loc 1 1779 0 discriminator 6
 4982 0096 BB68     		ldr	r3, [r7, #8]
 4983 0098 B3F5407F 		cmp	r3, #768
 4984 009c 0FD0     		beq	.L415
 4985              		.loc 1 1779 0 discriminator 7
 4986 009e BA68     		ldr	r2, [r7, #8]
 4987 00a0 384B     		ldr	r3, .L425+44
 4988 00a2 9A42     		cmp	r2, r3
 4989 00a4 0BD0     		beq	.L415
 4990              		.loc 1 1779 0 discriminator 8
 4991 00a6 BA68     		ldr	r2, [r7, #8]
 4992 00a8 374B     		ldr	r3, .L425+48
 4993 00aa 9A42     		cmp	r2, r3
 4994 00ac 07D0     		beq	.L415
 4995              		.loc 1 1779 0 discriminator 9
 4996 00ae BA68     		ldr	r2, [r7, #8]
 4997 00b0 364B     		ldr	r3, .L425+52
 4998 00b2 9A42     		cmp	r2, r3
 4999 00b4 03D0     		beq	.L415
 5000              		.loc 1 1779 0 discriminator 10
 5001 00b6 BA68     		ldr	r2, [r7, #8]
 5002 00b8 354B     		ldr	r3, .L425+56
 5003 00ba 9A42     		cmp	r2, r3
 5004 00bc 02D1     		bne	.L416
 5005              	.L415:
 5006              		.loc 1 1779 0 discriminator 1
 5007 00be 4FF00103 		mov	r3, #1
 5008 00c2 01E0     		b	.L417
 5009              	.L416:
 5010              		.loc 1 1779 0 discriminator 3
 5011 00c4 4FF00003 		mov	r3, #0
 5012              	.L417:
 5013              		.loc 1 1779 0 discriminator 4
 5014 00c8 1846     		mov	r0, r3
 5015 00ca FFF7FEFF 		bl	assert_param
1780:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 5016              		.loc 1 1780 0 is_stmt 1 discriminator 4
 5017 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5018 00d0 002B     		cmp	r3, #0
 5019 00d2 02D0     		beq	.L418
 5020              		.loc 1 1780 0 is_stmt 0 discriminator 2
 5021 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5022 00d6 012B     		cmp	r3, #1
 5023 00d8 02D1     		bne	.L419
 5024              	.L418:
 5025              		.loc 1 1780 0 discriminator 1
 5026 00da 4FF00103 		mov	r3, #1
 5027 00de 01E0     		b	.L420
 5028              	.L419:
 5029              		.loc 1 1780 0 discriminator 3
 5030 00e0 4FF00003 		mov	r3, #0
 5031              	.L420:
 5032              		.loc 1 1780 0 discriminator 4
 5033 00e4 1846     		mov	r0, r3
 5034 00e6 FFF7FEFF 		bl	assert_param
1781:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1782:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   usartxbase = (uint32_t)USARTx;
 5035              		.loc 1 1782 0 is_stmt 1 discriminator 4
 5036 00ea FB68     		ldr	r3, [r7, #12]
 5037 00ec FB61     		str	r3, [r7, #28]
1783:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1784:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the USART register index */
1785:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   usartreg = (((uint16_t)USART_IT) >> 0x08);
 5038              		.loc 1 1785 0 discriminator 4
 5039 00ee BB68     		ldr	r3, [r7, #8]
 5040 00f0 9BB2     		uxth	r3, r3
 5041 00f2 4FEA1323 		lsr	r3, r3, #8
 5042 00f6 9BB2     		uxth	r3, r3
 5043 00f8 BB61     		str	r3, [r7, #24]
1786:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1787:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the interrupt position */
1788:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itpos = USART_IT & IT_MASK;
 5044              		.loc 1 1788 0 discriminator 4
 5045 00fa BB68     		ldr	r3, [r7, #8]
 5046 00fc DBB2     		uxtb	r3, r3
 5047 00fe 7B61     		str	r3, [r7, #20]
1789:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = (((uint32_t)0x01) << itpos);
 5048              		.loc 1 1789 0 discriminator 4
 5049 0100 7B69     		ldr	r3, [r7, #20]
 5050 0102 4FF00102 		mov	r2, #1
 5051 0106 02FA03F3 		lsl	r3, r2, r3
 5052 010a 3B61     		str	r3, [r7, #16]
1790:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1791:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (usartreg == 0x02) /* The IT is in CR2 register */
 5053              		.loc 1 1791 0 discriminator 4
 5054 010c BB69     		ldr	r3, [r7, #24]
 5055 010e 022B     		cmp	r3, #2
 5056 0110 04D1     		bne	.L421
1792:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1793:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     usartxbase += 0x04;
 5057              		.loc 1 1793 0
 5058 0112 FB69     		ldr	r3, [r7, #28]
 5059 0114 03F10403 		add	r3, r3, #4
 5060 0118 FB61     		str	r3, [r7, #28]
 5061 011a 06E0     		b	.L422
 5062              	.L421:
1794:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1795:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (usartreg == 0x03) /* The IT is in CR3 register */
 5063              		.loc 1 1795 0
 5064 011c BB69     		ldr	r3, [r7, #24]
 5065 011e 032B     		cmp	r3, #3
 5066 0120 03D1     		bne	.L422
1796:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1797:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     usartxbase += 0x08;
 5067              		.loc 1 1797 0
 5068 0122 FB69     		ldr	r3, [r7, #28]
 5069 0124 03F10803 		add	r3, r3, #8
 5070 0128 FB61     		str	r3, [r7, #28]
 5071              	.L422:
1798:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1799:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else /* The IT is in CR1 register */
1800:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1801:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1802:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 5072              		.loc 1 1802 0
 5073 012a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5074 012c 002B     		cmp	r3, #0
 5075 012e 06D0     		beq	.L423
1803:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1804:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     *(__IO uint32_t*)usartxbase  |= itmask;
 5076              		.loc 1 1804 0
 5077 0130 FB69     		ldr	r3, [r7, #28]
 5078 0132 FA69     		ldr	r2, [r7, #28]
 5079 0134 1168     		ldr	r1, [r2, #0]
 5080 0136 3A69     		ldr	r2, [r7, #16]
 5081 0138 0A43     		orrs	r2, r2, r1
 5082 013a 1A60     		str	r2, [r3, #0]
 5083 013c 07E0     		b	.L411
 5084              	.L423:
1805:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1806:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1807:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1808:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     *(__IO uint32_t*)usartxbase &= ~itmask;
 5085              		.loc 1 1808 0
 5086 013e FB69     		ldr	r3, [r7, #28]
 5087 0140 FA69     		ldr	r2, [r7, #28]
 5088 0142 1168     		ldr	r1, [r2, #0]
 5089 0144 3A69     		ldr	r2, [r7, #16]
 5090 0146 6FEA0202 		mvn	r2, r2
 5091 014a 0A40     		ands	r2, r2, r1
 5092 014c 1A60     		str	r2, [r3, #0]
 5093              	.L411:
1809:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1810:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 5094              		.loc 1 1810 0
 5095 014e 07F12007 		add	r7, r7, #32
 5096 0152 BD46     		mov	sp, r7
 5097 0154 80BD     		pop	{r7, pc}
 5098              	.L426:
 5099 0156 00BF     		.align	2
 5100              	.L425:
 5101 0158 00380140 		.word	1073821696
 5102 015c 00440040 		.word	1073759232
 5103 0160 00480040 		.word	1073760256
 5104 0164 004C0040 		.word	1073761280
 5105 0168 00500040 		.word	1073762304
 5106 016c 07010700 		.word	459015
 5107 0170 06010600 		.word	393478
 5108 0174 05010500 		.word	327941
 5109 0178 04010400 		.word	262404
 5110 017c 06020800 		.word	524806
 5111 0180 0A030900 		.word	590602
 5112 0184 1A010B00 		.word	721178
 5113 0188 1B010C00 		.word	786715
 5114 018c 0E011100 		.word	1114382
 5115 0190 16031400 		.word	1311510
 5116              		.cfi_endproc
 5117              	.LFE152:
 5119              		.section	.text.USART_RequestCmd,"ax",%progbits
 5120              		.align	2
 5121              		.global	USART_RequestCmd
 5122              		.thumb
 5123              		.thumb_func
 5125              	USART_RequestCmd:
 5126              	.LFB153:
1811:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1812:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1813:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables the specified USART's Request.
1814:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1815:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1816:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_Request: specifies the USART request.
1817:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1818:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_TXFRQ: Transmit data flush ReQuest
1819:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_RXFRQ: Receive data flush ReQuest
1820:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_MMRQ: Mute Mode ReQuest
1821:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_SBKRQ: Send Break ReQuest
1822:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_Request_ABRRQ: Auto Baud Rate ReQuest
1823:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  NewState: new state of the DMA interface when reception error occurs.
1824:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be: ENABLE or DISABLE.  
1825:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1826:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1827:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_RequestCmd(USART_TypeDef* USARTx, uint32_t USART_Request, FunctionalState NewState)
1828:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 5127              		.loc 1 1828 0
 5128              		.cfi_startproc
 5129              		@ args = 0, pretend = 0, frame = 16
 5130              		@ frame_needed = 1, uses_anonymous_args = 0
 5131 0000 80B5     		push	{r7, lr}
 5132              	.LCFI129:
 5133              		.cfi_def_cfa_offset 8
 5134              		.cfi_offset 7, -8
 5135              		.cfi_offset 14, -4
 5136 0002 84B0     		sub	sp, sp, #16
 5137              	.LCFI130:
 5138              		.cfi_def_cfa_offset 24
 5139 0004 00AF     		add	r7, sp, #0
 5140              	.LCFI131:
 5141              		.cfi_def_cfa_register 7
 5142 0006 F860     		str	r0, [r7, #12]
 5143 0008 B960     		str	r1, [r7, #8]
 5144 000a 1346     		mov	r3, r2
 5145 000c FB71     		strb	r3, [r7, #7]
1829:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1830:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 5146              		.loc 1 1830 0
 5147 000e FA68     		ldr	r2, [r7, #12]
 5148 0010 2E4B     		ldr	r3, .L439
 5149 0012 9A42     		cmp	r2, r3
 5150 0014 0FD0     		beq	.L428
 5151              		.loc 1 1830 0 is_stmt 0 discriminator 2
 5152 0016 FA68     		ldr	r2, [r7, #12]
 5153 0018 2D4B     		ldr	r3, .L439+4
 5154 001a 9A42     		cmp	r2, r3
 5155 001c 0BD0     		beq	.L428
 5156              		.loc 1 1830 0 discriminator 1
 5157 001e FA68     		ldr	r2, [r7, #12]
 5158 0020 2C4B     		ldr	r3, .L439+8
 5159 0022 9A42     		cmp	r2, r3
 5160 0024 07D0     		beq	.L428
 5161              		.loc 1 1830 0 discriminator 2
 5162 0026 FA68     		ldr	r2, [r7, #12]
 5163 0028 2B4B     		ldr	r3, .L439+12
 5164 002a 9A42     		cmp	r2, r3
 5165 002c 03D0     		beq	.L428
 5166              		.loc 1 1830 0 discriminator 3
 5167 002e FA68     		ldr	r2, [r7, #12]
 5168 0030 2A4B     		ldr	r3, .L439+16
 5169 0032 9A42     		cmp	r2, r3
 5170 0034 02D1     		bne	.L429
 5171              	.L428:
 5172              		.loc 1 1830 0 discriminator 1
 5173 0036 4FF00103 		mov	r3, #1
 5174 003a 01E0     		b	.L430
 5175              	.L429:
 5176              		.loc 1 1830 0 discriminator 3
 5177 003c 4FF00003 		mov	r3, #0
 5178              	.L430:
 5179              		.loc 1 1830 0 discriminator 4
 5180 0040 1846     		mov	r0, r3
 5181 0042 FFF7FEFF 		bl	assert_param
1831:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_REQUEST(USART_Request));
 5182              		.loc 1 1831 0 is_stmt 1 discriminator 4
 5183 0046 BB68     		ldr	r3, [r7, #8]
 5184 0048 102B     		cmp	r3, #16
 5185 004a 0BD0     		beq	.L431
 5186              		.loc 1 1831 0 is_stmt 0 discriminator 2
 5187 004c BB68     		ldr	r3, [r7, #8]
 5188 004e 082B     		cmp	r3, #8
 5189 0050 08D0     		beq	.L431
 5190              		.loc 1 1831 0 discriminator 1
 5191 0052 BB68     		ldr	r3, [r7, #8]
 5192 0054 042B     		cmp	r3, #4
 5193 0056 05D0     		beq	.L431
 5194              		.loc 1 1831 0 discriminator 2
 5195 0058 BB68     		ldr	r3, [r7, #8]
 5196 005a 022B     		cmp	r3, #2
 5197 005c 02D0     		beq	.L431
 5198              		.loc 1 1831 0 discriminator 3
 5199 005e BB68     		ldr	r3, [r7, #8]
 5200 0060 012B     		cmp	r3, #1
 5201 0062 02D1     		bne	.L432
 5202              	.L431:
 5203              		.loc 1 1831 0 discriminator 1
 5204 0064 4FF00103 		mov	r3, #1
 5205 0068 01E0     		b	.L433
 5206              	.L432:
 5207              		.loc 1 1831 0 discriminator 3
 5208 006a 4FF00003 		mov	r3, #0
 5209              	.L433:
 5210              		.loc 1 1831 0 discriminator 4
 5211 006e 1846     		mov	r0, r3
 5212 0070 FFF7FEFF 		bl	assert_param
1832:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState)); 
 5213              		.loc 1 1832 0 is_stmt 1 discriminator 4
 5214 0074 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5215 0076 002B     		cmp	r3, #0
 5216 0078 02D0     		beq	.L434
 5217              		.loc 1 1832 0 is_stmt 0 discriminator 2
 5218 007a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5219 007c 012B     		cmp	r3, #1
 5220 007e 02D1     		bne	.L435
 5221              	.L434:
 5222              		.loc 1 1832 0 discriminator 1
 5223 0080 4FF00103 		mov	r3, #1
 5224 0084 01E0     		b	.L436
 5225              	.L435:
 5226              		.loc 1 1832 0 discriminator 3
 5227 0086 4FF00003 		mov	r3, #0
 5228              	.L436:
 5229              		.loc 1 1832 0 discriminator 4
 5230 008a 1846     		mov	r0, r3
 5231 008c FFF7FEFF 		bl	assert_param
1833:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1834:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (NewState != DISABLE)
 5232              		.loc 1 1834 0 is_stmt 1 discriminator 4
 5233 0090 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5234 0092 002B     		cmp	r3, #0
 5235 0094 09D0     		beq	.L437
1835:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1836:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Enable the USART ReQuest by setting the dedicated request bit in the RQR
1837:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register.*/
1838:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->RQR |= USART_Request;
 5236              		.loc 1 1838 0
 5237 0096 FB68     		ldr	r3, [r7, #12]
 5238 0098 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5239 009a 9AB2     		uxth	r2, r3
 5240 009c BB68     		ldr	r3, [r7, #8]
 5241 009e 9BB2     		uxth	r3, r3
 5242 00a0 1343     		orrs	r3, r3, r2
 5243 00a2 9AB2     		uxth	r2, r3
 5244 00a4 FB68     		ldr	r3, [r7, #12]
 5245 00a6 1A83     		strh	r2, [r3, #24]	@ movhi
 5246 00a8 0BE0     		b	.L427
 5247              	.L437:
1839:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1840:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1841:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1842:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     /* Disable the USART ReQuest by clearing the dedicated request bit in the RQR
1843:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****        register.*/
1844:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     USARTx->RQR &= (uint32_t)~USART_Request;
 5248              		.loc 1 1844 0
 5249 00aa FB68     		ldr	r3, [r7, #12]
 5250 00ac 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5251 00ae 9AB2     		uxth	r2, r3
 5252 00b0 BB68     		ldr	r3, [r7, #8]
 5253 00b2 9BB2     		uxth	r3, r3
 5254 00b4 6FEA0303 		mvn	r3, r3
 5255 00b8 9BB2     		uxth	r3, r3
 5256 00ba 1340     		ands	r3, r3, r2
 5257 00bc 9AB2     		uxth	r2, r3
 5258 00be FB68     		ldr	r3, [r7, #12]
 5259 00c0 1A83     		strh	r2, [r3, #24]	@ movhi
 5260              	.L427:
1845:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1846:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 5261              		.loc 1 1846 0
 5262 00c2 07F11007 		add	r7, r7, #16
 5263 00c6 BD46     		mov	sp, r7
 5264 00c8 80BD     		pop	{r7, pc}
 5265              	.L440:
 5266 00ca 00BF     		.align	2
 5267              	.L439:
 5268 00cc 00380140 		.word	1073821696
 5269 00d0 00440040 		.word	1073759232
 5270 00d4 00480040 		.word	1073760256
 5271 00d8 004C0040 		.word	1073761280
 5272 00dc 00500040 		.word	1073762304
 5273              		.cfi_endproc
 5274              	.LFE153:
 5276              		.section	.text.USART_OverrunDetectionConfig,"ax",%progbits
 5277              		.align	2
 5278              		.global	USART_OverrunDetectionConfig
 5279              		.thumb
 5280              		.thumb_func
 5282              	USART_OverrunDetectionConfig:
 5283              	.LFB154:
1847:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1848:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1849:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Enables or disables the USART's Overrun detection.
1850:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1851:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1852:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_OVRDetection: specifies the OVR detection status in case of OVR error.
1853:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1854:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_OVRDetection_Enable: OVR error detection enabled when the USART OVR error 
1855:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          is asserted.
1856:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_OVRDetection_Disable: OVR error detection disabled when the USART OVR error 
1857:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *          is asserted.
1858:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1859:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1860:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_OverrunDetectionConfig(USART_TypeDef* USARTx, uint32_t USART_OVRDetection)
1861:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 5284              		.loc 1 1861 0
 5285              		.cfi_startproc
 5286              		@ args = 0, pretend = 0, frame = 8
 5287              		@ frame_needed = 1, uses_anonymous_args = 0
 5288 0000 80B5     		push	{r7, lr}
 5289              	.LCFI132:
 5290              		.cfi_def_cfa_offset 8
 5291              		.cfi_offset 7, -8
 5292              		.cfi_offset 14, -4
 5293 0002 82B0     		sub	sp, sp, #8
 5294              	.LCFI133:
 5295              		.cfi_def_cfa_offset 16
 5296 0004 00AF     		add	r7, sp, #0
 5297              	.LCFI134:
 5298              		.cfi_def_cfa_register 7
 5299 0006 7860     		str	r0, [r7, #4]
 5300 0008 3960     		str	r1, [r7, #0]
1862:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1863:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 5301              		.loc 1 1863 0
 5302 000a 7A68     		ldr	r2, [r7, #4]
 5303 000c 1C4B     		ldr	r3, .L448
 5304 000e 9A42     		cmp	r2, r3
 5305 0010 0FD0     		beq	.L442
 5306              		.loc 1 1863 0 is_stmt 0 discriminator 2
 5307 0012 7A68     		ldr	r2, [r7, #4]
 5308 0014 1B4B     		ldr	r3, .L448+4
 5309 0016 9A42     		cmp	r2, r3
 5310 0018 0BD0     		beq	.L442
 5311              		.loc 1 1863 0 discriminator 1
 5312 001a 7A68     		ldr	r2, [r7, #4]
 5313 001c 1A4B     		ldr	r3, .L448+8
 5314 001e 9A42     		cmp	r2, r3
 5315 0020 07D0     		beq	.L442
 5316              		.loc 1 1863 0 discriminator 2
 5317 0022 7A68     		ldr	r2, [r7, #4]
 5318 0024 194B     		ldr	r3, .L448+12
 5319 0026 9A42     		cmp	r2, r3
 5320 0028 03D0     		beq	.L442
 5321              		.loc 1 1863 0 discriminator 3
 5322 002a 7A68     		ldr	r2, [r7, #4]
 5323 002c 184B     		ldr	r3, .L448+16
 5324 002e 9A42     		cmp	r2, r3
 5325 0030 02D1     		bne	.L443
 5326              	.L442:
 5327              		.loc 1 1863 0 discriminator 1
 5328 0032 4FF00103 		mov	r3, #1
 5329 0036 01E0     		b	.L444
 5330              	.L443:
 5331              		.loc 1 1863 0 discriminator 3
 5332 0038 4FF00003 		mov	r3, #0
 5333              	.L444:
 5334              		.loc 1 1863 0 discriminator 4
 5335 003c 1846     		mov	r0, r3
 5336 003e FFF7FEFF 		bl	assert_param
1864:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_OVRDETECTION(USART_OVRDetection));
 5337              		.loc 1 1864 0 is_stmt 1 discriminator 4
 5338 0042 3B68     		ldr	r3, [r7, #0]
 5339 0044 002B     		cmp	r3, #0
 5340 0046 03D0     		beq	.L445
 5341              		.loc 1 1864 0 is_stmt 0 discriminator 2
 5342 0048 3B68     		ldr	r3, [r7, #0]
 5343 004a B3F5805F 		cmp	r3, #4096
 5344 004e 02D1     		bne	.L446
 5345              	.L445:
 5346              		.loc 1 1864 0 discriminator 1
 5347 0050 4FF00103 		mov	r3, #1
 5348 0054 01E0     		b	.L447
 5349              	.L446:
 5350              		.loc 1 1864 0 discriminator 3
 5351 0056 4FF00003 		mov	r3, #0
 5352              	.L447:
 5353              		.loc 1 1864 0 discriminator 4
 5354 005a 1846     		mov	r0, r3
 5355 005c FFF7FEFF 		bl	assert_param
1865:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1866:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Clear the OVR detection bit */
1867:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 &= (uint32_t)~((uint32_t)USART_CR3_OVRDIS);
 5356              		.loc 1 1867 0 is_stmt 1 discriminator 4
 5357 0060 7B68     		ldr	r3, [r7, #4]
 5358 0062 9B68     		ldr	r3, [r3, #8]
 5359 0064 23F48052 		bic	r2, r3, #4096
 5360 0068 7B68     		ldr	r3, [r7, #4]
 5361 006a 9A60     		str	r2, [r3, #8]
1868:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Set the new value for the OVR detection bit */
1869:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->CR3 |= USART_OVRDetection;
 5362              		.loc 1 1869 0 discriminator 4
 5363 006c 7B68     		ldr	r3, [r7, #4]
 5364 006e 9A68     		ldr	r2, [r3, #8]
 5365 0070 3B68     		ldr	r3, [r7, #0]
 5366 0072 1A43     		orrs	r2, r2, r3
 5367 0074 7B68     		ldr	r3, [r7, #4]
 5368 0076 9A60     		str	r2, [r3, #8]
1870:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 5369              		.loc 1 1870 0 discriminator 4
 5370 0078 07F10807 		add	r7, r7, #8
 5371 007c BD46     		mov	sp, r7
 5372 007e 80BD     		pop	{r7, pc}
 5373              	.L449:
 5374              		.align	2
 5375              	.L448:
 5376 0080 00380140 		.word	1073821696
 5377 0084 00440040 		.word	1073759232
 5378 0088 00480040 		.word	1073760256
 5379 008c 004C0040 		.word	1073761280
 5380 0090 00500040 		.word	1073762304
 5381              		.cfi_endproc
 5382              	.LFE154:
 5384              		.section	.text.USART_GetFlagStatus,"ax",%progbits
 5385              		.align	2
 5386              		.global	USART_GetFlagStatus
 5387              		.thumb
 5388              		.thumb_func
 5390              	USART_GetFlagStatus:
 5391              	.LFB155:
1871:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1872:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1873:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Checks whether the specified USART flag is set or not.
1874:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1875:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1876:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_FLAG: specifies the flag to check.
1877:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1878:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_REACK:  Receive Enable acknowledge flag.
1879:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TEACK:  Transmit Enable acknowledge flag.
1880:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_WUF:  Wake up flag.
1881:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RWU:  Receive Wake up flag.
1882:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_SBK:  Send Break flag.
1883:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CMF:  Character match flag.
1884:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_BUSY:  Busy flag.
1885:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ABRF:  Auto baud rate flag.
1886:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ABRE:  Auto baud rate error flag.
1887:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_EOBF:  End of block flag.
1888:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RTOF:  Receive time out flag.
1889:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_nCTSS:  Inverted nCTS input bit status.
1890:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CTS:  CTS Change flag.
1891:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_LBD:  LIN Break detection flag.
1892:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TXE:  Transmit data register empty flag.
1893:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TC:  Transmission Complete flag.
1894:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RXNE:  Receive data register not empty flag.
1895:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_IDLE:  Idle Line detection flag.
1896:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ORE:  OverRun Error flag.
1897:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_NE:  Noise Error flag.
1898:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_FE:  Framing Error flag.
1899:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_PE:  Parity Error flag.
1900:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval The new state of USART_FLAG (SET or RESET).
1901:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1902:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint32_t USART_FLAG)
1903:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 5392              		.loc 1 1903 0
 5393              		.cfi_startproc
 5394              		@ args = 0, pretend = 0, frame = 16
 5395              		@ frame_needed = 1, uses_anonymous_args = 0
 5396 0000 80B5     		push	{r7, lr}
 5397              	.LCFI135:
 5398              		.cfi_def_cfa_offset 8
 5399              		.cfi_offset 7, -8
 5400              		.cfi_offset 14, -4
 5401 0002 84B0     		sub	sp, sp, #16
 5402              	.LCFI136:
 5403              		.cfi_def_cfa_offset 24
 5404 0004 00AF     		add	r7, sp, #0
 5405              	.LCFI137:
 5406              		.cfi_def_cfa_register 7
 5407 0006 7860     		str	r0, [r7, #4]
 5408 0008 3960     		str	r1, [r7, #0]
1904:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   FlagStatus bitstatus = RESET;
 5409              		.loc 1 1904 0
 5410 000a 4FF00003 		mov	r3, #0
 5411 000e FB73     		strb	r3, [r7, #15]
1905:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1906:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 5412              		.loc 1 1906 0
 5413 0010 7A68     		ldr	r2, [r7, #4]
 5414 0012 434B     		ldr	r3, .L460
 5415 0014 9A42     		cmp	r2, r3
 5416 0016 0FD0     		beq	.L451
 5417              		.loc 1 1906 0 is_stmt 0 discriminator 2
 5418 0018 7A68     		ldr	r2, [r7, #4]
 5419 001a 424B     		ldr	r3, .L460+4
 5420 001c 9A42     		cmp	r2, r3
 5421 001e 0BD0     		beq	.L451
 5422              		.loc 1 1906 0 discriminator 1
 5423 0020 7A68     		ldr	r2, [r7, #4]
 5424 0022 414B     		ldr	r3, .L460+8
 5425 0024 9A42     		cmp	r2, r3
 5426 0026 07D0     		beq	.L451
 5427              		.loc 1 1906 0 discriminator 2
 5428 0028 7A68     		ldr	r2, [r7, #4]
 5429 002a 404B     		ldr	r3, .L460+12
 5430 002c 9A42     		cmp	r2, r3
 5431 002e 03D0     		beq	.L451
 5432              		.loc 1 1906 0 discriminator 3
 5433 0030 7A68     		ldr	r2, [r7, #4]
 5434 0032 3F4B     		ldr	r3, .L460+16
 5435 0034 9A42     		cmp	r2, r3
 5436 0036 02D1     		bne	.L452
 5437              	.L451:
 5438              		.loc 1 1906 0 discriminator 1
 5439 0038 4FF00103 		mov	r3, #1
 5440 003c 01E0     		b	.L453
 5441              	.L452:
 5442              		.loc 1 1906 0 discriminator 3
 5443 003e 4FF00003 		mov	r3, #0
 5444              	.L453:
 5445              		.loc 1 1906 0 discriminator 4
 5446 0042 1846     		mov	r0, r3
 5447 0044 FFF7FEFF 		bl	assert_param
1907:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_FLAG(USART_FLAG));
 5448              		.loc 1 1907 0 is_stmt 1 discriminator 4
 5449 0048 3B68     		ldr	r3, [r7, #0]
 5450 004a 012B     		cmp	r3, #1
 5451 004c 4CD0     		beq	.L454
 5452              		.loc 1 1907 0 is_stmt 0 discriminator 2
 5453 004e 3B68     		ldr	r3, [r7, #0]
 5454 0050 802B     		cmp	r3, #128
 5455 0052 49D0     		beq	.L454
 5456              		.loc 1 1907 0 discriminator 1
 5457 0054 3B68     		ldr	r3, [r7, #0]
 5458 0056 402B     		cmp	r3, #64
 5459 0058 46D0     		beq	.L454
 5460              		.loc 1 1907 0 discriminator 2
 5461 005a 3B68     		ldr	r3, [r7, #0]
 5462 005c 202B     		cmp	r3, #32
 5463 005e 43D0     		beq	.L454
 5464              		.loc 1 1907 0 discriminator 3
 5465 0060 3B68     		ldr	r3, [r7, #0]
 5466 0062 102B     		cmp	r3, #16
 5467 0064 40D0     		beq	.L454
 5468              		.loc 1 1907 0 discriminator 4
 5469 0066 3B68     		ldr	r3, [r7, #0]
 5470 0068 B3F5807F 		cmp	r3, #256
 5471 006c 3CD0     		beq	.L454
 5472              		.loc 1 1907 0 discriminator 5
 5473 006e 3B68     		ldr	r3, [r7, #0]
 5474 0070 B3F5007F 		cmp	r3, #512
 5475 0074 38D0     		beq	.L454
 5476              		.loc 1 1907 0 discriminator 6
 5477 0076 3B68     		ldr	r3, [r7, #0]
 5478 0078 082B     		cmp	r3, #8
 5479 007a 35D0     		beq	.L454
 5480              		.loc 1 1907 0 discriminator 7
 5481 007c 3B68     		ldr	r3, [r7, #0]
 5482 007e 042B     		cmp	r3, #4
 5483 0080 32D0     		beq	.L454
 5484              		.loc 1 1907 0 discriminator 8
 5485 0082 3B68     		ldr	r3, [r7, #0]
 5486 0084 022B     		cmp	r3, #2
 5487 0086 2FD0     		beq	.L454
 5488              		.loc 1 1907 0 discriminator 9
 5489 0088 3B68     		ldr	r3, [r7, #0]
 5490 008a B3F5806F 		cmp	r3, #1024
 5491 008e 2BD0     		beq	.L454
 5492              		.loc 1 1907 0 discriminator 10
 5493 0090 3B68     		ldr	r3, [r7, #0]
 5494 0092 B3F5006F 		cmp	r3, #2048
 5495 0096 27D0     		beq	.L454
 5496              		.loc 1 1907 0 discriminator 11
 5497 0098 3B68     		ldr	r3, [r7, #0]
 5498 009a B3F5805F 		cmp	r3, #4096
 5499 009e 23D0     		beq	.L454
 5500              		.loc 1 1907 0 discriminator 12
 5501 00a0 3B68     		ldr	r3, [r7, #0]
 5502 00a2 B3F5804F 		cmp	r3, #16384
 5503 00a6 1FD0     		beq	.L454
 5504              		.loc 1 1907 0 discriminator 13
 5505 00a8 3B68     		ldr	r3, [r7, #0]
 5506 00aa B3F5004F 		cmp	r3, #32768
 5507 00ae 1BD0     		beq	.L454
 5508              		.loc 1 1907 0 discriminator 14
 5509 00b0 3B68     		ldr	r3, [r7, #0]
 5510 00b2 B3F5803F 		cmp	r3, #65536
 5511 00b6 17D0     		beq	.L454
 5512              		.loc 1 1907 0 discriminator 15
 5513 00b8 3B68     		ldr	r3, [r7, #0]
 5514 00ba B3F5003F 		cmp	r3, #131072
 5515 00be 13D0     		beq	.L454
 5516              		.loc 1 1907 0 discriminator 16
 5517 00c0 3B68     		ldr	r3, [r7, #0]
 5518 00c2 B3F5802F 		cmp	r3, #262144
 5519 00c6 0FD0     		beq	.L454
 5520              		.loc 1 1907 0 discriminator 17
 5521 00c8 3B68     		ldr	r3, [r7, #0]
 5522 00ca B3F5002F 		cmp	r3, #524288
 5523 00ce 0BD0     		beq	.L454
 5524              		.loc 1 1907 0 discriminator 18
 5525 00d0 3B68     		ldr	r3, [r7, #0]
 5526 00d2 B3F5801F 		cmp	r3, #1048576
 5527 00d6 07D0     		beq	.L454
 5528              		.loc 1 1907 0 discriminator 19
 5529 00d8 3B68     		ldr	r3, [r7, #0]
 5530 00da B3F5001F 		cmp	r3, #2097152
 5531 00de 03D0     		beq	.L454
 5532              		.loc 1 1907 0 discriminator 20
 5533 00e0 3B68     		ldr	r3, [r7, #0]
 5534 00e2 B3F5800F 		cmp	r3, #4194304
 5535 00e6 02D1     		bne	.L455
 5536              	.L454:
 5537              		.loc 1 1907 0 discriminator 1
 5538 00e8 4FF00103 		mov	r3, #1
 5539 00ec 01E0     		b	.L456
 5540              	.L455:
 5541              		.loc 1 1907 0 discriminator 3
 5542 00ee 4FF00003 		mov	r3, #0
 5543              	.L456:
 5544              		.loc 1 1907 0 discriminator 4
 5545 00f2 1846     		mov	r0, r3
 5546 00f4 FFF7FEFF 		bl	assert_param
1908:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1909:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((USARTx->ISR & USART_FLAG) != (uint16_t)RESET)
 5547              		.loc 1 1909 0 is_stmt 1 discriminator 4
 5548 00f8 7B68     		ldr	r3, [r7, #4]
 5549 00fa DA69     		ldr	r2, [r3, #28]
 5550 00fc 3B68     		ldr	r3, [r7, #0]
 5551 00fe 1340     		ands	r3, r3, r2
 5552 0100 002B     		cmp	r3, #0
 5553 0102 03D0     		beq	.L457
1910:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1911:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = SET;
 5554              		.loc 1 1911 0
 5555 0104 4FF00103 		mov	r3, #1
 5556 0108 FB73     		strb	r3, [r7, #15]
 5557 010a 02E0     		b	.L458
 5558              	.L457:
1912:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1913:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
1914:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
1915:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = RESET;
 5559              		.loc 1 1915 0
 5560 010c 4FF00003 		mov	r3, #0
 5561 0110 FB73     		strb	r3, [r7, #15]
 5562              	.L458:
1916:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
1917:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   return bitstatus;
 5563              		.loc 1 1917 0
 5564 0112 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1918:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 5565              		.loc 1 1918 0
 5566 0114 1846     		mov	r0, r3
 5567 0116 07F11007 		add	r7, r7, #16
 5568 011a BD46     		mov	sp, r7
 5569 011c 80BD     		pop	{r7, pc}
 5570              	.L461:
 5571 011e 00BF     		.align	2
 5572              	.L460:
 5573 0120 00380140 		.word	1073821696
 5574 0124 00440040 		.word	1073759232
 5575 0128 00480040 		.word	1073760256
 5576 012c 004C0040 		.word	1073761280
 5577 0130 00500040 		.word	1073762304
 5578              		.cfi_endproc
 5579              	.LFE155:
 5581              		.section	.text.USART_ClearFlag,"ax",%progbits
 5582              		.align	2
 5583              		.global	USART_ClearFlag
 5584              		.thumb
 5585              		.thumb_func
 5587              	USART_ClearFlag:
 5588              	.LFB156:
1919:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1920:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1921:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Clears the USARTx's pending flags.
1922:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1923:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1924:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_FLAG: specifies the flag to clear.
1925:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be any combination of the following values:
1926:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_WUF:  Wake up flag.
1927:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CMF:  Character match flag.
1928:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_EOBF:  End of block flag.
1929:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_RTOF:  Receive time out flag.
1930:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_CTS:  CTS Change flag.
1931:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_LBD:  LIN Break detection flag.
1932:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_TC:  Transmission Complete flag.
1933:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_IDLE:  IDLE line detected flag.
1934:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_ORE:  OverRun Error flag.
1935:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_NE: Noise Error flag.
1936:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_FE: Framing Error flag.
1937:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_FLAG_PE:   Parity Errorflag.
1938:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *
1939:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
1940:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - RXNE pending bit is cleared by a read to the USART_RDR register 
1941:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_ReceiveData()) or by writing 1 to the RXFRQ in the register USART_RQR
1942:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
1943:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TC flag can be also cleared by software sequence: a read operation to 
1944:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     USART_SR register (USART_GetFlagStatus()) followed by a write operation
1945:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     to USART_TDR register (USART_SendData()).
1946:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TXE flag is cleared by a write to the USART_TDR register 
1947:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_SendData()) or by writing 1 to the TXFRQ in the register USART_RQR
1948:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
1949:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - SBKF flag is cleared by 1 to the SBKRQ in the register USART_RQR
1950:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
1951:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
1952:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1953:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClearFlag(USART_TypeDef* USARTx, uint32_t USART_FLAG)
1954:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 5589              		.loc 1 1954 0
 5590              		.cfi_startproc
 5591              		@ args = 0, pretend = 0, frame = 8
 5592              		@ frame_needed = 1, uses_anonymous_args = 0
 5593 0000 80B5     		push	{r7, lr}
 5594              	.LCFI138:
 5595              		.cfi_def_cfa_offset 8
 5596              		.cfi_offset 7, -8
 5597              		.cfi_offset 14, -4
 5598 0002 82B0     		sub	sp, sp, #8
 5599              	.LCFI139:
 5600              		.cfi_def_cfa_offset 16
 5601 0004 00AF     		add	r7, sp, #0
 5602              	.LCFI140:
 5603              		.cfi_def_cfa_register 7
 5604 0006 7860     		str	r0, [r7, #4]
 5605 0008 3960     		str	r1, [r7, #0]
1955:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1956:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 5606              		.loc 1 1956 0
 5607 000a 7A68     		ldr	r2, [r7, #4]
 5608 000c 294B     		ldr	r3, .L469
 5609 000e 9A42     		cmp	r2, r3
 5610 0010 0FD0     		beq	.L463
 5611              		.loc 1 1956 0 is_stmt 0 discriminator 2
 5612 0012 7A68     		ldr	r2, [r7, #4]
 5613 0014 284B     		ldr	r3, .L469+4
 5614 0016 9A42     		cmp	r2, r3
 5615 0018 0BD0     		beq	.L463
 5616              		.loc 1 1956 0 discriminator 1
 5617 001a 7A68     		ldr	r2, [r7, #4]
 5618 001c 274B     		ldr	r3, .L469+8
 5619 001e 9A42     		cmp	r2, r3
 5620 0020 07D0     		beq	.L463
 5621              		.loc 1 1956 0 discriminator 2
 5622 0022 7A68     		ldr	r2, [r7, #4]
 5623 0024 264B     		ldr	r3, .L469+12
 5624 0026 9A42     		cmp	r2, r3
 5625 0028 03D0     		beq	.L463
 5626              		.loc 1 1956 0 discriminator 3
 5627 002a 7A68     		ldr	r2, [r7, #4]
 5628 002c 254B     		ldr	r3, .L469+16
 5629 002e 9A42     		cmp	r2, r3
 5630 0030 02D1     		bne	.L464
 5631              	.L463:
 5632              		.loc 1 1956 0 discriminator 1
 5633 0032 4FF00103 		mov	r3, #1
 5634 0036 01E0     		b	.L465
 5635              	.L464:
 5636              		.loc 1 1956 0 discriminator 3
 5637 0038 4FF00003 		mov	r3, #0
 5638              	.L465:
 5639              		.loc 1 1956 0 discriminator 4
 5640 003c 1846     		mov	r0, r3
 5641 003e FFF7FEFF 		bl	assert_param
1957:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CLEAR_FLAG(USART_FLAG));
 5642              		.loc 1 1957 0 is_stmt 1 discriminator 4
 5643 0042 3B68     		ldr	r3, [r7, #0]
 5644 0044 B3F5801F 		cmp	r3, #1048576
 5645 0048 25D0     		beq	.L466
 5646              		.loc 1 1957 0 is_stmt 0 discriminator 2
 5647 004a 3B68     		ldr	r3, [r7, #0]
 5648 004c 402B     		cmp	r3, #64
 5649 004e 22D0     		beq	.L466
 5650              		.loc 1 1957 0 discriminator 1
 5651 0050 3B68     		ldr	r3, [r7, #0]
 5652 0052 102B     		cmp	r3, #16
 5653 0054 1FD0     		beq	.L466
 5654              		.loc 1 1957 0 discriminator 2
 5655 0056 3B68     		ldr	r3, [r7, #0]
 5656 0058 082B     		cmp	r3, #8
 5657 005a 1CD0     		beq	.L466
 5658              		.loc 1 1957 0 discriminator 3
 5659 005c 3B68     		ldr	r3, [r7, #0]
 5660 005e 042B     		cmp	r3, #4
 5661 0060 19D0     		beq	.L466
 5662              		.loc 1 1957 0 discriminator 4
 5663 0062 3B68     		ldr	r3, [r7, #0]
 5664 0064 022B     		cmp	r3, #2
 5665 0066 16D0     		beq	.L466
 5666              		.loc 1 1957 0 discriminator 5
 5667 0068 3B68     		ldr	r3, [r7, #0]
 5668 006a B3F5807F 		cmp	r3, #256
 5669 006e 12D0     		beq	.L466
 5670              		.loc 1 1957 0 discriminator 6
 5671 0070 3B68     		ldr	r3, [r7, #0]
 5672 0072 B3F5007F 		cmp	r3, #512
 5673 0076 0ED0     		beq	.L466
 5674              		.loc 1 1957 0 discriminator 7
 5675 0078 3B68     		ldr	r3, [r7, #0]
 5676 007a B3F5006F 		cmp	r3, #2048
 5677 007e 0AD0     		beq	.L466
 5678              		.loc 1 1957 0 discriminator 8
 5679 0080 3B68     		ldr	r3, [r7, #0]
 5680 0082 B3F5805F 		cmp	r3, #4096
 5681 0086 06D0     		beq	.L466
 5682              		.loc 1 1957 0 discriminator 9
 5683 0088 3B68     		ldr	r3, [r7, #0]
 5684 008a B3F5003F 		cmp	r3, #131072
 5685 008e 02D0     		beq	.L466
 5686              		.loc 1 1957 0 discriminator 10
 5687 0090 3B68     		ldr	r3, [r7, #0]
 5688 0092 012B     		cmp	r3, #1
 5689 0094 02D1     		bne	.L467
 5690              	.L466:
 5691              		.loc 1 1957 0 discriminator 1
 5692 0096 4FF00103 		mov	r3, #1
 5693 009a 01E0     		b	.L468
 5694              	.L467:
 5695              		.loc 1 1957 0 discriminator 3
 5696 009c 4FF00003 		mov	r3, #0
 5697              	.L468:
 5698              		.loc 1 1957 0 discriminator 4
 5699 00a0 1846     		mov	r0, r3
 5700 00a2 FFF7FEFF 		bl	assert_param
1958:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****      
1959:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->ICR = USART_FLAG;
 5701              		.loc 1 1959 0 is_stmt 1 discriminator 4
 5702 00a6 7B68     		ldr	r3, [r7, #4]
 5703 00a8 3A68     		ldr	r2, [r7, #0]
 5704 00aa 1A62     		str	r2, [r3, #32]
1960:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 5705              		.loc 1 1960 0 discriminator 4
 5706 00ac 07F10807 		add	r7, r7, #8
 5707 00b0 BD46     		mov	sp, r7
 5708 00b2 80BD     		pop	{r7, pc}
 5709              	.L470:
 5710              		.align	2
 5711              	.L469:
 5712 00b4 00380140 		.word	1073821696
 5713 00b8 00440040 		.word	1073759232
 5714 00bc 00480040 		.word	1073760256
 5715 00c0 004C0040 		.word	1073761280
 5716 00c4 00500040 		.word	1073762304
 5717              		.cfi_endproc
 5718              	.LFE156:
 5720              		.section	.text.USART_GetITStatus,"ax",%progbits
 5721              		.align	2
 5722              		.global	USART_GetITStatus
 5723              		.thumb
 5724              		.thumb_func
 5726              	USART_GetITStatus:
 5727              	.LFB157:
1961:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
1962:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
1963:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Checks whether the specified USART interrupt has occurred or not.
1964:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
1965:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
1966:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IT: specifies the USART interrupt source to check.
1967:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
1968:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_WU:  Wake up interrupt.
1969:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CM:  Character match interrupt.
1970:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_EOB:  End of block interrupt.
1971:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RTO:  Receive time out interrupt.
1972:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CTS:  CTS change interrupt.
1973:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_LBD:  LIN Break detection interrupt.
1974:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TXE:  Tansmit Data Register empty interrupt.
1975:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TC:  Transmission complete interrupt.
1976:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RXNE:  Receive Data register not empty interrupt.
1977:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_IDLE:  Idle line detection interrupt.
1978:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_ORE:  OverRun Error interrupt.
1979:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_NE:  Noise Error interrupt.
1980:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_FE:  Framing Error interrupt.
1981:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_PE:  Parity Error interrupt.
1982:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval The new state of USART_IT (SET or RESET).
1983:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
1984:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint32_t USART_IT)
1985:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 5728              		.loc 1 1985 0
 5729              		.cfi_startproc
 5730              		@ args = 0, pretend = 0, frame = 24
 5731              		@ frame_needed = 1, uses_anonymous_args = 0
 5732 0000 80B5     		push	{r7, lr}
 5733              	.LCFI141:
 5734              		.cfi_def_cfa_offset 8
 5735              		.cfi_offset 7, -8
 5736              		.cfi_offset 14, -4
 5737 0002 86B0     		sub	sp, sp, #24
 5738              	.LCFI142:
 5739              		.cfi_def_cfa_offset 32
 5740 0004 00AF     		add	r7, sp, #0
 5741              	.LCFI143:
 5742              		.cfi_def_cfa_register 7
 5743 0006 7860     		str	r0, [r7, #4]
 5744 0008 3960     		str	r1, [r7, #0]
1986:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t bitpos = 0, itmask = 0, usartreg = 0;
 5745              		.loc 1 1986 0
 5746 000a 4FF00003 		mov	r3, #0
 5747 000e FB60     		str	r3, [r7, #12]
 5748 0010 4FF00003 		mov	r3, #0
 5749 0014 7B61     		str	r3, [r7, #20]
 5750 0016 4FF00003 		mov	r3, #0
 5751 001a BB60     		str	r3, [r7, #8]
1987:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   ITStatus bitstatus = RESET;
 5752              		.loc 1 1987 0
 5753 001c 4FF00003 		mov	r3, #0
 5754 0020 FB74     		strb	r3, [r7, #19]
1988:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
1989:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 5755              		.loc 1 1989 0
 5756 0022 7A68     		ldr	r2, [r7, #4]
 5757 0024 514B     		ldr	r3, .L484
 5758 0026 9A42     		cmp	r2, r3
 5759 0028 0FD0     		beq	.L472
 5760              		.loc 1 1989 0 is_stmt 0 discriminator 2
 5761 002a 7A68     		ldr	r2, [r7, #4]
 5762 002c 504B     		ldr	r3, .L484+4
 5763 002e 9A42     		cmp	r2, r3
 5764 0030 0BD0     		beq	.L472
 5765              		.loc 1 1989 0 discriminator 1
 5766 0032 7A68     		ldr	r2, [r7, #4]
 5767 0034 4F4B     		ldr	r3, .L484+8
 5768 0036 9A42     		cmp	r2, r3
 5769 0038 07D0     		beq	.L472
 5770              		.loc 1 1989 0 discriminator 2
 5771 003a 7A68     		ldr	r2, [r7, #4]
 5772 003c 4E4B     		ldr	r3, .L484+12
 5773 003e 9A42     		cmp	r2, r3
 5774 0040 03D0     		beq	.L472
 5775              		.loc 1 1989 0 discriminator 3
 5776 0042 7A68     		ldr	r2, [r7, #4]
 5777 0044 4D4B     		ldr	r3, .L484+16
 5778 0046 9A42     		cmp	r2, r3
 5779 0048 02D1     		bne	.L473
 5780              	.L472:
 5781              		.loc 1 1989 0 discriminator 1
 5782 004a 4FF00103 		mov	r3, #1
 5783 004e 01E0     		b	.L474
 5784              	.L473:
 5785              		.loc 1 1989 0 discriminator 3
 5786 0050 4FF00003 		mov	r3, #0
 5787              	.L474:
 5788              		.loc 1 1989 0 discriminator 4
 5789 0054 1846     		mov	r0, r3
 5790 0056 FFF7FEFF 		bl	assert_param
1990:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_GET_IT(USART_IT)); 
 5791              		.loc 1 1990 0 is_stmt 1 discriminator 4
 5792 005a 3B68     		ldr	r3, [r7, #0]
 5793 005c B3F5847F 		cmp	r3, #264
 5794 0060 33D0     		beq	.L475
 5795              		.loc 1 1990 0 is_stmt 0 discriminator 2
 5796 0062 3A68     		ldr	r2, [r7, #0]
 5797 0064 464B     		ldr	r3, .L484+20
 5798 0066 9A42     		cmp	r2, r3
 5799 0068 2FD0     		beq	.L475
 5800              		.loc 1 1990 0 discriminator 1
 5801 006a 3A68     		ldr	r2, [r7, #0]
 5802 006c 454B     		ldr	r3, .L484+24
 5803 006e 9A42     		cmp	r2, r3
 5804 0070 2BD0     		beq	.L475
 5805              		.loc 1 1990 0 discriminator 2
 5806 0072 3A68     		ldr	r2, [r7, #0]
 5807 0074 444B     		ldr	r3, .L484+28
 5808 0076 9A42     		cmp	r2, r3
 5809 0078 27D0     		beq	.L475
 5810              		.loc 1 1990 0 discriminator 3
 5811 007a 3A68     		ldr	r2, [r7, #0]
 5812 007c 434B     		ldr	r3, .L484+32
 5813 007e 9A42     		cmp	r2, r3
 5814 0080 23D0     		beq	.L475
 5815              		.loc 1 1990 0 discriminator 4
 5816 0082 3A68     		ldr	r2, [r7, #0]
 5817 0084 424B     		ldr	r3, .L484+36
 5818 0086 9A42     		cmp	r2, r3
 5819 0088 1FD0     		beq	.L475
 5820              		.loc 1 1990 0 discriminator 5
 5821 008a 3A68     		ldr	r2, [r7, #0]
 5822 008c 414B     		ldr	r3, .L484+40
 5823 008e 9A42     		cmp	r2, r3
 5824 0090 1BD0     		beq	.L475
 5825              		.loc 1 1990 0 discriminator 6
 5826 0092 3A68     		ldr	r2, [r7, #0]
 5827 0094 404B     		ldr	r3, .L484+44
 5828 0096 9A42     		cmp	r2, r3
 5829 0098 17D0     		beq	.L475
 5830              		.loc 1 1990 0 discriminator 7
 5831 009a 3A68     		ldr	r2, [r7, #0]
 5832 009c 3F4B     		ldr	r3, .L484+48
 5833 009e 9A42     		cmp	r2, r3
 5834 00a0 13D0     		beq	.L475
 5835              		.loc 1 1990 0 discriminator 8
 5836 00a2 3A68     		ldr	r2, [r7, #0]
 5837 00a4 3E4B     		ldr	r3, .L484+52
 5838 00a6 9A42     		cmp	r2, r3
 5839 00a8 0FD0     		beq	.L475
 5840              		.loc 1 1990 0 discriminator 9
 5841 00aa 3A68     		ldr	r2, [r7, #0]
 5842 00ac 3D4B     		ldr	r3, .L484+56
 5843 00ae 9A42     		cmp	r2, r3
 5844 00b0 0BD0     		beq	.L475
 5845              		.loc 1 1990 0 discriminator 10
 5846 00b2 3A68     		ldr	r2, [r7, #0]
 5847 00b4 3C4B     		ldr	r3, .L484+60
 5848 00b6 9A42     		cmp	r2, r3
 5849 00b8 07D0     		beq	.L475
 5850              		.loc 1 1990 0 discriminator 11
 5851 00ba 3A68     		ldr	r2, [r7, #0]
 5852 00bc 3B4B     		ldr	r3, .L484+64
 5853 00be 9A42     		cmp	r2, r3
 5854 00c0 03D0     		beq	.L475
 5855              		.loc 1 1990 0 discriminator 12
 5856 00c2 3A68     		ldr	r2, [r7, #0]
 5857 00c4 3A4B     		ldr	r3, .L484+68
 5858 00c6 9A42     		cmp	r2, r3
 5859 00c8 02D1     		bne	.L476
 5860              	.L475:
 5861              		.loc 1 1990 0 discriminator 1
 5862 00ca 4FF00103 		mov	r3, #1
 5863 00ce 01E0     		b	.L477
 5864              	.L476:
 5865              		.loc 1 1990 0 discriminator 3
 5866 00d0 4FF00003 		mov	r3, #0
 5867              	.L477:
 5868              		.loc 1 1990 0 discriminator 4
 5869 00d4 1846     		mov	r0, r3
 5870 00d6 FFF7FEFF 		bl	assert_param
1991:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1992:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the USART register index */
1993:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   usartreg = (((uint16_t)USART_IT) >> 0x08);
 5871              		.loc 1 1993 0 is_stmt 1 discriminator 4
 5872 00da 3B68     		ldr	r3, [r7, #0]
 5873 00dc 9BB2     		uxth	r3, r3
 5874 00de 4FEA1323 		lsr	r3, r3, #8
 5875 00e2 9BB2     		uxth	r3, r3
 5876 00e4 BB60     		str	r3, [r7, #8]
1994:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Get the interrupt position */
1995:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = USART_IT & IT_MASK;
 5877              		.loc 1 1995 0 discriminator 4
 5878 00e6 3B68     		ldr	r3, [r7, #0]
 5879 00e8 DBB2     		uxtb	r3, r3
 5880 00ea 7B61     		str	r3, [r7, #20]
1996:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = (uint32_t)0x01 << itmask;
 5881              		.loc 1 1996 0 discriminator 4
 5882 00ec 7B69     		ldr	r3, [r7, #20]
 5883 00ee 4FF00102 		mov	r2, #1
 5884 00f2 02FA03F3 		lsl	r3, r2, r3
 5885 00f6 7B61     		str	r3, [r7, #20]
1997:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
1998:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if (usartreg == 0x01) /* The IT  is in CR1 register */
 5886              		.loc 1 1998 0 discriminator 4
 5887 00f8 BB68     		ldr	r3, [r7, #8]
 5888 00fa 012B     		cmp	r3, #1
 5889 00fc 05D1     		bne	.L478
1999:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2000:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     itmask &= USARTx->CR1;
 5890              		.loc 1 2000 0
 5891 00fe 7B68     		ldr	r3, [r7, #4]
 5892 0100 1B68     		ldr	r3, [r3, #0]
 5893 0102 7A69     		ldr	r2, [r7, #20]
 5894 0104 1340     		ands	r3, r3, r2
 5895 0106 7B61     		str	r3, [r7, #20]
 5896 0108 0DE0     		b	.L479
 5897              	.L478:
2001:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2002:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else if (usartreg == 0x02) /* The IT  is in CR2 register */
 5898              		.loc 1 2002 0
 5899 010a BB68     		ldr	r3, [r7, #8]
 5900 010c 022B     		cmp	r3, #2
 5901 010e 05D1     		bne	.L480
2003:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2004:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     itmask &= USARTx->CR2;
 5902              		.loc 1 2004 0
 5903 0110 7B68     		ldr	r3, [r7, #4]
 5904 0112 5B68     		ldr	r3, [r3, #4]
 5905 0114 7A69     		ldr	r2, [r7, #20]
 5906 0116 1340     		ands	r3, r3, r2
 5907 0118 7B61     		str	r3, [r7, #20]
 5908 011a 04E0     		b	.L479
 5909              	.L480:
2005:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2006:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else /* The IT  is in CR3 register */
2007:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2008:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     itmask &= USARTx->CR3;
 5910              		.loc 1 2008 0
 5911 011c 7B68     		ldr	r3, [r7, #4]
 5912 011e 9B68     		ldr	r3, [r3, #8]
 5913 0120 7A69     		ldr	r2, [r7, #20]
 5914 0122 1340     		ands	r3, r3, r2
 5915 0124 7B61     		str	r3, [r7, #20]
 5916              	.L479:
2009:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2010:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
2011:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos = USART_IT >> 0x10;
 5917              		.loc 1 2011 0
 5918 0126 3B68     		ldr	r3, [r7, #0]
 5919 0128 4FEA1343 		lsr	r3, r3, #16
 5920 012c FB60     		str	r3, [r7, #12]
2012:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos = (uint32_t)0x01 << bitpos;
 5921              		.loc 1 2012 0
 5922 012e FB68     		ldr	r3, [r7, #12]
 5923 0130 4FF00102 		mov	r2, #1
 5924 0134 02FA03F3 		lsl	r3, r2, r3
 5925 0138 FB60     		str	r3, [r7, #12]
2013:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos &= USARTx->ISR;
 5926              		.loc 1 2013 0
 5927 013a 7B68     		ldr	r3, [r7, #4]
 5928 013c DB69     		ldr	r3, [r3, #28]
 5929 013e FA68     		ldr	r2, [r7, #12]
 5930 0140 1340     		ands	r3, r3, r2
 5931 0142 FB60     		str	r3, [r7, #12]
2014:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 5932              		.loc 1 2014 0
 5933 0144 7B69     		ldr	r3, [r7, #20]
 5934 0146 002B     		cmp	r3, #0
 5935 0148 06D0     		beq	.L481
 5936              		.loc 1 2014 0 is_stmt 0 discriminator 1
 5937 014a FB68     		ldr	r3, [r7, #12]
 5938 014c 002B     		cmp	r3, #0
 5939 014e 03D0     		beq	.L481
2015:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2016:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = SET;
 5940              		.loc 1 2016 0 is_stmt 1
 5941 0150 4FF00103 		mov	r3, #1
 5942 0154 FB74     		strb	r3, [r7, #19]
 5943 0156 02E0     		b	.L482
 5944              	.L481:
2017:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2018:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   else
2019:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   {
2020:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****     bitstatus = RESET;
 5945              		.loc 1 2020 0
 5946 0158 4FF00003 		mov	r3, #0
 5947 015c FB74     		strb	r3, [r7, #19]
 5948              	.L482:
2021:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   }
2022:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
2023:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   return bitstatus;  
 5949              		.loc 1 2023 0
 5950 015e FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2024:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 5951              		.loc 1 2024 0
 5952 0160 1846     		mov	r0, r3
 5953 0162 07F11807 		add	r7, r7, #24
 5954 0166 BD46     		mov	sp, r7
 5955 0168 80BD     		pop	{r7, pc}
 5956              	.L485:
 5957 016a 00BF     		.align	2
 5958              	.L484:
 5959 016c 00380140 		.word	1073821696
 5960 0170 00440040 		.word	1073759232
 5961 0174 00480040 		.word	1073760256
 5962 0178 004C0040 		.word	1073761280
 5963 017c 00500040 		.word	1073762304
 5964 0180 07010700 		.word	459015
 5965 0184 06010600 		.word	393478
 5966 0188 05010500 		.word	327941
 5967 018c 04010400 		.word	262404
 5968 0190 06020800 		.word	524806
 5969 0194 0A030900 		.word	590602
 5970 0198 00030300 		.word	197376
 5971 019c 00030200 		.word	131840
 5972 01a0 00030100 		.word	66304
 5973 01a4 1A010B00 		.word	721178
 5974 01a8 1B010C00 		.word	786715
 5975 01ac 0E011100 		.word	1114382
 5976 01b0 16031400 		.word	1311510
 5977              		.cfi_endproc
 5978              	.LFE157:
 5980              		.section	.text.USART_ClearITPendingBit,"ax",%progbits
 5981              		.align	2
 5982              		.global	USART_ClearITPendingBit
 5983              		.thumb
 5984              		.thumb_func
 5986              	USART_ClearITPendingBit:
 5987              	.LFB158:
2025:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** 
2026:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** /**
2027:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @brief  Clears the USARTx's interrupt pending bits.
2028:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USARTx: Select the USART peripheral. This parameter can be one of the 
2029:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         following values: USART1 or USART2 or USART3 or UART4 or UART5.
2030:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @param  USART_IT: specifies the interrupt pending bit to clear.
2031:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         This parameter can be one of the following values:
2032:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_WU:  Wake up interrupt.
2033:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CM:  Character match interrupt.
2034:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_EOB:  End of block interrupt.
2035:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_RTO:  Receive time out interrupt.
2036:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_CTS:  CTS change interrupt.
2037:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_LBD:  LIN Break detection interrupt.
2038:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_TC:  Transmission complete interrupt.
2039:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_IDLE:  IDLE line detected interrupt.
2040:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_ORE:  OverRun Error interrupt.
2041:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_NE:  Noise Error interrupt.
2042:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_FE:  Framing Error interrupt.
2043:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *         @arg USART_IT_PE:  Parity Error interrupt.
2044:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @note
2045:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - RXNE pending bit is cleared by a read to the USART_RDR register 
2046:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_ReceiveData()) or by writing 1 to the RXFRQ in the register USART_RQR
2047:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
2048:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TC pending bit can be also cleared by software sequence: a read 
2049:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     operation to USART_SR register (USART_GetITStatus()) followed by a write 
2050:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     operation to USART_TDR register (USART_SendData()).
2051:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *   - TXE pending bit is cleared by a write to the USART_TDR register 
2052:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_SendData()) or by writing 1 to the TXFRQ in the register USART_RQR
2053:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   *     (USART_RequestCmd()).
2054:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   * @retval None
2055:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   */
2056:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint32_t USART_IT)
2057:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** {
 5988              		.loc 1 2057 0
 5989              		.cfi_startproc
 5990              		@ args = 0, pretend = 0, frame = 16
 5991              		@ frame_needed = 1, uses_anonymous_args = 0
 5992 0000 80B5     		push	{r7, lr}
 5993              	.LCFI144:
 5994              		.cfi_def_cfa_offset 8
 5995              		.cfi_offset 7, -8
 5996              		.cfi_offset 14, -4
 5997 0002 84B0     		sub	sp, sp, #16
 5998              	.LCFI145:
 5999              		.cfi_def_cfa_offset 24
 6000 0004 00AF     		add	r7, sp, #0
 6001              	.LCFI146:
 6002              		.cfi_def_cfa_register 7
 6003 0006 7860     		str	r0, [r7, #4]
 6004 0008 3960     		str	r1, [r7, #0]
2058:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   uint32_t bitpos = 0, itmask = 0;
 6005              		.loc 1 2058 0
 6006 000a 4FF00003 		mov	r3, #0
 6007 000e FB60     		str	r3, [r7, #12]
 6008 0010 4FF00003 		mov	r3, #0
 6009 0014 BB60     		str	r3, [r7, #8]
2059:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   /* Check the parameters */
2060:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_ALL_PERIPH(USARTx));
 6010              		.loc 1 2060 0
 6011 0016 7A68     		ldr	r2, [r7, #4]
 6012 0018 314B     		ldr	r3, .L493
 6013 001a 9A42     		cmp	r2, r3
 6014 001c 0FD0     		beq	.L487
 6015              		.loc 1 2060 0 is_stmt 0 discriminator 2
 6016 001e 7A68     		ldr	r2, [r7, #4]
 6017 0020 304B     		ldr	r3, .L493+4
 6018 0022 9A42     		cmp	r2, r3
 6019 0024 0BD0     		beq	.L487
 6020              		.loc 1 2060 0 discriminator 1
 6021 0026 7A68     		ldr	r2, [r7, #4]
 6022 0028 2F4B     		ldr	r3, .L493+8
 6023 002a 9A42     		cmp	r2, r3
 6024 002c 07D0     		beq	.L487
 6025              		.loc 1 2060 0 discriminator 2
 6026 002e 7A68     		ldr	r2, [r7, #4]
 6027 0030 2E4B     		ldr	r3, .L493+12
 6028 0032 9A42     		cmp	r2, r3
 6029 0034 03D0     		beq	.L487
 6030              		.loc 1 2060 0 discriminator 3
 6031 0036 7A68     		ldr	r2, [r7, #4]
 6032 0038 2D4B     		ldr	r3, .L493+16
 6033 003a 9A42     		cmp	r2, r3
 6034 003c 02D1     		bne	.L488
 6035              	.L487:
 6036              		.loc 1 2060 0 discriminator 1
 6037 003e 4FF00103 		mov	r3, #1
 6038 0042 01E0     		b	.L489
 6039              	.L488:
 6040              		.loc 1 2060 0 discriminator 3
 6041 0044 4FF00003 		mov	r3, #0
 6042              	.L489:
 6043              		.loc 1 2060 0 discriminator 4
 6044 0048 1846     		mov	r0, r3
 6045 004a FFF7FEFF 		bl	assert_param
2061:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   assert_param(IS_USART_CLEAR_IT(USART_IT)); 
 6046              		.loc 1 2061 0 is_stmt 1 discriminator 4
 6047 004e 3A68     		ldr	r2, [r7, #0]
 6048 0050 284B     		ldr	r3, .L493+20
 6049 0052 9A42     		cmp	r2, r3
 6050 0054 2BD0     		beq	.L490
 6051              		.loc 1 2061 0 is_stmt 0 discriminator 2
 6052 0056 3B68     		ldr	r3, [r7, #0]
 6053 0058 B3F5847F 		cmp	r3, #264
 6054 005c 27D0     		beq	.L490
 6055              		.loc 1 2061 0 discriminator 1
 6056 005e 3A68     		ldr	r2, [r7, #0]
 6057 0060 254B     		ldr	r3, .L493+24
 6058 0062 9A42     		cmp	r2, r3
 6059 0064 23D0     		beq	.L490
 6060              		.loc 1 2061 0 discriminator 2
 6061 0066 3A68     		ldr	r2, [r7, #0]
 6062 0068 244B     		ldr	r3, .L493+28
 6063 006a 9A42     		cmp	r2, r3
 6064 006c 1FD0     		beq	.L490
 6065              		.loc 1 2061 0 discriminator 3
 6066 006e 3A68     		ldr	r2, [r7, #0]
 6067 0070 234B     		ldr	r3, .L493+32
 6068 0072 9A42     		cmp	r2, r3
 6069 0074 1BD0     		beq	.L490
 6070              		.loc 1 2061 0 discriminator 4
 6071 0076 3A68     		ldr	r2, [r7, #0]
 6072 0078 224B     		ldr	r3, .L493+36
 6073 007a 9A42     		cmp	r2, r3
 6074 007c 17D0     		beq	.L490
 6075              		.loc 1 2061 0 discriminator 5
 6076 007e 3A68     		ldr	r2, [r7, #0]
 6077 0080 214B     		ldr	r3, .L493+40
 6078 0082 9A42     		cmp	r2, r3
 6079 0084 13D0     		beq	.L490
 6080              		.loc 1 2061 0 discriminator 6
 6081 0086 3A68     		ldr	r2, [r7, #0]
 6082 0088 204B     		ldr	r3, .L493+44
 6083 008a 9A42     		cmp	r2, r3
 6084 008c 0FD0     		beq	.L490
 6085              		.loc 1 2061 0 discriminator 7
 6086 008e 3A68     		ldr	r2, [r7, #0]
 6087 0090 1F4B     		ldr	r3, .L493+48
 6088 0092 9A42     		cmp	r2, r3
 6089 0094 0BD0     		beq	.L490
 6090              		.loc 1 2061 0 discriminator 8
 6091 0096 3A68     		ldr	r2, [r7, #0]
 6092 0098 1E4B     		ldr	r3, .L493+52
 6093 009a 9A42     		cmp	r2, r3
 6094 009c 07D0     		beq	.L490
 6095              		.loc 1 2061 0 discriminator 9
 6096 009e 3A68     		ldr	r2, [r7, #0]
 6097 00a0 1D4B     		ldr	r3, .L493+56
 6098 00a2 9A42     		cmp	r2, r3
 6099 00a4 03D0     		beq	.L490
 6100              		.loc 1 2061 0 discriminator 10
 6101 00a6 3A68     		ldr	r2, [r7, #0]
 6102 00a8 1C4B     		ldr	r3, .L493+60
 6103 00aa 9A42     		cmp	r2, r3
 6104 00ac 02D1     		bne	.L491
 6105              	.L490:
 6106              		.loc 1 2061 0 discriminator 1
 6107 00ae 4FF00103 		mov	r3, #1
 6108 00b2 01E0     		b	.L492
 6109              	.L491:
 6110              		.loc 1 2061 0 discriminator 3
 6111 00b4 4FF00003 		mov	r3, #0
 6112              	.L492:
 6113              		.loc 1 2061 0 discriminator 4
 6114 00b8 1846     		mov	r0, r3
 6115 00ba FFF7FEFF 		bl	assert_param
2062:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   
2063:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   bitpos = USART_IT >> 0x10;
 6116              		.loc 1 2063 0 is_stmt 1 discriminator 4
 6117 00be 3B68     		ldr	r3, [r7, #0]
 6118 00c0 4FEA1343 		lsr	r3, r3, #16
 6119 00c4 FB60     		str	r3, [r7, #12]
2064:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   itmask = ((uint32_t)0x01 << (uint32_t)bitpos);
 6120              		.loc 1 2064 0 discriminator 4
 6121 00c6 FB68     		ldr	r3, [r7, #12]
 6122 00c8 4FF00102 		mov	r2, #1
 6123 00cc 02FA03F3 		lsl	r3, r2, r3
 6124 00d0 BB60     		str	r3, [r7, #8]
2065:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c ****   USARTx->ICR = (uint32_t)itmask;
 6125              		.loc 1 2065 0 discriminator 4
 6126 00d2 7B68     		ldr	r3, [r7, #4]
 6127 00d4 BA68     		ldr	r2, [r7, #8]
 6128 00d6 1A62     		str	r2, [r3, #32]
2066:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_usart.c **** }
 6129              		.loc 1 2066 0 discriminator 4
 6130 00d8 07F11007 		add	r7, r7, #16
 6131 00dc BD46     		mov	sp, r7
 6132 00de 80BD     		pop	{r7, pc}
 6133              	.L494:
 6134              		.align	2
 6135              	.L493:
 6136 00e0 00380140 		.word	1073821696
 6137 00e4 00440040 		.word	1073759232
 6138 00e8 00480040 		.word	1073760256
 6139 00ec 004C0040 		.word	1073761280
 6140 00f0 00500040 		.word	1073762304
 6141 00f4 06010600 		.word	393478
 6142 00f8 00030100 		.word	66304
 6143 00fc 00030200 		.word	131840
 6144 0100 00030300 		.word	197376
 6145 0104 04010400 		.word	262404
 6146 0108 06020800 		.word	524806
 6147 010c 0A030900 		.word	590602
 6148 0110 1A010B00 		.word	721178
 6149 0114 1B010C00 		.word	786715
 6150 0118 0E011100 		.word	1114382
 6151 011c 16031400 		.word	1311510
 6152              		.cfi_endproc
 6153              	.LFE158:
 6155              		.text
 6156              	.Letext0:
 6157              		.file 2 "/home/chaitannya/CodeSourcery/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eab
 6158              		.file 3 "inc/stm32f30x.h"
 6159              		.file 4 "libs/STM32F30x_StdPeriph_Driver/inc/stm32f30x_usart.h"
 6160              		.file 5 "libs/STM32F30x_StdPeriph_Driver/inc/stm32f30x_rcc.h"
 6161              		.file 6 "inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_usart.c
     /tmp/ccvNIgKj.s:20     .text.USART_DeInit:00000000 $t
     /tmp/ccvNIgKj.s:25     .text.USART_DeInit:00000000 USART_DeInit
     /tmp/ccvNIgKj.s:161    .text.USART_DeInit:000000f0 $d
     /tmp/ccvNIgKj.s:170    .text.USART_Init:00000000 $t
     /tmp/ccvNIgKj.s:175    .text.USART_Init:00000000 USART_Init
     /tmp/ccvNIgKj.s:524    .text.USART_Init:0000023c $d
     /tmp/ccvNIgKj.s:532    .text.USART_Init:00000254 $t
     /tmp/ccvNIgKj.s:590    .text.USART_StructInit:00000000 $t
     /tmp/ccvNIgKj.s:595    .text.USART_StructInit:00000000 USART_StructInit
     /tmp/ccvNIgKj.s:646    .text.USART_ClockInit:00000000 $t
     /tmp/ccvNIgKj.s:651    .text.USART_ClockInit:00000000 USART_ClockInit
     /tmp/ccvNIgKj.s:820    .text.USART_ClockInit:000000f8 $d
     /tmp/ccvNIgKj.s:827    .text.USART_ClockStructInit:00000000 $t
     /tmp/ccvNIgKj.s:832    .text.USART_ClockStructInit:00000000 USART_ClockStructInit
     /tmp/ccvNIgKj.s:875    .text.USART_Cmd:00000000 $t
     /tmp/ccvNIgKj.s:880    .text.USART_Cmd:00000000 USART_Cmd
     /tmp/ccvNIgKj.s:981    .text.USART_Cmd:00000088 $d
     /tmp/ccvNIgKj.s:990    .text.USART_DirectionModeCmd:00000000 $t
     /tmp/ccvNIgKj.s:995    .text.USART_DirectionModeCmd:00000000 USART_DirectionModeCmd
     /tmp/ccvNIgKj.s:1119   .text.USART_DirectionModeCmd:000000b0 $d
     /tmp/ccvNIgKj.s:1128   .text.USART_OverSampling8Cmd:00000000 $t
     /tmp/ccvNIgKj.s:1133   .text.USART_OverSampling8Cmd:00000000 USART_OverSampling8Cmd
     /tmp/ccvNIgKj.s:1234   .text.USART_OverSampling8Cmd:00000088 $d
     /tmp/ccvNIgKj.s:1243   .text.USART_OneBitMethodCmd:00000000 $t
     /tmp/ccvNIgKj.s:1248   .text.USART_OneBitMethodCmd:00000000 USART_OneBitMethodCmd
     /tmp/ccvNIgKj.s:1349   .text.USART_OneBitMethodCmd:00000088 $d
     /tmp/ccvNIgKj.s:1358   .text.USART_MSBFirstCmd:00000000 $t
     /tmp/ccvNIgKj.s:1363   .text.USART_MSBFirstCmd:00000000 USART_MSBFirstCmd
     /tmp/ccvNIgKj.s:1464   .text.USART_MSBFirstCmd:00000088 $d
     /tmp/ccvNIgKj.s:1473   .text.USART_DataInvCmd:00000000 $t
     /tmp/ccvNIgKj.s:1478   .text.USART_DataInvCmd:00000000 USART_DataInvCmd
     /tmp/ccvNIgKj.s:1579   .text.USART_DataInvCmd:00000088 $d
     /tmp/ccvNIgKj.s:1588   .text.USART_InvPinCmd:00000000 $t
     /tmp/ccvNIgKj.s:1593   .text.USART_InvPinCmd:00000000 USART_InvPinCmd
     /tmp/ccvNIgKj.s:1717   .text.USART_InvPinCmd:000000b0 $d
     /tmp/ccvNIgKj.s:1726   .text.USART_SWAPPinCmd:00000000 $t
     /tmp/ccvNIgKj.s:1731   .text.USART_SWAPPinCmd:00000000 USART_SWAPPinCmd
     /tmp/ccvNIgKj.s:1832   .text.USART_SWAPPinCmd:00000088 $d
     /tmp/ccvNIgKj.s:1841   .text.USART_ReceiverTimeOutCmd:00000000 $t
     /tmp/ccvNIgKj.s:1846   .text.USART_ReceiverTimeOutCmd:00000000 USART_ReceiverTimeOutCmd
     /tmp/ccvNIgKj.s:1947   .text.USART_ReceiverTimeOutCmd:00000088 $d
     /tmp/ccvNIgKj.s:1956   .text.USART_SetReceiverTimeOut:00000000 $t
     /tmp/ccvNIgKj.s:1961   .text.USART_SetReceiverTimeOut:00000000 USART_SetReceiverTimeOut
     /tmp/ccvNIgKj.s:2046   .text.USART_SetReceiverTimeOut:00000078 $d
     /tmp/ccvNIgKj.s:2055   .text.USART_SetPrescaler:00000000 $t
     /tmp/ccvNIgKj.s:2060   .text.USART_SetPrescaler:00000000 USART_SetPrescaler
     /tmp/ccvNIgKj.s:2141   .text.USART_SetPrescaler:00000070 $d
     /tmp/ccvNIgKj.s:2150   .text.USART_STOPModeCmd:00000000 $t
     /tmp/ccvNIgKj.s:2155   .text.USART_STOPModeCmd:00000000 USART_STOPModeCmd
     /tmp/ccvNIgKj.s:2256   .text.USART_STOPModeCmd:00000088 $d
     /tmp/ccvNIgKj.s:2265   .text.USART_StopModeWakeUpSourceConfig:00000000 $t
     /tmp/ccvNIgKj.s:2270   .text.USART_StopModeWakeUpSourceConfig:00000000 USART_StopModeWakeUpSourceConfig
     /tmp/ccvNIgKj.s:2367   .text.USART_StopModeWakeUpSourceConfig:00000088 $d
     /tmp/ccvNIgKj.s:2376   .text.USART_AutoBaudRateCmd:00000000 $t
     /tmp/ccvNIgKj.s:2381   .text.USART_AutoBaudRateCmd:00000000 USART_AutoBaudRateCmd
     /tmp/ccvNIgKj.s:2482   .text.USART_AutoBaudRateCmd:00000088 $d
     /tmp/ccvNIgKj.s:2491   .text.USART_AutoBaudRateConfig:00000000 $t
     /tmp/ccvNIgKj.s:2496   .text.USART_AutoBaudRateConfig:00000000 USART_AutoBaudRateConfig
     /tmp/ccvNIgKj.s:2598   .text.USART_AutoBaudRateConfig:00000090 $d
     /tmp/ccvNIgKj.s:2607   .text.USART_SendData:00000000 $t
     /tmp/ccvNIgKj.s:2612   .text.USART_SendData:00000000 USART_SendData
     /tmp/ccvNIgKj.s:2692   .text.USART_SendData:00000074 $d
     /tmp/ccvNIgKj.s:2701   .text.USART_ReceiveData:00000000 $t
     /tmp/ccvNIgKj.s:2706   .text.USART_ReceiveData:00000000 USART_ReceiveData
     /tmp/ccvNIgKj.s:2775   .text.USART_ReceiveData:0000005c $d
     /tmp/ccvNIgKj.s:2784   .text.USART_SetAddress:00000000 $t
     /tmp/ccvNIgKj.s:2789   .text.USART_SetAddress:00000000 USART_SetAddress
     /tmp/ccvNIgKj.s:2866   .text.USART_SetAddress:00000068 $d
     /tmp/ccvNIgKj.s:2875   .text.USART_MuteModeCmd:00000000 $t
     /tmp/ccvNIgKj.s:2880   .text.USART_MuteModeCmd:00000000 USART_MuteModeCmd
     /tmp/ccvNIgKj.s:2981   .text.USART_MuteModeCmd:00000088 $d
     /tmp/ccvNIgKj.s:2990   .text.USART_MuteModeWakeUpConfig:00000000 $t
     /tmp/ccvNIgKj.s:2995   .text.USART_MuteModeWakeUpConfig:00000000 USART_MuteModeWakeUpConfig
     /tmp/ccvNIgKj.s:3089   .text.USART_MuteModeWakeUpConfig:00000080 $d
     /tmp/ccvNIgKj.s:3098   .text.USART_AddressDetectionConfig:00000000 $t
     /tmp/ccvNIgKj.s:3103   .text.USART_AddressDetectionConfig:00000000 USART_AddressDetectionConfig
     /tmp/ccvNIgKj.s:3197   .text.USART_AddressDetectionConfig:00000080 $d
     /tmp/ccvNIgKj.s:3206   .text.USART_LINBreakDetectLengthConfig:00000000 $t
     /tmp/ccvNIgKj.s:3211   .text.USART_LINBreakDetectLengthConfig:00000000 USART_LINBreakDetectLengthConfig
     /tmp/ccvNIgKj.s:3305   .text.USART_LINBreakDetectLengthConfig:00000080 $d
     /tmp/ccvNIgKj.s:3314   .text.USART_LINCmd:00000000 $t
     /tmp/ccvNIgKj.s:3319   .text.USART_LINCmd:00000000 USART_LINCmd
     /tmp/ccvNIgKj.s:3420   .text.USART_LINCmd:00000088 $d
     /tmp/ccvNIgKj.s:3429   .text.USART_HalfDuplexCmd:00000000 $t
     /tmp/ccvNIgKj.s:3434   .text.USART_HalfDuplexCmd:00000000 USART_HalfDuplexCmd
     /tmp/ccvNIgKj.s:3535   .text.USART_HalfDuplexCmd:00000088 $d
     /tmp/ccvNIgKj.s:3544   .text.USART_SetGuardTime:00000000 $t
     /tmp/ccvNIgKj.s:3549   .text.USART_SetGuardTime:00000000 USART_SetGuardTime
     /tmp/ccvNIgKj.s:3621   .text.USART_SetGuardTime:00000064 $d
     /tmp/ccvNIgKj.s:3628   .text.USART_SmartCardCmd:00000000 $t
     /tmp/ccvNIgKj.s:3633   .text.USART_SmartCardCmd:00000000 USART_SmartCardCmd
     /tmp/ccvNIgKj.s:3723   .text.USART_SmartCardCmd:00000078 $d
     /tmp/ccvNIgKj.s:3730   .text.USART_SmartCardNACKCmd:00000000 $t
     /tmp/ccvNIgKj.s:3735   .text.USART_SmartCardNACKCmd:00000000 USART_SmartCardNACKCmd
     /tmp/ccvNIgKj.s:3825   .text.USART_SmartCardNACKCmd:00000078 $d
     /tmp/ccvNIgKj.s:3832   .text.USART_SetAutoRetryCount:00000000 $t
     /tmp/ccvNIgKj.s:3837   .text.USART_SetAutoRetryCount:00000000 USART_SetAutoRetryCount
     /tmp/ccvNIgKj.s:3912   .text.USART_SetAutoRetryCount:0000006c $d
     /tmp/ccvNIgKj.s:3919   .text.USART_SetBlockLength:00000000 $t
     /tmp/ccvNIgKj.s:3924   .text.USART_SetBlockLength:00000000 USART_SetBlockLength
     /tmp/ccvNIgKj.s:3990   .text.USART_SetBlockLength:00000058 $d
     /tmp/ccvNIgKj.s:3997   .text.USART_IrDAConfig:00000000 $t
     /tmp/ccvNIgKj.s:4002   .text.USART_IrDAConfig:00000000 USART_IrDAConfig
     /tmp/ccvNIgKj.s:4096   .text.USART_IrDAConfig:00000080 $d
     /tmp/ccvNIgKj.s:4105   .text.USART_IrDACmd:00000000 $t
     /tmp/ccvNIgKj.s:4110   .text.USART_IrDACmd:00000000 USART_IrDACmd
     /tmp/ccvNIgKj.s:4211   .text.USART_IrDACmd:00000088 $d
     /tmp/ccvNIgKj.s:4220   .text.USART_DECmd:00000000 $t
     /tmp/ccvNIgKj.s:4225   .text.USART_DECmd:00000000 USART_DECmd
     /tmp/ccvNIgKj.s:4326   .text.USART_DECmd:00000088 $d
     /tmp/ccvNIgKj.s:4335   .text.USART_DEPolarityConfig:00000000 $t
     /tmp/ccvNIgKj.s:4340   .text.USART_DEPolarityConfig:00000000 USART_DEPolarityConfig
     /tmp/ccvNIgKj.s:4434   .text.USART_DEPolarityConfig:00000080 $d
     /tmp/ccvNIgKj.s:4443   .text.USART_SetDEAssertionTime:00000000 $t
     /tmp/ccvNIgKj.s:4448   .text.USART_SetDEAssertionTime:00000000 USART_SetDEAssertionTime
     /tmp/ccvNIgKj.s:4533   .text.USART_SetDEAssertionTime:00000078 $d
     /tmp/ccvNIgKj.s:4542   .text.USART_SetDEDeassertionTime:00000000 $t
     /tmp/ccvNIgKj.s:4547   .text.USART_SetDEDeassertionTime:00000000 USART_SetDEDeassertionTime
     /tmp/ccvNIgKj.s:4632   .text.USART_SetDEDeassertionTime:00000078 $d
     /tmp/ccvNIgKj.s:4641   .text.USART_DMACmd:00000000 $t
     /tmp/ccvNIgKj.s:4646   .text.USART_DMACmd:00000000 USART_DMACmd
     /tmp/ccvNIgKj.s:4765   .text.USART_DMACmd:000000a8 $d
     /tmp/ccvNIgKj.s:4773   .text.USART_DMAReceptionErrorConfig:00000000 $t
     /tmp/ccvNIgKj.s:4778   .text.USART_DMAReceptionErrorConfig:00000000 USART_DMAReceptionErrorConfig
     /tmp/ccvNIgKj.s:4867   .text.USART_DMAReceptionErrorConfig:00000078 $d
     /tmp/ccvNIgKj.s:4875   .text.USART_ITConfig:00000000 $t
     /tmp/ccvNIgKj.s:4880   .text.USART_ITConfig:00000000 USART_ITConfig
     /tmp/ccvNIgKj.s:5101   .text.USART_ITConfig:00000158 $d
     /tmp/ccvNIgKj.s:5120   .text.USART_RequestCmd:00000000 $t
     /tmp/ccvNIgKj.s:5125   .text.USART_RequestCmd:00000000 USART_RequestCmd
     /tmp/ccvNIgKj.s:5268   .text.USART_RequestCmd:000000cc $d
     /tmp/ccvNIgKj.s:5277   .text.USART_OverrunDetectionConfig:00000000 $t
     /tmp/ccvNIgKj.s:5282   .text.USART_OverrunDetectionConfig:00000000 USART_OverrunDetectionConfig
     /tmp/ccvNIgKj.s:5376   .text.USART_OverrunDetectionConfig:00000080 $d
     /tmp/ccvNIgKj.s:5385   .text.USART_GetFlagStatus:00000000 $t
     /tmp/ccvNIgKj.s:5390   .text.USART_GetFlagStatus:00000000 USART_GetFlagStatus
     /tmp/ccvNIgKj.s:5573   .text.USART_GetFlagStatus:00000120 $d
     /tmp/ccvNIgKj.s:5582   .text.USART_ClearFlag:00000000 $t
     /tmp/ccvNIgKj.s:5587   .text.USART_ClearFlag:00000000 USART_ClearFlag
     /tmp/ccvNIgKj.s:5712   .text.USART_ClearFlag:000000b4 $d
     /tmp/ccvNIgKj.s:5721   .text.USART_GetITStatus:00000000 $t
     /tmp/ccvNIgKj.s:5726   .text.USART_GetITStatus:00000000 USART_GetITStatus
     /tmp/ccvNIgKj.s:5959   .text.USART_GetITStatus:0000016c $d
     /tmp/ccvNIgKj.s:5981   .text.USART_ClearITPendingBit:00000000 $t
     /tmp/ccvNIgKj.s:5986   .text.USART_ClearITPendingBit:00000000 USART_ClearITPendingBit
     /tmp/ccvNIgKj.s:6136   .text.USART_ClearITPendingBit:000000e0 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
assert_param
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
