   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f30x_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.data.APBAHBPrescTable,"aw",%progbits
  20              		.align	2
  23              	APBAHBPrescTable:
  24 0000 00       		.byte	0
  25 0001 00       		.byte	0
  26 0002 00       		.byte	0
  27 0003 00       		.byte	0
  28 0004 01       		.byte	1
  29 0005 02       		.byte	2
  30 0006 03       		.byte	3
  31 0007 04       		.byte	4
  32 0008 01       		.byte	1
  33 0009 02       		.byte	2
  34 000a 03       		.byte	3
  35 000b 04       		.byte	4
  36 000c 06       		.byte	6
  37 000d 07       		.byte	7
  38 000e 08       		.byte	8
  39 000f 09       		.byte	9
  40              		.section	.data.ADCPrescTable,"aw",%progbits
  41              		.align	2
  44              	ADCPrescTable:
  45 0000 0000     		.short	0
  46 0002 0100     		.short	1
  47 0004 0200     		.short	2
  48 0006 0400     		.short	4
  49 0008 0600     		.short	6
  50 000a 0800     		.short	8
  51 000c 0A00     		.short	10
  52 000e 0C00     		.short	12
  53 0010 1000     		.short	16
  54 0012 2000     		.short	32
  55 0014 4000     		.short	64
  56 0016 8000     		.short	128
  57 0018 0001     		.short	256
  58 001a 0000     		.section	.text.RCC_DeInit,"ax",%progbits
  59              		.align	2
  60              		.global	RCC_DeInit
  61              		.thumb
  62              		.thumb_func
  64              	RCC_DeInit:
  65              	.LFB110:
  66              		.file 1 "libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c"
   1:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
   2:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ******************************************************************************
   3:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @file    stm32f30x_rcc.c
   4:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @author  MCD Application Team
   5:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @version V1.0.1
   6:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @date    23-October-2012
   7:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          functionalities of the Reset and clock control (RCC) peripheral:           
   9:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + Internal/external clocks, PLL, CSS and MCO configuration
  10:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + System, AHB and APB busses clocks configuration
  11:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + Peripheral clocks configuration
  12:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           + Interrupts and flags management
  13:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  14:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   @verbatim
  15:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                
  16:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
  17:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                       ##### RCC specific features #####
  18:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
  19:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] After reset the device is running from HSI (8 MHz) with Flash 0 WS, 
  20:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          all peripherals are off except internal SRAM, Flash and SWD.
  21:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) There is no prescaler on High speed (AHB) and Low speed (APB) busses;
  22:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              all peripherals mapped on these busses are running at HSI speed.
  23:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****        	 (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) All GPIOs are in input floating state, except the SWD pins which
  25:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              are assigned to be used for debug purpose.
  26:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] Once the device starts from reset, the user application has to:        
  27:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the clock source to be used to drive the System clock
  28:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (if the application needs higher frequency/performance).
  29:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the System clock frequency and Flash settings.  
  30:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the AHB and APB busses prescalers.
  31:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Enable the clock for the peripheral(s) to be used.
  32:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Configure the clock source(s) for peripherals which clocks are not
  33:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              derived from the System clock (ADC, TIM, I2C, USART, RTC and IWDG).      
  34:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                         
  35:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   @endverbatim
  36:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     
  37:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ******************************************************************************
  38:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @attention
  39:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  40:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  41:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  42:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  43:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * You may not use this file except in compliance with the License.
  44:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * You may obtain a copy of the License at:
  45:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  46:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  47:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  48:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * Unless required by applicable law or agreed to in writing, software 
  49:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  50:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  51:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * See the License for the specific language governing permissions and
  52:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * limitations under the License.
  53:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *
  54:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ******************************************************************************
  55:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
  56:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  57:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Includes ------------------------------------------------------------------*/
  58:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #include "stm32f30x_rcc.h"
  59:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  60:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @addtogroup STM32F30x_StdPeriph_Driver
  61:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
  62:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
  63:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  64:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC 
  65:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief RCC driver modules
  66:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
  67:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */ 
  68:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  69:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  70:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private define ------------------------------------------------------------*/
  71:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  72:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define RCC_OFFSET                (RCC_BASE - PERIPH_BASE)
  73:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  74:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- CR Register ---*/
  75:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  76:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of HSION bit */
  77:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_OFFSET                 (RCC_OFFSET + 0x00)
  78:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define HSION_BitNumber           0x00
  79:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_HSION_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (HSION_BitNumber * 4))
  80:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  81:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of PLLON bit */
  82:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define PLLON_BitNumber           0x18
  83:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_PLLON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (PLLON_BitNumber * 4))
  84:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  85:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of CSSON bit */
  86:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CSSON_BitNumber           0x13
  87:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_CSSON_BB               (PERIPH_BB_BASE + (CR_OFFSET * 32) + (CSSON_BitNumber * 4))
  88:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  89:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- CFGR Register ---*/
  90:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of USBPRE bit */
  91:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_OFFSET               (RCC_OFFSET + 0x04)
  92:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define USBPRE_BitNumber          0x16
  93:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_USBPRE_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (USBPRE_BitNumber * 4))
  94:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of I2SSRC bit */
  95:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define I2SSRC_BitNumber          0x17
  96:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_I2SSRC_BB            (PERIPH_BB_BASE + (CFGR_OFFSET * 32) + (I2SSRC_BitNumber * 4))
  97:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
  98:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- BDCR Register ---*/
  99:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 100:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of RTCEN bit */
 101:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDCR_OFFSET               (RCC_OFFSET + 0x20)
 102:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define RTCEN_BitNumber           0x0F
 103:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDCR_RTCEN_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (RTCEN_BitNumber * 4))
 104:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 105:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of BDRST bit */
 106:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDRST_BitNumber           0x10
 107:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define BDCR_BDRST_BB             (PERIPH_BB_BASE + (BDCR_OFFSET * 32) + (BDRST_BitNumber * 4))
 108:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 109:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* --- CSR Register ---*/
 110:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 111:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Alias word address of LSION bit */
 112:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CSR_OFFSET                (RCC_OFFSET + 0x24)
 113:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define LSION_BitNumber           0x00
 114:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CSR_LSION_BB              (PERIPH_BB_BASE + (CSR_OFFSET * 32) + (LSION_BitNumber * 4))
 115:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 116:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* ---------------------- RCC registers bit mask ------------------------ */
 117:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* RCC Flag Mask */
 118:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define FLAG_MASK                 ((uint8_t)0x1F)
 119:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 120:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CFGR register byte 3 (Bits[31:23]) base address */
 121:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CFGR_BYTE3_ADDRESS        ((uint32_t)0x40021007)
 122:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 123:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CIR register byte 2 (Bits[15:8]) base address */
 124:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CIR_BYTE2_ADDRESS         ((uint32_t)0x40021009)
 125:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 126:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CIR register byte 3 (Bits[23:16]) base address */
 127:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CIR_BYTE3_ADDRESS         ((uint32_t)0x4002100A)
 128:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 129:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* CR register byte 2 (Bits[23:16]) base address */
 130:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** #define CR_BYTE2_ADDRESS          ((uint32_t)0x40021002)
 131:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 132:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private macro -------------------------------------------------------------*/
 133:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private variables ---------------------------------------------------------*/
 134:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** static __I uint8_t APBAHBPrescTable[16] = {0, 0, 0, 0, 1, 2, 3, 4, 1, 2, 3, 4, 6, 7, 8, 9};
 135:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** static __I uint16_t ADCPrescTable[13] = {0, 1, 2, 4, 6, 8, 10, 12, 16, 32, 64, 128, 256};
 136:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 137:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 138:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /* Private functions ---------------------------------------------------------*/
 139:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 140:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Private_Functions
 141:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
 142:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 143:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 144:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group1 Internal and external clocks, PLL, CSS and MCO configuration functions
 145:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   Internal and external clocks, PLL, CSS and MCO configuration functions 
 146:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
 147:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
 148:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
 149:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ##### Internal-external clocks, PLL, CSS and MCO configuration functions #####
 150:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
 151:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] This section provides functions allowing to configure the internal/external 
 152:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          clocks, PLL, CSS and MCO.
 153:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly 
 154:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              or through the PLL as System clock source.
 155:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              The HSI clock can be used also to clock the USART and I2C peripherals.
 156:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) LSI (low-speed internal), 40 KHz low consumption RC used as IWDG and/or RTC
 157:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              clock source.
 158:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 159:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              through the PLL as System clock source. Can be used also as RTC clock source.
 160:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 161:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              LSE can be used also to clock the USART peripherals.
 162:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) PLL (clocked by HSI or HSE), for System clock.
 163:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) CSS (Clock security system), once enabled and if a HSE clock failure occurs 
 164:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (HSE used directly or through PLL as System clock source), the System clock
 165:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled. 
 166:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt) 
 167:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              exception vector.   
 168:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE,
 169:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              PLL clock on PA8 pin.
 170:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 171:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
 172:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
 173:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 174:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 175:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 176:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 177:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 178:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     HSI ON and used as system clock source 
 179:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     HSE and PLL OFF
 180:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     AHB, APB1 and APB2 prescalers set to 1.
 181:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     CSS and MCO OFF
 182:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     All interrupts disabled
 183:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   However, this function doesn't modify the configuration of the
 184:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     Peripheral clocks
 185:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     LSI, LSE and RTC clocks                  
 186:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
 187:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 188:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 189:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_DeInit(void)
 190:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
  67              		.loc 1 190 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 0
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 80B4     		push	{r7}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 7, -4
  76 0002 00AF     		add	r7, sp, #0
  77              	.LCFI1:
  78              		.cfi_def_cfa_register 7
 191:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set HSION bit */
 192:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR |= (uint32_t)0x00000001;
  79              		.loc 1 192 0
  80 0004 1A4B     		ldr	r3, .L2
  81 0006 1A4A     		ldr	r2, .L2
  82 0008 1268     		ldr	r2, [r2, #0]
  83 000a 42F00102 		orr	r2, r2, #1
  84 000e 1A60     		str	r2, [r3, #0]
 193:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 194:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE[2:0] and MCOSEL[2:0] bits */
 195:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR &= (uint32_t)0xF8FFC000;
  85              		.loc 1 195 0
  86 0010 174A     		ldr	r2, .L2
  87 0012 174B     		ldr	r3, .L2
  88 0014 5968     		ldr	r1, [r3, #4]
  89 0016 174B     		ldr	r3, .L2+4
  90 0018 0B40     		ands	r3, r3, r1
  91 001a 5360     		str	r3, [r2, #4]
 196:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 197:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset HSEON, CSSON and PLLON bits */
 198:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
  92              		.loc 1 198 0
  93 001c 144A     		ldr	r2, .L2
  94 001e 144B     		ldr	r3, .L2
  95 0020 1B68     		ldr	r3, [r3, #0]
  96 0022 23F08473 		bic	r3, r3, #17301504
  97 0026 23F48033 		bic	r3, r3, #65536
  98 002a 1360     		str	r3, [r2, #0]
 199:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 200:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset HSEBYP bit */
 201:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
  99              		.loc 1 201 0
 100 002c 104B     		ldr	r3, .L2
 101 002e 104A     		ldr	r2, .L2
 102 0030 1268     		ldr	r2, [r2, #0]
 103 0032 22F48022 		bic	r2, r2, #262144
 104 0036 1A60     		str	r2, [r3, #0]
 202:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 203:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset PLLSRC, PLLXTPRE, PLLMUL and USBPRE bits */
 204:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR &= (uint32_t)0xFF80FFFF;
 105              		.loc 1 204 0
 106 0038 0D4B     		ldr	r3, .L2
 107 003a 0D4A     		ldr	r2, .L2
 108 003c 5268     		ldr	r2, [r2, #4]
 109 003e 22F4FE02 		bic	r2, r2, #8323072
 110 0042 5A60     		str	r2, [r3, #4]
 205:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 206:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset PREDIV1[3:0] and ADCPRE[13:4] bits */
 207:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR2 &= (uint32_t)0xFFFFC000;
 111              		.loc 1 207 0
 112 0044 0A4A     		ldr	r2, .L2
 113 0046 0A4B     		ldr	r3, .L2
 114 0048 DB6A     		ldr	r3, [r3, #44]
 115 004a 23F47F53 		bic	r3, r3, #16320
 116 004e 23F03F03 		bic	r3, r3, #63
 117 0052 D362     		str	r3, [r2, #44]
 208:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 209:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset USARTSW[1:0], I2CSW and TIMSW bits */
 210:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 &= (uint32_t)0xF00FCCC;
 118              		.loc 1 210 0
 119 0054 064A     		ldr	r2, .L2
 120 0056 064B     		ldr	r3, .L2
 121 0058 196B     		ldr	r1, [r3, #48]
 122 005a 074B     		ldr	r3, .L2+8
 123 005c 0B40     		ands	r3, r3, r1
 124 005e 1363     		str	r3, [r2, #48]
 211:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 212:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Disable all interrupts */
 213:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CIR = 0x00000000;
 125              		.loc 1 213 0
 126 0060 034B     		ldr	r3, .L2
 127 0062 4FF00002 		mov	r2, #0
 128 0066 9A60     		str	r2, [r3, #8]
 214:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 129              		.loc 1 214 0
 130 0068 BD46     		mov	sp, r7
 131 006a 80BC     		pop	{r7}
 132 006c 7047     		bx	lr
 133              	.L3:
 134 006e 00BF     		.align	2
 135              	.L2:
 136 0070 00100240 		.word	1073876992
 137 0074 00C0FFF8 		.word	-117456896
 138 0078 CCFC000F 		.word	251722956
 139              		.cfi_endproc
 140              	.LFE110:
 142              		.section	.text.RCC_HSEConfig,"ax",%progbits
 143              		.align	2
 144              		.global	RCC_HSEConfig
 145              		.thumb
 146              		.thumb_func
 148              	RCC_HSEConfig:
 149              	.LFB111:
 215:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 216:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 217:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the External High Speed oscillator (HSE).
 218:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the HSE (RCC_HSE_ON or RCC_HSE_Bypass), the application
 219:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         software should wait on HSERDY flag to be set indicating that HSE clock
 220:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is stable and can be used to clock the PLL and/or system clock.
 221:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   HSE state can not be changed if it is used directly or through the
 222:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLL as system clock. In this case, you have to select another source
 223:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         of the system clock then change the HSE state (ex. disable it).
 224:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The HSE is stopped by hardware when entering STOP and STANDBY modes.         
 225:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function resets the CSSON bit, so if the Clock security system(CSS)
 226:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         was previously enabled you have to enable it again after calling this
 227:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         function.
 228:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_HSE: specifies the new state of the HSE.
 229:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 230:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HSE_OFF: turn OFF the HSE oscillator, HSERDY flag goes low after
 231:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                       6 HSE oscillator clock cycles.
 232:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HSE_ON: turn ON the HSE oscillator
 233:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HSE_Bypass: HSE oscillator bypassed with external clock
 234:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 235:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 236:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_HSEConfig(uint8_t RCC_HSE)
 237:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 150              		.loc 1 237 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              	.LCFI2:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 0002 83B0     		sub	sp, sp, #12
 160              	.LCFI3:
 161              		.cfi_def_cfa_offset 16
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI4:
 164              		.cfi_def_cfa_register 7
 165 0006 0346     		mov	r3, r0
 166 0008 FB71     		strb	r3, [r7, #7]
 238:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 239:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_HSE(RCC_HSE));
 240:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 241:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset HSEON and HSEBYP bits before configuring the HSE ------------------*/
 242:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CR_BYTE2_ADDRESS = RCC_HSE_OFF;
 167              		.loc 1 242 0
 168 000a 064B     		ldr	r3, .L5
 169 000c 4FF00002 		mov	r2, #0
 170 0010 1A70     		strb	r2, [r3, #0]
 243:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 244:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the new HSE configuration -------------------------------------------*/
 245:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CR_BYTE2_ADDRESS = RCC_HSE;
 171              		.loc 1 245 0
 172 0012 044B     		ldr	r3, .L5
 173 0014 FA79     		ldrb	r2, [r7, #7]
 174 0016 1A70     		strb	r2, [r3, #0]
 246:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 247:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 175              		.loc 1 247 0
 176 0018 07F10C07 		add	r7, r7, #12
 177 001c BD46     		mov	sp, r7
 178 001e 80BC     		pop	{r7}
 179 0020 7047     		bx	lr
 180              	.L6:
 181 0022 00BF     		.align	2
 182              	.L5:
 183 0024 02100240 		.word	1073876994
 184              		.cfi_endproc
 185              	.LFE111:
 187              		.section	.text.RCC_WaitForHSEStartUp,"ax",%progbits
 188              		.align	2
 189              		.global	RCC_WaitForHSEStartUp
 190              		.thumb
 191              		.thumb_func
 193              	RCC_WaitForHSEStartUp:
 194              	.LFB112:
 248:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 249:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 250:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Waits for HSE start-up.
 251:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function waits on HSERDY flag to be set and return SUCCESS if 
 252:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         this flag is set, otherwise returns ERROR if the timeout is reached 
 253:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and this flag is not set. The timeout value is defined by the constant
 254:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         HSE_STARTUP_TIMEOUT in stm32f30x.h file. You can tailor it depending
 255:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         on the HSE crystal used in your application. 
 256:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
 257:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval An ErrorStatus enumeration value:
 258:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          - SUCCESS: HSE oscillator is stable and ready to use
 259:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          - ERROR: HSE oscillator not yet ready
 260:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 261:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** ErrorStatus RCC_WaitForHSEStartUp(void)
 262:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 195              		.loc 1 262 0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 8
 198              		@ frame_needed = 1, uses_anonymous_args = 0
 199 0000 80B5     		push	{r7, lr}
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 82B0     		sub	sp, sp, #8
 205              	.LCFI6:
 206              		.cfi_def_cfa_offset 16
 207 0004 00AF     		add	r7, sp, #0
 208              	.LCFI7:
 209              		.cfi_def_cfa_register 7
 263:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   __IO uint32_t StartUpCounter = 0;
 210              		.loc 1 263 0
 211 0006 4FF00003 		mov	r3, #0
 212 000a 3B60     		str	r3, [r7, #0]
 264:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ErrorStatus status = ERROR;
 213              		.loc 1 264 0
 214 000c 4FF00003 		mov	r3, #0
 215 0010 FB71     		strb	r3, [r7, #7]
 265:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   FlagStatus HSEStatus = RESET;
 216              		.loc 1 265 0
 217 0012 4FF00003 		mov	r3, #0
 218 0016 BB71     		strb	r3, [r7, #6]
 219              	.L9:
 266:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 267:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Wait till HSE is ready and if timeout is reached exit */
 268:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   do
 269:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 270:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     HSEStatus = RCC_GetFlagStatus(RCC_FLAG_HSERDY);
 220              		.loc 1 270 0 discriminator 1
 221 0018 4FF01100 		mov	r0, #17
 222 001c FFF7FEFF 		bl	RCC_GetFlagStatus
 223 0020 0346     		mov	r3, r0
 224 0022 BB71     		strb	r3, [r7, #6]
 271:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     StartUpCounter++;  
 225              		.loc 1 271 0 discriminator 1
 226 0024 3B68     		ldr	r3, [r7, #0]
 227 0026 03F10103 		add	r3, r3, #1
 228 002a 3B60     		str	r3, [r7, #0]
 272:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   } while((StartUpCounter != HSE_STARTUP_TIMEOUT) && (HSEStatus == RESET));
 229              		.loc 1 272 0 discriminator 1
 230 002c 3B68     		ldr	r3, [r7, #0]
 231 002e B3F5A06F 		cmp	r3, #1280
 232 0032 02D0     		beq	.L8
 233 0034 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 234 0036 002B     		cmp	r3, #0
 235 0038 EED0     		beq	.L9
 236              	.L8:
 273:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 274:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (RCC_GetFlagStatus(RCC_FLAG_HSERDY) != RESET)
 237              		.loc 1 274 0
 238 003a 4FF01100 		mov	r0, #17
 239 003e FFF7FEFF 		bl	RCC_GetFlagStatus
 240 0042 0346     		mov	r3, r0
 241 0044 002B     		cmp	r3, #0
 242 0046 03D0     		beq	.L10
 275:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 276:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     status = SUCCESS;
 243              		.loc 1 276 0
 244 0048 4FF00103 		mov	r3, #1
 245 004c FB71     		strb	r3, [r7, #7]
 246 004e 02E0     		b	.L11
 247              	.L10:
 277:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 278:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 279:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 280:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     status = ERROR;
 248              		.loc 1 280 0
 249 0050 4FF00003 		mov	r3, #0
 250 0054 FB71     		strb	r3, [r7, #7]
 251              	.L11:
 281:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }  
 282:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return (status);
 252              		.loc 1 282 0
 253 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 283:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 254              		.loc 1 283 0
 255 0058 1846     		mov	r0, r3
 256 005a 07F10807 		add	r7, r7, #8
 257 005e BD46     		mov	sp, r7
 258 0060 80BD     		pop	{r7, pc}
 259              		.cfi_endproc
 260              	.LFE112:
 262 0062 00BF     		.section	.text.RCC_AdjustHSICalibrationValue,"ax",%progbits
 263              		.align	2
 264              		.global	RCC_AdjustHSICalibrationValue
 265              		.thumb
 266              		.thumb_func
 268              	RCC_AdjustHSICalibrationValue:
 269              	.LFB113:
 284:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 285:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 286:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Adjusts the Internal High Speed oscillator (HSI) calibration value.
 287:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The calibration is used to compensate for the variations in voltage
 288:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and temperature that influence the frequency of the internal HSI RC.
 289:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         Refer to the Application Note AN3300 for more details on how to  
 290:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         calibrate the HSI.
 291:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  HSICalibrationValue: specifies the HSI calibration trimming value.
 292:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter must be a number between 0 and 0x1F.
 293:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 294:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 295:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_AdjustHSICalibrationValue(uint8_t HSICalibrationValue)
 296:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 270              		.loc 1 296 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 16
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275 0000 80B4     		push	{r7}
 276              	.LCFI8:
 277              		.cfi_def_cfa_offset 4
 278              		.cfi_offset 7, -4
 279 0002 85B0     		sub	sp, sp, #20
 280              	.LCFI9:
 281              		.cfi_def_cfa_offset 24
 282 0004 00AF     		add	r7, sp, #0
 283              	.LCFI10:
 284              		.cfi_def_cfa_register 7
 285 0006 0346     		mov	r3, r0
 286 0008 FB71     		strb	r3, [r7, #7]
 297:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 287              		.loc 1 297 0
 288 000a 4FF00003 		mov	r3, #0
 289 000e FB60     		str	r3, [r7, #12]
 298:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 299:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 300:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_HSI_CALIBRATION_VALUE(HSICalibrationValue));
 301:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 302:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CR;
 290              		.loc 1 302 0
 291 0010 0A4B     		ldr	r3, .L14
 292 0012 1B68     		ldr	r3, [r3, #0]
 293 0014 FB60     		str	r3, [r7, #12]
 303:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 304:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear HSITRIM[4:0] bits */
 305:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CR_HSITRIM;
 294              		.loc 1 305 0
 295 0016 FB68     		ldr	r3, [r7, #12]
 296 0018 23F0F803 		bic	r3, r3, #248
 297 001c FB60     		str	r3, [r7, #12]
 306:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 307:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the HSITRIM[4:0] bits according to HSICalibrationValue value */
 308:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= (uint32_t)HSICalibrationValue << 3;
 298              		.loc 1 308 0
 299 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 300 0020 4FEAC303 		lsl	r3, r3, #3
 301 0024 FA68     		ldr	r2, [r7, #12]
 302 0026 1343     		orrs	r3, r3, r2
 303 0028 FB60     		str	r3, [r7, #12]
 309:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 310:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 311:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CR = tmpreg;
 304              		.loc 1 311 0
 305 002a 044B     		ldr	r3, .L14
 306 002c FA68     		ldr	r2, [r7, #12]
 307 002e 1A60     		str	r2, [r3, #0]
 312:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 308              		.loc 1 312 0
 309 0030 07F11407 		add	r7, r7, #20
 310 0034 BD46     		mov	sp, r7
 311 0036 80BC     		pop	{r7}
 312 0038 7047     		bx	lr
 313              	.L15:
 314 003a 00BF     		.align	2
 315              	.L14:
 316 003c 00100240 		.word	1073876992
 317              		.cfi_endproc
 318              	.LFE113:
 320              		.section	.text.RCC_HSICmd,"ax",%progbits
 321              		.align	2
 322              		.global	RCC_HSICmd
 323              		.thumb
 324              		.thumb_func
 326              	RCC_HSICmd:
 327              	.LFB114:
 313:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 314:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 315:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Internal High Speed oscillator (HSI).
 316:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the HSI, the application software should wait on 
 317:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         HSIRDY flag to be set indicating that HSI clock is stable and can
 318:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         be used to clock the PLL and/or system clock.
 319:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   HSI can not be stopped if it is used directly or through the PLL
 320:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         as system clock. In this case, you have to select another source 
 321:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         of the system clock then stop the HSI.
 322:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The HSI is stopped by hardware when entering STOP and STANDBY modes. 
 323:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   When the HSI is stopped, HSIRDY flag goes low after 6 HSI oscillator
 324:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         clock cycles.    
 325:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the HSI.
 326:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 327:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 328:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 329:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_HSICmd(FunctionalState NewState)
 330:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 328              		.loc 1 330 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 8
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333 0000 80B4     		push	{r7}
 334              	.LCFI11:
 335              		.cfi_def_cfa_offset 4
 336              		.cfi_offset 7, -4
 337 0002 83B0     		sub	sp, sp, #12
 338              	.LCFI12:
 339              		.cfi_def_cfa_offset 16
 340 0004 00AF     		add	r7, sp, #0
 341              	.LCFI13:
 342              		.cfi_def_cfa_register 7
 343 0006 0346     		mov	r3, r0
 344 0008 FB71     		strb	r3, [r7, #7]
 331:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 332:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
 333:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 334:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CR_HSION_BB = (uint32_t)NewState;
 345              		.loc 1 334 0
 346 000a 044B     		ldr	r3, .L17
 347 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 348 000e 1A60     		str	r2, [r3, #0]
 335:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 349              		.loc 1 335 0
 350 0010 07F10C07 		add	r7, r7, #12
 351 0014 BD46     		mov	sp, r7
 352 0016 80BC     		pop	{r7}
 353 0018 7047     		bx	lr
 354              	.L18:
 355 001a 00BF     		.align	2
 356              	.L17:
 357 001c 00004242 		.word	1111621632
 358              		.cfi_endproc
 359              	.LFE114:
 361              		.section	.text.RCC_LSEConfig,"ax",%progbits
 362              		.align	2
 363              		.global	RCC_LSEConfig
 364              		.thumb
 365              		.thumb_func
 367              	RCC_LSEConfig:
 368              	.LFB115:
 336:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 337:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 338:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE).
 339:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     As the LSE is in the Backup domain and write access is denied to this
 340:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           domain after reset, you have to enable write access using 
 341:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           PWR_BackupAccessCmd(ENABLE) function before to configure the LSE
 342:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           (to be done once after reset).
 343:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     After enabling the LSE (RCC_LSE_ON or RCC_LSE_Bypass), the application
 344:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           software should wait on LSERDY flag to be set indicating that LSE clock
 345:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           is stable and can be used to clock the RTC.
 346:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_LSE: specifies the new state of the LSE.
 347:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 348:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSE_OFF: turn OFF the LSE oscillator, LSERDY flag goes low after
 349:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                       6 LSE oscillator clock cycles.
 350:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSE_ON: turn ON the LSE oscillator
 351:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSE_Bypass: LSE oscillator bypassed with external clock
 352:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 353:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 354:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_LSEConfig(uint32_t RCC_LSE)
 355:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 369              		.loc 1 355 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 8
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374 0000 80B4     		push	{r7}
 375              	.LCFI14:
 376              		.cfi_def_cfa_offset 4
 377              		.cfi_offset 7, -4
 378 0002 83B0     		sub	sp, sp, #12
 379              	.LCFI15:
 380              		.cfi_def_cfa_offset 16
 381 0004 00AF     		add	r7, sp, #0
 382              	.LCFI16:
 383              		.cfi_def_cfa_register 7
 384 0006 7860     		str	r0, [r7, #4]
 356:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 357:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_LSE(RCC_LSE));
 358:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 359:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset LSEON and LSEBYP bits before configuring the LSE ------------------*/
 360:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset LSEON bit */
 361:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEON);
 385              		.loc 1 361 0
 386 0008 0B4B     		ldr	r3, .L20
 387 000a 0B4A     		ldr	r2, .L20
 388 000c 126A     		ldr	r2, [r2, #32]
 389 000e 22F00102 		bic	r2, r2, #1
 390 0012 1A62     		str	r2, [r3, #32]
 362:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 363:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Reset LSEBYP bit */
 364:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEBYP);
 391              		.loc 1 364 0
 392 0014 084B     		ldr	r3, .L20
 393 0016 084A     		ldr	r2, .L20
 394 0018 126A     		ldr	r2, [r2, #32]
 395 001a 22F00402 		bic	r2, r2, #4
 396 001e 1A62     		str	r2, [r3, #32]
 365:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 366:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Configure LSE */
 367:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR |= RCC_LSE;
 397              		.loc 1 367 0
 398 0020 054B     		ldr	r3, .L20
 399 0022 054A     		ldr	r2, .L20
 400 0024 116A     		ldr	r1, [r2, #32]
 401 0026 7A68     		ldr	r2, [r7, #4]
 402 0028 0A43     		orrs	r2, r2, r1
 403 002a 1A62     		str	r2, [r3, #32]
 368:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 404              		.loc 1 368 0
 405 002c 07F10C07 		add	r7, r7, #12
 406 0030 BD46     		mov	sp, r7
 407 0032 80BC     		pop	{r7}
 408 0034 7047     		bx	lr
 409              	.L21:
 410 0036 00BF     		.align	2
 411              	.L20:
 412 0038 00100240 		.word	1073876992
 413              		.cfi_endproc
 414              	.LFE115:
 416              		.section	.text.RCC_LSEDriveConfig,"ax",%progbits
 417              		.align	2
 418              		.global	RCC_LSEDriveConfig
 419              		.thumb
 420              		.thumb_func
 422              	RCC_LSEDriveConfig:
 423              	.LFB116:
 369:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 370:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 371:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the External Low Speed oscillator (LSE) drive capability.
 372:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_LSEDrive: specifies the new state of the LSE drive capability.
 373:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 374:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_Low: LSE oscillator low drive capability.
 375:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_MediumLow: LSE oscillator medium low drive capability.
 376:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_MediumHigh: LSE oscillator medium high drive capability.
 377:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_LSEDrive_High: LSE oscillator high drive capability.
 378:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 379:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 380:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_LSEDriveConfig(uint32_t RCC_LSEDrive)
 381:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 424              		.loc 1 381 0
 425              		.cfi_startproc
 426              		@ args = 0, pretend = 0, frame = 8
 427              		@ frame_needed = 1, uses_anonymous_args = 0
 428              		@ link register save eliminated.
 429 0000 80B4     		push	{r7}
 430              	.LCFI17:
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              	.LCFI18:
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              	.LCFI19:
 438              		.cfi_def_cfa_register 7
 439 0006 7860     		str	r0, [r7, #4]
 382:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 383:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_LSE_DRIVE(RCC_LSEDrive));
 384:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 385:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear LSEDRV[1:0] bits */
 386:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR &= ~(RCC_BDCR_LSEDRV);
 440              		.loc 1 386 0
 441 0008 084B     		ldr	r3, .L23
 442 000a 084A     		ldr	r2, .L23
 443 000c 126A     		ldr	r2, [r2, #32]
 444 000e 22F01802 		bic	r2, r2, #24
 445 0012 1A62     		str	r2, [r3, #32]
 387:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 388:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the LSE Drive */
 389:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR |= RCC_LSEDrive;
 446              		.loc 1 389 0
 447 0014 054B     		ldr	r3, .L23
 448 0016 054A     		ldr	r2, .L23
 449 0018 116A     		ldr	r1, [r2, #32]
 450 001a 7A68     		ldr	r2, [r7, #4]
 451 001c 0A43     		orrs	r2, r2, r1
 452 001e 1A62     		str	r2, [r3, #32]
 390:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 453              		.loc 1 390 0
 454 0020 07F10C07 		add	r7, r7, #12
 455 0024 BD46     		mov	sp, r7
 456 0026 80BC     		pop	{r7}
 457 0028 7047     		bx	lr
 458              	.L24:
 459 002a 00BF     		.align	2
 460              	.L23:
 461 002c 00100240 		.word	1073876992
 462              		.cfi_endproc
 463              	.LFE116:
 465              		.section	.text.RCC_LSICmd,"ax",%progbits
 466              		.align	2
 467              		.global	RCC_LSICmd
 468              		.thumb
 469              		.thumb_func
 471              	RCC_LSICmd:
 472              	.LFB117:
 391:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 392:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 393:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Internal Low Speed oscillator (LSI).  
 394:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the LSI, the application software should wait on 
 395:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         LSIRDY flag to be set indicating that LSI clock is stable and can
 396:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         be used to clock the IWDG and/or the RTC.
 397:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   LSI can not be disabled if the IWDG is running.  
 398:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   When the LSI is stopped, LSIRDY flag goes low after 6 LSI oscillator
 399:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         clock cycles.
 400:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the LSI.
 401:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE. 
 402:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 403:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 404:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_LSICmd(FunctionalState NewState)
 405:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 473              		.loc 1 405 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 8
 476              		@ frame_needed = 1, uses_anonymous_args = 0
 477              		@ link register save eliminated.
 478 0000 80B4     		push	{r7}
 479              	.LCFI20:
 480              		.cfi_def_cfa_offset 4
 481              		.cfi_offset 7, -4
 482 0002 83B0     		sub	sp, sp, #12
 483              	.LCFI21:
 484              		.cfi_def_cfa_offset 16
 485 0004 00AF     		add	r7, sp, #0
 486              	.LCFI22:
 487              		.cfi_def_cfa_register 7
 488 0006 0346     		mov	r3, r0
 489 0008 FB71     		strb	r3, [r7, #7]
 406:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 407:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
 408:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 409:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CSR_LSION_BB = (uint32_t)NewState;
 490              		.loc 1 409 0
 491 000a 044B     		ldr	r3, .L26
 492 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 493 000e 1A60     		str	r2, [r3, #0]
 410:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 494              		.loc 1 410 0
 495 0010 07F10C07 		add	r7, r7, #12
 496 0014 BD46     		mov	sp, r7
 497 0016 80BC     		pop	{r7}
 498 0018 7047     		bx	lr
 499              	.L27:
 500 001a 00BF     		.align	2
 501              	.L26:
 502 001c 80044242 		.word	1111622784
 503              		.cfi_endproc
 504              	.LFE117:
 506              		.section	.text.RCC_PLLConfig,"ax",%progbits
 507              		.align	2
 508              		.global	RCC_PLLConfig
 509              		.thumb
 510              		.thumb_func
 512              	RCC_PLLConfig:
 513              	.LFB118:
 411:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 412:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 413:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the PLL clock source and multiplication factor.
 414:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 415:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The minimum input clock frequency for PLL is 2 MHz (when using HSE as
 416:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLL source).   
 417:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PLLSource: specifies the PLL entry clock source.
 418:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 419:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_PLLSource_HSI_Div2: HSI oscillator clock divided by 2 selected as
 420:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLL clock entry
 421:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_PLLSource_PREDIV1: PREDIV1 clock selected as PLL clock source              
 422:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PLLMul: specifies the PLL multiplication factor, which drive the PLLVCO clock
 423:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be RCC_PLLMul_x where x:[2,16] 
 424:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                               
 425:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 426:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 427:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PLLConfig(uint32_t RCC_PLLSource, uint32_t RCC_PLLMul)
 428:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 514              		.loc 1 428 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 8
 517              		@ frame_needed = 1, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519 0000 80B4     		push	{r7}
 520              	.LCFI23:
 521              		.cfi_def_cfa_offset 4
 522              		.cfi_offset 7, -4
 523 0002 83B0     		sub	sp, sp, #12
 524              	.LCFI24:
 525              		.cfi_def_cfa_offset 16
 526 0004 00AF     		add	r7, sp, #0
 527              	.LCFI25:
 528              		.cfi_def_cfa_register 7
 529 0006 7860     		str	r0, [r7, #4]
 530 0008 3960     		str	r1, [r7, #0]
 429:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 430:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_PLL_SOURCE(RCC_PLLSource));
 431:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_PLL_MUL(RCC_PLLMul));
 432:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 433:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PLL Source [16] and Multiplier [21:18] bits */
 434:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR &= ~(RCC_CFGR_PLLMULL | RCC_CFGR_PLLSRC);
 531              		.loc 1 434 0
 532 000a 094B     		ldr	r3, .L29
 533 000c 084A     		ldr	r2, .L29
 534 000e 5268     		ldr	r2, [r2, #4]
 535 0010 22F47412 		bic	r2, r2, #3997696
 536 0014 5A60     		str	r2, [r3, #4]
 435:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 436:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the PLL Source and Multiplier */
 437:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR |= (uint32_t)(RCC_PLLSource | RCC_PLLMul);
 537              		.loc 1 437 0
 538 0016 064B     		ldr	r3, .L29
 539 0018 054A     		ldr	r2, .L29
 540 001a 5168     		ldr	r1, [r2, #4]
 541 001c 7868     		ldr	r0, [r7, #4]
 542 001e 3A68     		ldr	r2, [r7, #0]
 543 0020 0243     		orrs	r2, r2, r0
 544 0022 0A43     		orrs	r2, r2, r1
 545 0024 5A60     		str	r2, [r3, #4]
 438:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 546              		.loc 1 438 0
 547 0026 07F10C07 		add	r7, r7, #12
 548 002a BD46     		mov	sp, r7
 549 002c 80BC     		pop	{r7}
 550 002e 7047     		bx	lr
 551              	.L30:
 552              		.align	2
 553              	.L29:
 554 0030 00100240 		.word	1073876992
 555              		.cfi_endproc
 556              	.LFE118:
 558              		.section	.text.RCC_PLLCmd,"ax",%progbits
 559              		.align	2
 560              		.global	RCC_PLLCmd
 561              		.thumb
 562              		.thumb_func
 564              	RCC_PLLCmd:
 565              	.LFB119:
 439:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 440:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 441:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the PLL.
 442:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After enabling the PLL, the application software should wait on 
 443:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         PLLRDY flag to be set indicating that PLL clock is stable and can
 444:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         be used as system clock source.
 445:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The PLL can not be disabled if it is used as system clock source
 446:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The PLL is disabled by hardware when entering STOP and STANDBY modes.    
 447:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the PLL.
 448:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
 449:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 450:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 451:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PLLCmd(FunctionalState NewState)
 452:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 566              		.loc 1 452 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 571 0000 80B4     		push	{r7}
 572              	.LCFI26:
 573              		.cfi_def_cfa_offset 4
 574              		.cfi_offset 7, -4
 575 0002 83B0     		sub	sp, sp, #12
 576              	.LCFI27:
 577              		.cfi_def_cfa_offset 16
 578 0004 00AF     		add	r7, sp, #0
 579              	.LCFI28:
 580              		.cfi_def_cfa_register 7
 581 0006 0346     		mov	r3, r0
 582 0008 FB71     		strb	r3, [r7, #7]
 453:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 454:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
 455:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 456:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CR_PLLON_BB = (uint32_t)NewState;
 583              		.loc 1 456 0
 584 000a 044B     		ldr	r3, .L32
 585 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 586 000e 1A60     		str	r2, [r3, #0]
 457:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 587              		.loc 1 457 0
 588 0010 07F10C07 		add	r7, r7, #12
 589 0014 BD46     		mov	sp, r7
 590 0016 80BC     		pop	{r7}
 591 0018 7047     		bx	lr
 592              	.L33:
 593 001a 00BF     		.align	2
 594              	.L32:
 595 001c 60004242 		.word	1111621728
 596              		.cfi_endproc
 597              	.LFE119:
 599              		.section	.text.RCC_PREDIV1Config,"ax",%progbits
 600              		.align	2
 601              		.global	RCC_PREDIV1Config
 602              		.thumb
 603              		.thumb_func
 605              	RCC_PREDIV1Config:
 606              	.LFB120:
 458:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 459:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 460:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the PREDIV1 division factor.
 461:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be used only when the PLL is disabled.
 462:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PREDIV1_Div: specifies the PREDIV1 clock division factor.
 463:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be RCC_PREDIV1_Divx where x:[1,16]
 464:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 465:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 466:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PREDIV1Config(uint32_t RCC_PREDIV1_Div)
 467:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 607              		.loc 1 467 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 16
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612 0000 80B4     		push	{r7}
 613              	.LCFI29:
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 7, -4
 616 0002 85B0     		sub	sp, sp, #20
 617              	.LCFI30:
 618              		.cfi_def_cfa_offset 24
 619 0004 00AF     		add	r7, sp, #0
 620              	.LCFI31:
 621              		.cfi_def_cfa_register 7
 622 0006 7860     		str	r0, [r7, #4]
 468:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 623              		.loc 1 468 0
 624 0008 4FF00003 		mov	r3, #0
 625 000c FB60     		str	r3, [r7, #12]
 469:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 470:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 471:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_PREDIV1(RCC_PREDIV1_Div));
 472:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 473:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR2;
 626              		.loc 1 473 0
 627 000e 094B     		ldr	r3, .L35
 628 0010 DB6A     		ldr	r3, [r3, #44]
 629 0012 FB60     		str	r3, [r7, #12]
 474:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PREDIV1[3:0] bits */
 475:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~(RCC_CFGR2_PREDIV1);
 630              		.loc 1 475 0
 631 0014 FB68     		ldr	r3, [r7, #12]
 632 0016 23F00F03 		bic	r3, r3, #15
 633 001a FB60     		str	r3, [r7, #12]
 476:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 477:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set the PREDIV1 division factor */
 478:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_PREDIV1_Div;
 634              		.loc 1 478 0
 635 001c FA68     		ldr	r2, [r7, #12]
 636 001e 7B68     		ldr	r3, [r7, #4]
 637 0020 1343     		orrs	r3, r3, r2
 638 0022 FB60     		str	r3, [r7, #12]
 479:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 480:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 481:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR2 = tmpreg;
 639              		.loc 1 481 0
 640 0024 034B     		ldr	r3, .L35
 641 0026 FA68     		ldr	r2, [r7, #12]
 642 0028 DA62     		str	r2, [r3, #44]
 482:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 643              		.loc 1 482 0
 644 002a 07F11407 		add	r7, r7, #20
 645 002e BD46     		mov	sp, r7
 646 0030 80BC     		pop	{r7}
 647 0032 7047     		bx	lr
 648              	.L36:
 649              		.align	2
 650              	.L35:
 651 0034 00100240 		.word	1073876992
 652              		.cfi_endproc
 653              	.LFE120:
 655              		.section	.text.RCC_ClockSecuritySystemCmd,"ax",%progbits
 656              		.align	2
 657              		.global	RCC_ClockSecuritySystemCmd
 658              		.thumb
 659              		.thumb_func
 661              	RCC_ClockSecuritySystemCmd:
 662              	.LFB121:
 483:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 484:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 485:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Clock Security System.
 486:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 487:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 488:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 489:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 490:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 491:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the Clock Security System.
 492:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
 493:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 494:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 495:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ClockSecuritySystemCmd(FunctionalState NewState)
 496:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 663              		.loc 1 496 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 8
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 668 0000 80B4     		push	{r7}
 669              	.LCFI32:
 670              		.cfi_def_cfa_offset 4
 671              		.cfi_offset 7, -4
 672 0002 83B0     		sub	sp, sp, #12
 673              	.LCFI33:
 674              		.cfi_def_cfa_offset 16
 675 0004 00AF     		add	r7, sp, #0
 676              	.LCFI34:
 677              		.cfi_def_cfa_register 7
 678 0006 0346     		mov	r3, r0
 679 0008 FB71     		strb	r3, [r7, #7]
 497:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 498:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
 499:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 500:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CR_CSSON_BB = (uint32_t)NewState;
 680              		.loc 1 500 0
 681 000a 044B     		ldr	r3, .L38
 682 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 683 000e 1A60     		str	r2, [r3, #0]
 501:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 684              		.loc 1 501 0
 685 0010 07F10C07 		add	r7, r7, #12
 686 0014 BD46     		mov	sp, r7
 687 0016 80BC     		pop	{r7}
 688 0018 7047     		bx	lr
 689              	.L39:
 690 001a 00BF     		.align	2
 691              	.L38:
 692 001c 4C004242 		.word	1111621708
 693              		.cfi_endproc
 694              	.LFE121:
 696              		.section	.text.RCC_MCOConfig,"ax",%progbits
 697              		.align	2
 698              		.global	RCC_MCOConfig
 699              		.thumb
 700              		.thumb_func
 702              	RCC_MCOConfig:
 703              	.LFB122:
 502:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 503:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 504:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Selects the clock source to output on MCO pin (PA8).
 505:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   PA8 should be configured in alternate function mode.
 506:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The MCOF flag is set once the MCO clock source switch is effective.      
 507:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_MCOSource: specifies the clock source to output.
 508:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 509:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_NoClock: No clock selected.
 510:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_LSI: LSI oscillator clock selected.  
 511:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_LSE: LSE oscillator clock selected.  
 512:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_SYSCLK: System clock selected.
 513:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_HSI: HSI oscillator clock selected.  
 514:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_HSE: HSE oscillator clock selected.
 515:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_MCOSource_PLLCLK_Div2: PLL clock selected.
 516:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 517:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 518:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_MCOConfig(uint8_t RCC_MCOSource)
 519:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 704              		.loc 1 519 0
 705              		.cfi_startproc
 706              		@ args = 0, pretend = 0, frame = 8
 707              		@ frame_needed = 1, uses_anonymous_args = 0
 708              		@ link register save eliminated.
 709 0000 80B4     		push	{r7}
 710              	.LCFI35:
 711              		.cfi_def_cfa_offset 4
 712              		.cfi_offset 7, -4
 713 0002 83B0     		sub	sp, sp, #12
 714              	.LCFI36:
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              	.LCFI37:
 718              		.cfi_def_cfa_register 7
 719 0006 0346     		mov	r3, r0
 720 0008 FB71     		strb	r3, [r7, #7]
 520:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 521:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_MCO_SOURCE(RCC_MCOSource));
 522:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     
 523:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Select MCO clock source and prescaler */
 524:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CFGR_BYTE3_ADDRESS =  RCC_MCOSource; 
 721              		.loc 1 524 0
 722 000a 044B     		ldr	r3, .L41
 723 000c FA79     		ldrb	r2, [r7, #7]
 724 000e 1A70     		strb	r2, [r3, #0]
 525:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 725              		.loc 1 525 0
 726 0010 07F10C07 		add	r7, r7, #12
 727 0014 BD46     		mov	sp, r7
 728 0016 80BC     		pop	{r7}
 729 0018 7047     		bx	lr
 730              	.L42:
 731 001a 00BF     		.align	2
 732              	.L41:
 733 001c 07100240 		.word	1073876999
 734              		.cfi_endproc
 735              	.LFE122:
 737              		.section	.text.RCC_SYSCLKConfig,"ax",%progbits
 738              		.align	2
 739              		.global	RCC_SYSCLKConfig
 740              		.thumb
 741              		.thumb_func
 743              	RCC_SYSCLKConfig:
 744              	.LFB123:
 526:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 527:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 528:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @}
 529:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 530:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 531:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group2 System AHB, APB1 and APB2 busses clocks configuration functions
 532:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   System, AHB and APB busses clocks configuration functions
 533:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
 534:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
 535:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
 536:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ##### System, AHB, APB1 and APB2 busses clocks configuration functions #####
 537:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
 538:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] This section provide functions allowing to configure the System, AHB, APB1 and 
 539:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          APB2 busses clocks.
 540:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 541:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              HSE and PLL.
 542:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable prescaler
 543:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              and used to clock the CPU, memory and peripherals mapped on AHB bus (DMA and GPIO).
 544:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              APB1 (PCLK1) and APB2 (PCLK2) clocks are derived from AHB clock through 
 545:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              configurable prescalers and used to clock the peripherals mapped on these busses.
 546:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              You can use "RCC_GetClocksFreq()" function to retrieve the frequencies of these clocks
 547:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 548:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 72 MHz.
 549:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              Depending on the maximum frequency, the FLASH wait states (WS) should be 
 550:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              adapted accordingly:
 551:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         +---------------------------------+
 552:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |  Wait states  |   HCLK clock    |
 553:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |   (Latency)   | frequency (MHz) |
 554:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |-------------- |-----------------|             
 555:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |0WS(1CPU cycle)| 0 < HCLK <= 24  |
 556:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |---------------|-----------------| 
 557:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |1WS(2CPU cycle)|24 < HCLK <=48   |
 558:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |---------------|-----------------| 
 559:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         |2WS(3CPU cycle)|48 < HCLK <= 72  |
 560:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         +---------------------------------+
 561:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 562:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and 
 563:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              prefetch is disabled.
 564:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         [..]
 565:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (@) All the peripheral clocks are derived from the System clock (SYSCLK) 
 566:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              except:
 567:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The FLASH program/erase clock  which is always HSI 8MHz clock.
 568:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The USB 48 MHz clock which is derived from the PLL VCO clock.
 569:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 570:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The I2C clock which can be derived as well from HSI 8MHz clock.
 571:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The ADC clock which is derived from PLL output.
 572:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC 
 573:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                   (HSE divided by a programmable prescaler). The System clock (SYSCLK) 
 574:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                   frequency must be higher or equal to the RTC clock frequency.
 575:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (+@) IWDG clock which is always the LSI clock.
 576:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] It is recommended to use the following software sequences to tune the number
 577:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          of wait states needed to access the Flash memory with the CPU frequency (HCLK).
 578:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Increasing the CPU frequency
 579:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Program the Flash Prefetch buffer, using "FLASH_PrefetchBufferCmd(ENABLE)" 
 580:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  function
 581:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that Flash Prefetch buffer activation is taken into account by 
 582:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  reading FLASH_ACR using the FLASH_GetPrefetchBufferStatus() function
 583:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Program Flash WS to 1 or 2, using "FLASH_SetLatency()" function
 584:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new number of WS is taken into account by reading FLASH_ACR
 585:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Modify the CPU clock source, using "RCC_SYSCLKConfig()" function
 586:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) If needed, modify the CPU clock prescaler by using "RCC_HCLKConfig()" function
 587:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new CPU clock source is taken into account by reading 
 588:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  the clock source status, using "RCC_GetSYSCLKSource()" function 
 589:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (+) Decreasing the CPU frequency
 590:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Modify the CPU clock source, using "RCC_SYSCLKConfig()" function
 591:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) If needed, modify the CPU clock prescaler by using "RCC_HCLKConfig()" function
 592:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new CPU clock source is taken into account by reading 
 593:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  the clock source status, using "RCC_GetSYSCLKSource()" function
 594:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Program the new number of WS, using "FLASH_SetLatency()" function
 595:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that the new number of WS is taken into account by reading FLASH_ACR
 596:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Disable the Flash Prefetch buffer using "FLASH_PrefetchBufferCmd(DISABLE)" 
 597:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  function
 598:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             (++) Check that Flash Prefetch buffer deactivation is taken into account by reading FLA
 599:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****                  using the FLASH_GetPrefetchBufferStatus() function.
 600:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 601:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
 602:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
 603:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 604:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 605:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 606:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the system clock (SYSCLK).
 607:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The HSI is used (enabled by hardware) as system clock source after
 608:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           startup from Reset, wake-up from STOP and STANDBY mode, or in case
 609:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           of failure of the HSE used directly or indirectly as system clock
 610:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           (if the Clock Security System CSS is enabled).
 611:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     A switch from one clock source to another occurs only if the target
 612:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           clock source is ready (clock stable after startup delay or PLL locked). 
 613:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           If a clock source which is not yet ready is selected, the switch will
 614:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           occur when the clock source will be ready. 
 615:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           You can use RCC_GetSYSCLKSource() function to know which clock is
 616:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           currently used as system clock source.  
 617:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_SYSCLKSource: specifies the clock source used as system clock source 
 618:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 619:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSI:    HSI selected as system clock source
 620:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLKSource_HSE:    HSE selected as system clock source
 621:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLKSource_PLLCLK: PLL selected as system clock source
 622:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 623:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 624:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_SYSCLKConfig(uint32_t RCC_SYSCLKSource)
 625:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 745              		.loc 1 625 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 16
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 750 0000 80B4     		push	{r7}
 751              	.LCFI38:
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 7, -4
 754 0002 85B0     		sub	sp, sp, #20
 755              	.LCFI39:
 756              		.cfi_def_cfa_offset 24
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI40:
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 626:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 761              		.loc 1 626 0
 762 0008 4FF00003 		mov	r3, #0
 763 000c FB60     		str	r3, [r7, #12]
 627:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 628:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 629:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_SYSCLK_SOURCE(RCC_SYSCLKSource));
 630:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 631:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 764              		.loc 1 631 0
 765 000e 094B     		ldr	r3, .L44
 766 0010 5B68     		ldr	r3, [r3, #4]
 767 0012 FB60     		str	r3, [r7, #12]
 632:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 633:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear SW[1:0] bits */
 634:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_SW;
 768              		.loc 1 634 0
 769 0014 FB68     		ldr	r3, [r7, #12]
 770 0016 23F00303 		bic	r3, r3, #3
 771 001a FB60     		str	r3, [r7, #12]
 635:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 636:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set SW[1:0] bits according to RCC_SYSCLKSource value */
 637:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_SYSCLKSource;
 772              		.loc 1 637 0
 773 001c FA68     		ldr	r2, [r7, #12]
 774 001e 7B68     		ldr	r3, [r7, #4]
 775 0020 1343     		orrs	r3, r3, r2
 776 0022 FB60     		str	r3, [r7, #12]
 638:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 639:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 640:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 777              		.loc 1 640 0
 778 0024 034B     		ldr	r3, .L44
 779 0026 FA68     		ldr	r2, [r7, #12]
 780 0028 5A60     		str	r2, [r3, #4]
 641:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 781              		.loc 1 641 0
 782 002a 07F11407 		add	r7, r7, #20
 783 002e BD46     		mov	sp, r7
 784 0030 80BC     		pop	{r7}
 785 0032 7047     		bx	lr
 786              	.L45:
 787              		.align	2
 788              	.L44:
 789 0034 00100240 		.word	1073876992
 790              		.cfi_endproc
 791              	.LFE123:
 793              		.section	.text.RCC_GetSYSCLKSource,"ax",%progbits
 794              		.align	2
 795              		.global	RCC_GetSYSCLKSource
 796              		.thumb
 797              		.thumb_func
 799              	RCC_GetSYSCLKSource:
 800              	.LFB124:
 642:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 643:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 644:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Returns the clock source used as system clock.
 645:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
 646:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval The clock source used as system clock. The returned value can be one 
 647:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         of the following values:
 648:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *              - 0x00: HSI used as system clock
 649:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *              - 0x04: HSE used as system clock  
 650:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *              - 0x08: PLL used as system clock
 651:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 652:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** uint8_t RCC_GetSYSCLKSource(void)
 653:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 801              		.loc 1 653 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805              		@ link register save eliminated.
 806 0000 80B4     		push	{r7}
 807              	.LCFI41:
 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 7, -4
 810 0002 00AF     		add	r7, sp, #0
 811              	.LCFI42:
 812              		.cfi_def_cfa_register 7
 654:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return ((uint8_t)(RCC->CFGR & RCC_CFGR_SWS));
 813              		.loc 1 654 0
 814 0004 044B     		ldr	r3, .L48
 815 0006 5B68     		ldr	r3, [r3, #4]
 816 0008 DBB2     		uxtb	r3, r3
 817 000a 03F00C03 		and	r3, r3, #12
 818 000e DBB2     		uxtb	r3, r3
 655:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 819              		.loc 1 655 0
 820 0010 1846     		mov	r0, r3
 821 0012 BD46     		mov	sp, r7
 822 0014 80BC     		pop	{r7}
 823 0016 7047     		bx	lr
 824              	.L49:
 825              		.align	2
 826              	.L48:
 827 0018 00100240 		.word	1073876992
 828              		.cfi_endproc
 829              	.LFE124:
 831              		.section	.text.RCC_HCLKConfig,"ax",%progbits
 832              		.align	2
 833              		.global	RCC_HCLKConfig
 834              		.thumb
 835              		.thumb_func
 837              	RCC_HCLKConfig:
 838              	.LFB125:
 656:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 657:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 658:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the AHB clock (HCLK).
 659:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 660:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         these bits to ensure that the system frequency does not exceed the
 661:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         maximum allowed frequency (for more details refer to section above
 662:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         "CPU, AHB and APB busses clocks configuration functions").
 663:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_SYSCLK: defines the AHB clock divider. This clock is derived from 
 664:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                     the system clock (SYSCLK).
 665:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 666:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div1:   AHB clock = SYSCLK
 667:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div2:   AHB clock = SYSCLK/2
 668:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div4:   AHB clock = SYSCLK/4
 669:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div8:   AHB clock = SYSCLK/8
 670:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div16:  AHB clock = SYSCLK/16
 671:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div64:  AHB clock = SYSCLK/64
 672:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div128: AHB clock = SYSCLK/128
 673:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div256: AHB clock = SYSCLK/256
 674:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_SYSCLK_Div512: AHB clock = SYSCLK/512
 675:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 676:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 677:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_HCLKConfig(uint32_t RCC_SYSCLK)
 678:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 839              		.loc 1 678 0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 16
 842              		@ frame_needed = 1, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 844 0000 80B4     		push	{r7}
 845              	.LCFI43:
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 7, -4
 848 0002 85B0     		sub	sp, sp, #20
 849              	.LCFI44:
 850              		.cfi_def_cfa_offset 24
 851 0004 00AF     		add	r7, sp, #0
 852              	.LCFI45:
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 679:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 855              		.loc 1 679 0
 856 0008 4FF00003 		mov	r3, #0
 857 000c FB60     		str	r3, [r7, #12]
 680:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 681:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 682:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_HCLK(RCC_SYSCLK));
 683:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 684:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 858              		.loc 1 684 0
 859 000e 094B     		ldr	r3, .L51
 860 0010 5B68     		ldr	r3, [r3, #4]
 861 0012 FB60     		str	r3, [r7, #12]
 685:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 686:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear HPRE[3:0] bits */
 687:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_HPRE;
 862              		.loc 1 687 0
 863 0014 FB68     		ldr	r3, [r7, #12]
 864 0016 23F0F003 		bic	r3, r3, #240
 865 001a FB60     		str	r3, [r7, #12]
 688:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 689:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set HPRE[3:0] bits according to RCC_SYSCLK value */
 690:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_SYSCLK;
 866              		.loc 1 690 0
 867 001c FA68     		ldr	r2, [r7, #12]
 868 001e 7B68     		ldr	r3, [r7, #4]
 869 0020 1343     		orrs	r3, r3, r2
 870 0022 FB60     		str	r3, [r7, #12]
 691:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 692:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 693:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 871              		.loc 1 693 0
 872 0024 034B     		ldr	r3, .L51
 873 0026 FA68     		ldr	r2, [r7, #12]
 874 0028 5A60     		str	r2, [r3, #4]
 694:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 875              		.loc 1 694 0
 876 002a 07F11407 		add	r7, r7, #20
 877 002e BD46     		mov	sp, r7
 878 0030 80BC     		pop	{r7}
 879 0032 7047     		bx	lr
 880              	.L52:
 881              		.align	2
 882              	.L51:
 883 0034 00100240 		.word	1073876992
 884              		.cfi_endproc
 885              	.LFE125:
 887              		.section	.text.RCC_PCLK1Config,"ax",%progbits
 888              		.align	2
 889              		.global	RCC_PCLK1Config
 890              		.thumb
 891              		.thumb_func
 893              	RCC_PCLK1Config:
 894              	.LFB126:
 695:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 696:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 697:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the Low Speed APB clock (PCLK1).
 698:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_HCLK: defines the APB1 clock divider. This clock is derived from 
 699:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the AHB clock (HCLK).
 700:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
 701:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div1: APB1 clock = HCLK
 702:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div2: APB1 clock = HCLK/2
 703:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div4: APB1 clock = HCLK/4
 704:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div8: APB1 clock = HCLK/8
 705:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_HCLK_Div16: APB1 clock = HCLK/16
 706:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 707:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 708:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PCLK1Config(uint32_t RCC_HCLK)
 709:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 895              		.loc 1 709 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 16
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 0000 80B4     		push	{r7}
 901              	.LCFI46:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 85B0     		sub	sp, sp, #20
 905              	.LCFI47:
 906              		.cfi_def_cfa_offset 24
 907 0004 00AF     		add	r7, sp, #0
 908              	.LCFI48:
 909              		.cfi_def_cfa_register 7
 910 0006 7860     		str	r0, [r7, #4]
 710:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 911              		.loc 1 710 0
 912 0008 4FF00003 		mov	r3, #0
 913 000c FB60     		str	r3, [r7, #12]
 711:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 712:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 713:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_PCLK(RCC_HCLK));
 714:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 715:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 914              		.loc 1 715 0
 915 000e 094B     		ldr	r3, .L54
 916 0010 5B68     		ldr	r3, [r3, #4]
 917 0012 FB60     		str	r3, [r7, #12]
 716:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PPRE1[2:0] bits */
 717:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE1;
 918              		.loc 1 717 0
 919 0014 FB68     		ldr	r3, [r7, #12]
 920 0016 23F4E063 		bic	r3, r3, #1792
 921 001a FB60     		str	r3, [r7, #12]
 718:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 719:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set PPRE1[2:0] bits according to RCC_HCLK value */
 720:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_HCLK;
 922              		.loc 1 720 0
 923 001c FA68     		ldr	r2, [r7, #12]
 924 001e 7B68     		ldr	r3, [r7, #4]
 925 0020 1343     		orrs	r3, r3, r2
 926 0022 FB60     		str	r3, [r7, #12]
 721:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 722:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 723:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 927              		.loc 1 723 0
 928 0024 034B     		ldr	r3, .L54
 929 0026 FA68     		ldr	r2, [r7, #12]
 930 0028 5A60     		str	r2, [r3, #4]
 724:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 931              		.loc 1 724 0
 932 002a 07F11407 		add	r7, r7, #20
 933 002e BD46     		mov	sp, r7
 934 0030 80BC     		pop	{r7}
 935 0032 7047     		bx	lr
 936              	.L55:
 937              		.align	2
 938              	.L54:
 939 0034 00100240 		.word	1073876992
 940              		.cfi_endproc
 941              	.LFE126:
 943              		.section	.text.RCC_PCLK2Config,"ax",%progbits
 944              		.align	2
 945              		.global	RCC_PCLK2Config
 946              		.thumb
 947              		.thumb_func
 949              	RCC_PCLK2Config:
 950              	.LFB127:
 725:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 726:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 727:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the High Speed APB clock (PCLK2).
 728:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_HCLK: defines the APB2 clock divider. This clock is derived from 
 729:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the AHB clock (HCLK).
 730:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be one of the following values:
 731:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div1: APB2 clock = HCLK
 732:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div2: APB2 clock = HCLK/2
 733:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div4: APB2 clock = HCLK/4
 734:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div8: APB2 clock = HCLK/8
 735:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             @arg RCC_HCLK_Div16: APB2 clock = HCLK/16
 736:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 737:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 738:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_PCLK2Config(uint32_t RCC_HCLK)
 739:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 951              		.loc 1 739 0
 952              		.cfi_startproc
 953              		@ args = 0, pretend = 0, frame = 16
 954              		@ frame_needed = 1, uses_anonymous_args = 0
 955              		@ link register save eliminated.
 956 0000 80B4     		push	{r7}
 957              	.LCFI49:
 958              		.cfi_def_cfa_offset 4
 959              		.cfi_offset 7, -4
 960 0002 85B0     		sub	sp, sp, #20
 961              	.LCFI50:
 962              		.cfi_def_cfa_offset 24
 963 0004 00AF     		add	r7, sp, #0
 964              	.LCFI51:
 965              		.cfi_def_cfa_register 7
 966 0006 7860     		str	r0, [r7, #4]
 740:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmpreg = 0;
 967              		.loc 1 740 0
 968 0008 4FF00003 		mov	r3, #0
 969 000c FB60     		str	r3, [r7, #12]
 741:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 742:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
 743:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_PCLK(RCC_HCLK));
 744:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 745:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg = RCC->CFGR;
 970              		.loc 1 745 0
 971 000e 0A4B     		ldr	r3, .L57
 972 0010 5B68     		ldr	r3, [r3, #4]
 973 0012 FB60     		str	r3, [r7, #12]
 746:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear PPRE2[2:0] bits */
 747:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg &= ~RCC_CFGR_PPRE2;
 974              		.loc 1 747 0
 975 0014 FB68     		ldr	r3, [r7, #12]
 976 0016 23F46053 		bic	r3, r3, #14336
 977 001a FB60     		str	r3, [r7, #12]
 748:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set PPRE2[2:0] bits according to RCC_HCLK value */
 749:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmpreg |= RCC_HCLK << 3;
 978              		.loc 1 749 0
 979 001c 7B68     		ldr	r3, [r7, #4]
 980 001e 4FEAC303 		lsl	r3, r3, #3
 981 0022 FA68     		ldr	r2, [r7, #12]
 982 0024 1343     		orrs	r3, r3, r2
 983 0026 FB60     		str	r3, [r7, #12]
 750:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Store the new value */
 751:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR = tmpreg;
 984              		.loc 1 751 0
 985 0028 034B     		ldr	r3, .L57
 986 002a FA68     		ldr	r2, [r7, #12]
 987 002c 5A60     		str	r2, [r3, #4]
 752:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 988              		.loc 1 752 0
 989 002e 07F11407 		add	r7, r7, #20
 990 0032 BD46     		mov	sp, r7
 991 0034 80BC     		pop	{r7}
 992 0036 7047     		bx	lr
 993              	.L58:
 994              		.align	2
 995              	.L57:
 996 0038 00100240 		.word	1073876992
 997              		.cfi_endproc
 998              	.LFE127:
 1000              		.section	.text.RCC_GetClocksFreq,"ax",%progbits
 1001              		.align	2
 1002              		.global	RCC_GetClocksFreq
 1003              		.thumb
 1004              		.thumb_func
 1006              	RCC_GetClocksFreq:
 1007              	.LFB128:
 753:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 754:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
 755:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Returns the frequencies of the System, AHB, APB2 and APB1 busses clocks.
 756:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * 
 757:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *  @note    This function returns the frequencies of :
 758:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           System, AHB, APB2 and APB1 busses clocks, ADC1/2/3/4 clocks, 
 759:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           USART1/2/3/4/5 clocks, I2C1/2 clocks and TIM1/8 Clocks.
 760:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                         
 761:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The frequency returned by this function is not the real frequency
 762:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           in the chip. It is calculated based on the predefined constant and
 763:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           the source selected by RCC_SYSCLKConfig().
 764:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                              
 765:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note      If SYSCLK source is HSI, function returns constant HSI_VALUE(*)
 766:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                              
 767:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note      If SYSCLK source is HSE, function returns constant HSE_VALUE(**)
 768:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                          
 769:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note      If SYSCLK source is PLL, function returns constant HSE_VALUE(**) 
 770:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             or HSI_VALUE(*) multiplied by the PLL factors.
 771:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         
 772:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f30x.h file (default value
 773:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 774:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *               in voltage and temperature, refer to RCC_AdjustHSICalibrationValue().   
 775:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *    
 776:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f30x.h file (default value
 777:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 778:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 779:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                return wrong result.
 780:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                
 781:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The result of this function could be not correct when using fractional
 782:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           value for HSE crystal.   
 783:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             
 784:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold 
 785:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the clocks frequencies. 
 786:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     
 787:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     This function can be used by the user application to compute the 
 788:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           baudrate for the communication peripherals or configure other parameters.
 789:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     Each time SYSCLK, HCLK, PCLK1 and/or PCLK2 clock changes, this function
 790:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           must be called to update the structure's field. Otherwise, any
 791:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           configuration based on this function will be incorrect.
 792:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *    
 793:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
 794:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
 795:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
 796:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1008              		.loc 1 796 0
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 40
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012              		@ link register save eliminated.
 1013 0000 80B4     		push	{r7}
 1014              	.LCFI52:
 1015              		.cfi_def_cfa_offset 4
 1016              		.cfi_offset 7, -4
 1017 0002 8BB0     		sub	sp, sp, #44
 1018              	.LCFI53:
 1019              		.cfi_def_cfa_offset 48
 1020 0004 00AF     		add	r7, sp, #0
 1021              	.LCFI54:
 1022              		.cfi_def_cfa_register 7
 1023 0006 7860     		str	r0, [r7, #4]
 797:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0, pllmull = 0, pllsource = 0, prediv1factor = 0, presc = 0, pllclk = 0;
 1024              		.loc 1 797 0
 1025 0008 4FF00003 		mov	r3, #0
 1026 000c 3B62     		str	r3, [r7, #32]
 1027 000e 4FF00003 		mov	r3, #0
 1028 0012 FB61     		str	r3, [r7, #28]
 1029 0014 4FF00003 		mov	r3, #0
 1030 0018 BB61     		str	r3, [r7, #24]
 1031 001a 4FF00003 		mov	r3, #0
 1032 001e 7B61     		str	r3, [r7, #20]
 1033 0020 4FF00003 		mov	r3, #0
 1034 0024 3B61     		str	r3, [r7, #16]
 1035 0026 4FF00003 		mov	r3, #0
 1036 002a 7B62     		str	r3, [r7, #36]
 798:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t apb2presc = 0, ahbpresc = 0;
 1037              		.loc 1 798 0
 1038 002c 4FF00003 		mov	r3, #0
 1039 0030 FB60     		str	r3, [r7, #12]
 1040 0032 4FF00003 		mov	r3, #0
 1041 0036 BB60     		str	r3, [r7, #8]
 799:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 800:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 801:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 1042              		.loc 1 801 0
 1043 0038 934B     		ldr	r3, .L100
 1044 003a 5B68     		ldr	r3, [r3, #4]
 1045 003c 03F00C03 		and	r3, r3, #12
 1046 0040 3B62     		str	r3, [r7, #32]
 802:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 803:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   switch (tmp)
 1047              		.loc 1 803 0
 1048 0042 3B6A     		ldr	r3, [r7, #32]
 1049 0044 042B     		cmp	r3, #4
 1050 0046 07D0     		beq	.L62
 1051 0048 082B     		cmp	r3, #8
 1052 004a 09D0     		beq	.L63
 1053 004c 002B     		cmp	r3, #0
 1054 004e 33D1     		bne	.L99
 1055              	.L61:
 804:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 805:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x00:  /* HSI used as system clock */
 806:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1056              		.loc 1 806 0
 1057 0050 7B68     		ldr	r3, [r7, #4]
 1058 0052 8E4A     		ldr	r2, .L100+4
 1059 0054 1A60     		str	r2, [r3, #0]
 807:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1060              		.loc 1 807 0
 1061 0056 33E0     		b	.L64
 1062              	.L62:
 808:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x04:  /* HSE used as system clock */
 809:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSE_VALUE;
 1063              		.loc 1 809 0
 1064 0058 7B68     		ldr	r3, [r7, #4]
 1065 005a 8C4A     		ldr	r2, .L100+4
 1066 005c 1A60     		str	r2, [r3, #0]
 810:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1067              		.loc 1 810 0
 1068 005e 2FE0     		b	.L64
 1069              	.L63:
 811:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x08:  /* PLL used as system clock */
 812:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       /* Get PLL clock source and multiplication factor ----------------------*/
 813:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       pllmull = RCC->CFGR & RCC_CFGR_PLLMULL;
 1070              		.loc 1 813 0
 1071 0060 894B     		ldr	r3, .L100
 1072 0062 5B68     		ldr	r3, [r3, #4]
 1073 0064 03F47013 		and	r3, r3, #3932160
 1074 0068 FB61     		str	r3, [r7, #28]
 814:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       pllsource = RCC->CFGR & RCC_CFGR_PLLSRC;
 1075              		.loc 1 814 0
 1076 006a 874B     		ldr	r3, .L100
 1077 006c 5B68     		ldr	r3, [r3, #4]
 1078 006e 03F48033 		and	r3, r3, #65536
 1079 0072 BB61     		str	r3, [r7, #24]
 815:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       pllmull = ( pllmull >> 18) + 2;
 1080              		.loc 1 815 0
 1081 0074 FB69     		ldr	r3, [r7, #28]
 1082 0076 4FEA9343 		lsr	r3, r3, #18
 1083 007a 03F10203 		add	r3, r3, #2
 1084 007e FB61     		str	r3, [r7, #28]
 816:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       
 817:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       if (pllsource == 0x00)
 1085              		.loc 1 817 0
 1086 0080 BB69     		ldr	r3, [r7, #24]
 1087 0082 002B     		cmp	r3, #0
 1088 0084 05D1     		bne	.L65
 818:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       {
 819:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         /* HSI oscillator clock divided by 2 selected as PLL clock entry */
 820:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         pllclk = (HSI_VALUE >> 1) * pllmull;
 1089              		.loc 1 820 0
 1090 0086 FB69     		ldr	r3, [r7, #28]
 1091 0088 814A     		ldr	r2, .L100+8
 1092 008a 02FB03F3 		mul	r3, r2, r3
 1093 008e 7B62     		str	r3, [r7, #36]
 1094 0090 0EE0     		b	.L66
 1095              	.L65:
 821:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       }
 822:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       else
 823:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       {
 824:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         prediv1factor = (RCC->CFGR2 & RCC_CFGR2_PREDIV1) + 1;
 1096              		.loc 1 824 0
 1097 0092 7D4B     		ldr	r3, .L100
 1098 0094 DB6A     		ldr	r3, [r3, #44]
 1099 0096 03F00F03 		and	r3, r3, #15
 1100 009a 03F10103 		add	r3, r3, #1
 1101 009e 7B61     		str	r3, [r7, #20]
 825:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         /* HSE oscillator clock selected as PREDIV1 clock entry */
 826:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****         pllclk = (HSE_VALUE / prediv1factor) * pllmull; 
 1102              		.loc 1 826 0
 1103 00a0 7A4A     		ldr	r2, .L100+4
 1104 00a2 7B69     		ldr	r3, [r7, #20]
 1105 00a4 B2FBF3F3 		udiv	r3, r2, r3
 1106 00a8 FA69     		ldr	r2, [r7, #28]
 1107 00aa 02FB03F3 		mul	r3, r2, r3
 1108 00ae 7B62     		str	r3, [r7, #36]
 1109              	.L66:
 827:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       }
 828:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = pllclk;      
 1110              		.loc 1 828 0
 1111 00b0 7B68     		ldr	r3, [r7, #4]
 1112 00b2 7A6A     		ldr	r2, [r7, #36]
 1113 00b4 1A60     		str	r2, [r3, #0]
 829:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1114              		.loc 1 829 0
 1115 00b6 03E0     		b	.L64
 1116              	.L99:
 830:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     default: /* HSI used as system clock */
 831:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC_Clocks->SYSCLK_Frequency = HSI_VALUE;
 1117              		.loc 1 831 0
 1118 00b8 7B68     		ldr	r3, [r7, #4]
 1119 00ba 744A     		ldr	r2, .L100+4
 1120 00bc 1A60     		str	r2, [r3, #0]
 832:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1121              		.loc 1 832 0
 1122 00be 00BF     		nop
 1123              	.L64:
 833:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 834:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* Compute HCLK, PCLK clocks frequencies -----------------------------------*/
 835:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get HCLK prescaler */
 836:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_HPRE;
 1124              		.loc 1 836 0
 1125 00c0 714B     		ldr	r3, .L100
 1126 00c2 5B68     		ldr	r3, [r3, #4]
 1127 00c4 03F0F003 		and	r3, r3, #240
 1128 00c8 3B62     		str	r3, [r7, #32]
 837:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 4;
 1129              		.loc 1 837 0
 1130 00ca 3B6A     		ldr	r3, [r7, #32]
 1131 00cc 4FEA1313 		lsr	r3, r3, #4
 1132 00d0 3B62     		str	r3, [r7, #32]
 838:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ahbpresc = APBAHBPrescTable[tmp]; 
 1133              		.loc 1 838 0
 1134 00d2 704A     		ldr	r2, .L100+12
 1135 00d4 3B6A     		ldr	r3, [r7, #32]
 1136 00d6 D318     		adds	r3, r2, r3
 1137 00d8 1B78     		ldrb	r3, [r3, #0]
 1138 00da DBB2     		uxtb	r3, r3
 1139 00dc BB60     		str	r3, [r7, #8]
 839:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* HCLK clock frequency */
 840:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> ahbpresc;
 1140              		.loc 1 840 0
 1141 00de 7B68     		ldr	r3, [r7, #4]
 1142 00e0 1A68     		ldr	r2, [r3, #0]
 1143 00e2 BB68     		ldr	r3, [r7, #8]
 1144 00e4 22FA03F2 		lsr	r2, r2, r3
 1145 00e8 7B68     		ldr	r3, [r7, #4]
 1146 00ea 5A60     		str	r2, [r3, #4]
 841:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 842:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get PCLK1 prescaler */
 843:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE1;
 1147              		.loc 1 843 0
 1148 00ec 664B     		ldr	r3, .L100
 1149 00ee 5B68     		ldr	r3, [r3, #4]
 1150 00f0 03F4E063 		and	r3, r3, #1792
 1151 00f4 3B62     		str	r3, [r7, #32]
 844:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 8;
 1152              		.loc 1 844 0
 1153 00f6 3B6A     		ldr	r3, [r7, #32]
 1154 00f8 4FEA1323 		lsr	r3, r3, #8
 1155 00fc 3B62     		str	r3, [r7, #32]
 845:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   presc = APBAHBPrescTable[tmp];
 1156              		.loc 1 845 0
 1157 00fe 654A     		ldr	r2, .L100+12
 1158 0100 3B6A     		ldr	r3, [r7, #32]
 1159 0102 D318     		adds	r3, r2, r3
 1160 0104 1B78     		ldrb	r3, [r3, #0]
 1161 0106 DBB2     		uxtb	r3, r3
 1162 0108 3B61     		str	r3, [r7, #16]
 846:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* PCLK1 clock frequency */
 847:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 1163              		.loc 1 847 0
 1164 010a 7B68     		ldr	r3, [r7, #4]
 1165 010c 5A68     		ldr	r2, [r3, #4]
 1166 010e 3B69     		ldr	r3, [r7, #16]
 1167 0110 22FA03F2 		lsr	r2, r2, r3
 1168 0114 7B68     		ldr	r3, [r7, #4]
 1169 0116 9A60     		str	r2, [r3, #8]
 848:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 849:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get PCLK2 prescaler */
 850:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR & RCC_CFGR_PPRE2;
 1170              		.loc 1 850 0
 1171 0118 5B4B     		ldr	r3, .L100
 1172 011a 5B68     		ldr	r3, [r3, #4]
 1173 011c 03F46053 		and	r3, r3, #14336
 1174 0120 3B62     		str	r3, [r7, #32]
 851:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 11;
 1175              		.loc 1 851 0
 1176 0122 3B6A     		ldr	r3, [r7, #32]
 1177 0124 4FEAD323 		lsr	r3, r3, #11
 1178 0128 3B62     		str	r3, [r7, #32]
 852:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   apb2presc = APBAHBPrescTable[tmp];
 1179              		.loc 1 852 0
 1180 012a 5A4A     		ldr	r2, .L100+12
 1181 012c 3B6A     		ldr	r3, [r7, #32]
 1182 012e D318     		adds	r3, r2, r3
 1183 0130 1B78     		ldrb	r3, [r3, #0]
 1184 0132 DBB2     		uxtb	r3, r3
 1185 0134 FB60     		str	r3, [r7, #12]
 853:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* PCLK2 clock frequency */
 854:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> apb2presc;
 1186              		.loc 1 854 0
 1187 0136 7B68     		ldr	r3, [r7, #4]
 1188 0138 5A68     		ldr	r2, [r3, #4]
 1189 013a FB68     		ldr	r3, [r7, #12]
 1190 013c 22FA03F2 		lsr	r2, r2, r3
 1191 0140 7B68     		ldr	r3, [r7, #4]
 1192 0142 DA60     		str	r2, [r3, #12]
 855:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 856:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get ADC12CLK prescaler */
 857:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR2 & RCC_CFGR2_ADCPRE12;
 1193              		.loc 1 857 0
 1194 0144 504B     		ldr	r3, .L100
 1195 0146 DB6A     		ldr	r3, [r3, #44]
 1196 0148 03F4F873 		and	r3, r3, #496
 1197 014c 3B62     		str	r3, [r7, #32]
 858:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 4;
 1198              		.loc 1 858 0
 1199 014e 3B6A     		ldr	r3, [r7, #32]
 1200 0150 4FEA1313 		lsr	r3, r3, #4
 1201 0154 3B62     		str	r3, [r7, #32]
 859:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   presc = ADCPrescTable[tmp];
 1202              		.loc 1 859 0
 1203 0156 504B     		ldr	r3, .L100+16
 1204 0158 3A6A     		ldr	r2, [r7, #32]
 1205 015a 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1206 015e 9BB2     		uxth	r3, r3
 1207 0160 3B61     		str	r3, [r7, #16]
 860:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((presc & 0x10) != 0)
 1208              		.loc 1 860 0
 1209 0162 3B69     		ldr	r3, [r7, #16]
 1210 0164 03F01003 		and	r3, r3, #16
 1211 0168 002B     		cmp	r3, #0
 1212 016a 06D0     		beq	.L67
 861:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 862:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      /* ADC12CLK clock frequency is derived from PLL clock */
 863:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC12CLK_Frequency = pllclk / presc;
 1213              		.loc 1 863 0
 1214 016c 7A6A     		ldr	r2, [r7, #36]
 1215 016e 3B69     		ldr	r3, [r7, #16]
 1216 0170 B2FBF3F2 		udiv	r2, r2, r3
 1217 0174 7B68     		ldr	r3, [r7, #4]
 1218 0176 1A61     		str	r2, [r3, #16]
 1219 0178 03E0     		b	.L68
 1220              	.L67:
 864:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 865:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 866:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 867:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    /* ADC12CLK clock frequency is AHB clock */
 868:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC12CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1221              		.loc 1 868 0
 1222 017a 7B68     		ldr	r3, [r7, #4]
 1223 017c 1A68     		ldr	r2, [r3, #0]
 1224 017e 7B68     		ldr	r3, [r7, #4]
 1225 0180 1A61     		str	r2, [r3, #16]
 1226              	.L68:
 869:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 870:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 871:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get ADC34CLK prescaler */
 872:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC->CFGR2 & RCC_CFGR2_ADCPRE34;
 1227              		.loc 1 872 0
 1228 0182 414B     		ldr	r3, .L100
 1229 0184 DB6A     		ldr	r3, [r3, #44]
 1230 0186 03F47853 		and	r3, r3, #15872
 1231 018a 3B62     		str	r3, [r7, #32]
 873:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = tmp >> 9;
 1232              		.loc 1 873 0
 1233 018c 3B6A     		ldr	r3, [r7, #32]
 1234 018e 4FEA5323 		lsr	r3, r3, #9
 1235 0192 3B62     		str	r3, [r7, #32]
 874:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   presc = ADCPrescTable[tmp];
 1236              		.loc 1 874 0
 1237 0194 404B     		ldr	r3, .L100+16
 1238 0196 3A6A     		ldr	r2, [r7, #32]
 1239 0198 33F81230 		ldrh	r3, [r3, r2, lsl #1]	@ movhi
 1240 019c 9BB2     		uxth	r3, r3
 1241 019e 3B61     		str	r3, [r7, #16]
 875:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((presc & 0x10) != 0)
 1242              		.loc 1 875 0
 1243 01a0 3B69     		ldr	r3, [r7, #16]
 1244 01a2 03F01003 		and	r3, r3, #16
 1245 01a6 002B     		cmp	r3, #0
 1246 01a8 06D0     		beq	.L69
 876:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 877:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      /* ADC34CLK clock frequency is derived from PLL clock */
 878:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC34CLK_Frequency = pllclk / presc;
 1247              		.loc 1 878 0
 1248 01aa 7A6A     		ldr	r2, [r7, #36]
 1249 01ac 3B69     		ldr	r3, [r7, #16]
 1250 01ae B2FBF3F2 		udiv	r2, r2, r3
 1251 01b2 7B68     		ldr	r3, [r7, #4]
 1252 01b4 5A61     		str	r2, [r3, #20]
 1253 01b6 03E0     		b	.L70
 1254              	.L69:
 879:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 880:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 881:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 882:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    /* ADC34CLK clock frequency is AHB clock */
 883:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      RCC_Clocks->ADC34CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1255              		.loc 1 883 0
 1256 01b8 7B68     		ldr	r3, [r7, #4]
 1257 01ba 1A68     		ldr	r2, [r3, #0]
 1258 01bc 7B68     		ldr	r3, [r7, #4]
 1259 01be 5A61     		str	r2, [r3, #20]
 1260              	.L70:
 884:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 885:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 886:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* I2C1CLK clock frequency */
 887:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_I2C1SW) != RCC_CFGR3_I2C1SW)
 1261              		.loc 1 887 0
 1262 01c0 314B     		ldr	r3, .L100
 1263 01c2 1B6B     		ldr	r3, [r3, #48]
 1264 01c4 03F01003 		and	r3, r3, #16
 1265 01c8 002B     		cmp	r3, #0
 1266 01ca 03D1     		bne	.L71
 888:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 889:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C1 Clock is HSI Osc. */
 890:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C1CLK_Frequency = HSI_VALUE;
 1267              		.loc 1 890 0
 1268 01cc 7B68     		ldr	r3, [r7, #4]
 1269 01ce 2F4A     		ldr	r2, .L100+4
 1270 01d0 9A61     		str	r2, [r3, #24]
 1271 01d2 03E0     		b	.L72
 1272              	.L71:
 891:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 892:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 893:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 894:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C1 Clock is System Clock */
 895:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C1CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1273              		.loc 1 895 0
 1274 01d4 7B68     		ldr	r3, [r7, #4]
 1275 01d6 1A68     		ldr	r2, [r3, #0]
 1276 01d8 7B68     		ldr	r3, [r7, #4]
 1277 01da 9A61     		str	r2, [r3, #24]
 1278              	.L72:
 896:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 897:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 898:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* I2C2CLK clock frequency */
 899:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_I2C2SW) != RCC_CFGR3_I2C2SW)
 1279              		.loc 1 899 0
 1280 01dc 2A4B     		ldr	r3, .L100
 1281 01de 1B6B     		ldr	r3, [r3, #48]
 1282 01e0 03F02003 		and	r3, r3, #32
 1283 01e4 002B     		cmp	r3, #0
 1284 01e6 03D1     		bne	.L73
 900:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 901:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C2 Clock is HSI Osc. */
 902:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C2CLK_Frequency = HSI_VALUE;
 1285              		.loc 1 902 0
 1286 01e8 7B68     		ldr	r3, [r7, #4]
 1287 01ea 284A     		ldr	r2, .L100+4
 1288 01ec DA61     		str	r2, [r3, #28]
 1289 01ee 03E0     		b	.L74
 1290              	.L73:
 903:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 904:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 905:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 906:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* I2C2 Clock is System Clock */
 907:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->I2C2CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1291              		.loc 1 907 0
 1292 01f0 7B68     		ldr	r3, [r7, #4]
 1293 01f2 1A68     		ldr	r2, [r3, #0]
 1294 01f4 7B68     		ldr	r3, [r7, #4]
 1295 01f6 DA61     		str	r2, [r3, #28]
 1296              	.L74:
 908:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 909:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 910:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM1CLK clock frequency */
 911:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if(((RCC->CFGR3 & RCC_CFGR3_TIM1SW) == RCC_CFGR3_TIM1SW)&& (RCC_Clocks->SYSCLK_Frequency == pllcl
 1297              		.loc 1 911 0
 1298 01f8 234B     		ldr	r3, .L100
 1299 01fa 1B6B     		ldr	r3, [r3, #48]
 1300 01fc 03F48073 		and	r3, r3, #256
 1301 0200 002B     		cmp	r3, #0
 1302 0202 0ED0     		beq	.L75
 1303              		.loc 1 911 0 is_stmt 0 discriminator 1
 1304 0204 7B68     		ldr	r3, [r7, #4]
 1305 0206 1A68     		ldr	r2, [r3, #0]
 1306 0208 7B6A     		ldr	r3, [r7, #36]
 1307 020a 9A42     		cmp	r2, r3
 1308 020c 09D1     		bne	.L75
 912:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   && (apb2presc == ahbpresc)) 
 1309              		.loc 1 912 0 is_stmt 1
 1310 020e FA68     		ldr	r2, [r7, #12]
 1311 0210 BB68     		ldr	r3, [r7, #8]
 1312 0212 9A42     		cmp	r2, r3
 1313 0214 05D1     		bne	.L75
 913:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 914:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM1 Clock is 2 * pllclk */
 915:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM1CLK_Frequency = pllclk * 2;
 1314              		.loc 1 915 0
 1315 0216 7B6A     		ldr	r3, [r7, #36]
 1316 0218 4FEA4302 		lsl	r2, r3, #1
 1317 021c 7B68     		ldr	r3, [r7, #4]
 1318 021e 1A62     		str	r2, [r3, #32]
 1319 0220 03E0     		b	.L76
 1320              	.L75:
 916:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 917:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 918:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 919:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM1 Clock is APB2 clock. */
 920:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM1CLK_Frequency = RCC_Clocks->PCLK2_Frequency;
 1321              		.loc 1 920 0
 1322 0222 7B68     		ldr	r3, [r7, #4]
 1323 0224 DA68     		ldr	r2, [r3, #12]
 1324 0226 7B68     		ldr	r3, [r7, #4]
 1325 0228 1A62     		str	r2, [r3, #32]
 1326              	.L76:
 921:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 922:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 923:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM8CLK clock frequency */
 924:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if(((RCC->CFGR3 & RCC_CFGR3_TIM8SW) == RCC_CFGR3_TIM8SW)&& (RCC_Clocks->SYSCLK_Frequency == pllcl
 1327              		.loc 1 924 0
 1328 022a 174B     		ldr	r3, .L100
 1329 022c 1B6B     		ldr	r3, [r3, #48]
 1330 022e 03F40073 		and	r3, r3, #512
 1331 0232 002B     		cmp	r3, #0
 1332 0234 0ED0     		beq	.L77
 1333              		.loc 1 924 0 is_stmt 0 discriminator 1
 1334 0236 7B68     		ldr	r3, [r7, #4]
 1335 0238 1A68     		ldr	r2, [r3, #0]
 1336 023a 7B6A     		ldr	r3, [r7, #36]
 1337 023c 9A42     		cmp	r2, r3
 1338 023e 09D1     		bne	.L77
 925:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   && (apb2presc == ahbpresc))
 1339              		.loc 1 925 0 is_stmt 1
 1340 0240 FA68     		ldr	r2, [r7, #12]
 1341 0242 BB68     		ldr	r3, [r7, #8]
 1342 0244 9A42     		cmp	r2, r3
 1343 0246 05D1     		bne	.L77
 926:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 927:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM8 Clock is 2 * pllclk */
 928:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM8CLK_Frequency = pllclk * 2;
 1344              		.loc 1 928 0
 1345 0248 7B6A     		ldr	r3, [r7, #36]
 1346 024a 4FEA4302 		lsl	r2, r3, #1
 1347 024e 7B68     		ldr	r3, [r7, #4]
 1348 0250 5A62     		str	r2, [r3, #36]
 1349 0252 03E0     		b	.L78
 1350              	.L77:
 929:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 930:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
 931:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 932:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* TIM8 Clock is APB2 clock. */
 933:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->TIM8CLK_Frequency = RCC_Clocks->PCLK2_Frequency;
 1351              		.loc 1 933 0
 1352 0254 7B68     		ldr	r3, [r7, #4]
 1353 0256 DA68     		ldr	r2, [r3, #12]
 1354 0258 7B68     		ldr	r3, [r7, #4]
 1355 025a 5A62     		str	r2, [r3, #36]
 1356              	.L78:
 934:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 935:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
 936:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* USART1CLK clock frequency */
 937:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == 0x0)
 1357              		.loc 1 937 0
 1358 025c 0A4B     		ldr	r3, .L100
 1359 025e 1B6B     		ldr	r3, [r3, #48]
 1360 0260 03F00303 		and	r3, r3, #3
 1361 0264 002B     		cmp	r3, #0
 1362 0266 04D1     		bne	.L79
 938:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 939:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
 940:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = RCC_Clocks->PCLK2_Frequency;
 1363              		.loc 1 940 0
 1364 0268 7B68     		ldr	r3, [r7, #4]
 1365 026a DA68     		ldr	r2, [r3, #12]
 1366 026c 7B68     		ldr	r3, [r7, #4]
 1367 026e 9A62     		str	r2, [r3, #40]
 1368 0270 28E0     		b	.L80
 1369              	.L79:
 941:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 942:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW_0)
 1370              		.loc 1 942 0
 1371 0272 054B     		ldr	r3, .L100
 1372 0274 1B6B     		ldr	r3, [r3, #48]
 1373 0276 03F00303 		and	r3, r3, #3
 1374 027a 012B     		cmp	r3, #1
 1375 027c 0ED1     		bne	.L81
 943:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 944:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
 945:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1376              		.loc 1 945 0
 1377 027e 7B68     		ldr	r3, [r7, #4]
 1378 0280 1A68     		ldr	r2, [r3, #0]
 1379 0282 7B68     		ldr	r3, [r7, #4]
 1380 0284 9A62     		str	r2, [r3, #40]
 1381 0286 1DE0     		b	.L80
 1382              	.L101:
 1383              		.align	2
 1384              	.L100:
 1385 0288 00100240 		.word	1073876992
 1386 028c 00127A00 		.word	8000000
 1387 0290 00093D00 		.word	4000000
 1388 0294 00000000 		.word	APBAHBPrescTable
 1389 0298 00000000 		.word	ADCPrescTable
 1390              	.L81:
 946:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 947:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW_1)
 1391              		.loc 1 947 0
 1392 029c 664B     		ldr	r3, .L102
 1393 029e 1B6B     		ldr	r3, [r3, #48]
 1394 02a0 03F00303 		and	r3, r3, #3
 1395 02a4 022B     		cmp	r3, #2
 1396 02a6 04D1     		bne	.L82
 948:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 949:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
 950:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = LSE_VALUE;
 1397              		.loc 1 950 0
 1398 02a8 7B68     		ldr	r3, [r7, #4]
 1399 02aa 4FF40042 		mov	r2, #32768
 1400 02ae 9A62     		str	r2, [r3, #40]
 1401 02b0 08E0     		b	.L80
 1402              	.L82:
 951:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 952:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART1SW) == RCC_CFGR3_USART1SW)
 1403              		.loc 1 952 0
 1404 02b2 614B     		ldr	r3, .L102
 1405 02b4 1B6B     		ldr	r3, [r3, #48]
 1406 02b6 03F00303 		and	r3, r3, #3
 1407 02ba 032B     		cmp	r3, #3
 1408 02bc 02D1     		bne	.L80
 953:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 954:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
 955:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART1CLK_Frequency = HSI_VALUE;
 1409              		.loc 1 955 0
 1410 02be 7B68     		ldr	r3, [r7, #4]
 1411 02c0 5E4A     		ldr	r2, .L102+4
 1412 02c2 9A62     		str	r2, [r3, #40]
 1413              	.L80:
 956:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 957:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 958:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* USART2CLK clock frequency */
 959:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == 0x0)
 1414              		.loc 1 959 0
 1415 02c4 5C4B     		ldr	r3, .L102
 1416 02c6 1B6B     		ldr	r3, [r3, #48]
 1417 02c8 03F44033 		and	r3, r3, #196608
 1418 02cc 002B     		cmp	r3, #0
 1419 02ce 04D1     		bne	.L83
 960:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 961:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
 962:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1420              		.loc 1 962 0
 1421 02d0 7B68     		ldr	r3, [r7, #4]
 1422 02d2 9A68     		ldr	r2, [r3, #8]
 1423 02d4 7B68     		ldr	r3, [r7, #4]
 1424 02d6 DA62     		str	r2, [r3, #44]
 1425 02d8 21E0     		b	.L84
 1426              	.L83:
 963:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 964:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == RCC_CFGR3_USART2SW_0)
 1427              		.loc 1 964 0
 1428 02da 574B     		ldr	r3, .L102
 1429 02dc 1B6B     		ldr	r3, [r3, #48]
 1430 02de 03F44033 		and	r3, r3, #196608
 1431 02e2 B3F5803F 		cmp	r3, #65536
 1432 02e6 04D1     		bne	.L85
 965:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 966:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
 967:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1433              		.loc 1 967 0
 1434 02e8 7B68     		ldr	r3, [r7, #4]
 1435 02ea 1A68     		ldr	r2, [r3, #0]
 1436 02ec 7B68     		ldr	r3, [r7, #4]
 1437 02ee DA62     		str	r2, [r3, #44]
 1438 02f0 15E0     		b	.L84
 1439              	.L85:
 968:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 969:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == RCC_CFGR3_USART2SW_1)
 1440              		.loc 1 969 0
 1441 02f2 514B     		ldr	r3, .L102
 1442 02f4 1B6B     		ldr	r3, [r3, #48]
 1443 02f6 03F44033 		and	r3, r3, #196608
 1444 02fa B3F5003F 		cmp	r3, #131072
 1445 02fe 04D1     		bne	.L86
 970:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 971:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
 972:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = LSE_VALUE;
 1446              		.loc 1 972 0
 1447 0300 7B68     		ldr	r3, [r7, #4]
 1448 0302 4FF40042 		mov	r2, #32768
 1449 0306 DA62     		str	r2, [r3, #44]
 1450 0308 09E0     		b	.L84
 1451              	.L86:
 973:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 974:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART2SW) == RCC_CFGR3_USART2SW)
 1452              		.loc 1 974 0
 1453 030a 4B4B     		ldr	r3, .L102
 1454 030c 1B6B     		ldr	r3, [r3, #48]
 1455 030e 03F44033 		and	r3, r3, #196608
 1456 0312 B3F5403F 		cmp	r3, #196608
 1457 0316 02D1     		bne	.L84
 975:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 976:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
 977:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART2CLK_Frequency = HSI_VALUE;
 1458              		.loc 1 977 0
 1459 0318 7B68     		ldr	r3, [r7, #4]
 1460 031a 484A     		ldr	r2, .L102+4
 1461 031c DA62     		str	r2, [r3, #44]
 1462              	.L84:
 978:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }    
 979:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
 980:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* USART3CLK clock frequency */
 981:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == 0x0)
 1463              		.loc 1 981 0
 1464 031e 464B     		ldr	r3, .L102
 1465 0320 1B6B     		ldr	r3, [r3, #48]
 1466 0322 03F44023 		and	r3, r3, #786432
 1467 0326 002B     		cmp	r3, #0
 1468 0328 04D1     		bne	.L87
 982:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 983:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
 984:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1469              		.loc 1 984 0
 1470 032a 7B68     		ldr	r3, [r7, #4]
 1471 032c 9A68     		ldr	r2, [r3, #8]
 1472 032e 7B68     		ldr	r3, [r7, #4]
 1473 0330 1A63     		str	r2, [r3, #48]
 1474 0332 21E0     		b	.L88
 1475              	.L87:
 985:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 986:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == RCC_CFGR3_USART3SW_0)
 1476              		.loc 1 986 0
 1477 0334 404B     		ldr	r3, .L102
 1478 0336 1B6B     		ldr	r3, [r3, #48]
 1479 0338 03F44023 		and	r3, r3, #786432
 1480 033c B3F5802F 		cmp	r3, #262144
 1481 0340 04D1     		bne	.L89
 987:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 988:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
 989:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1482              		.loc 1 989 0
 1483 0342 7B68     		ldr	r3, [r7, #4]
 1484 0344 1A68     		ldr	r2, [r3, #0]
 1485 0346 7B68     		ldr	r3, [r7, #4]
 1486 0348 1A63     		str	r2, [r3, #48]
 1487 034a 15E0     		b	.L88
 1488              	.L89:
 990:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 991:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == RCC_CFGR3_USART3SW_1)
 1489              		.loc 1 991 0
 1490 034c 3A4B     		ldr	r3, .L102
 1491 034e 1B6B     		ldr	r3, [r3, #48]
 1492 0350 03F44023 		and	r3, r3, #786432
 1493 0354 B3F5002F 		cmp	r3, #524288
 1494 0358 04D1     		bne	.L90
 992:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 993:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
 994:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = LSE_VALUE;
 1495              		.loc 1 994 0
 1496 035a 7B68     		ldr	r3, [r7, #4]
 1497 035c 4FF40042 		mov	r2, #32768
 1498 0360 1A63     		str	r2, [r3, #48]
 1499 0362 09E0     		b	.L88
 1500              	.L90:
 995:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
 996:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_USART3SW) == RCC_CFGR3_USART3SW)
 1501              		.loc 1 996 0
 1502 0364 344B     		ldr	r3, .L102
 1503 0366 1B6B     		ldr	r3, [r3, #48]
 1504 0368 03F44023 		and	r3, r3, #786432
 1505 036c B3F5402F 		cmp	r3, #786432
 1506 0370 02D1     		bne	.L88
 997:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
 998:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
 999:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->USART3CLK_Frequency = HSI_VALUE;
 1507              		.loc 1 999 0
 1508 0372 7B68     		ldr	r3, [r7, #4]
 1509 0374 314A     		ldr	r2, .L102+4
 1510 0376 1A63     		str	r2, [r3, #48]
 1511              	.L88:
1000:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1001:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1002:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* UART4CLK clock frequency */
1003:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == 0x0)
 1512              		.loc 1 1003 0
 1513 0378 2F4B     		ldr	r3, .L102
 1514 037a 1B6B     		ldr	r3, [r3, #48]
 1515 037c 03F44013 		and	r3, r3, #3145728
 1516 0380 002B     		cmp	r3, #0
 1517 0382 04D1     		bne	.L91
1004:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1005:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
1006:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1518              		.loc 1 1006 0
 1519 0384 7B68     		ldr	r3, [r7, #4]
 1520 0386 9A68     		ldr	r2, [r3, #8]
 1521 0388 7B68     		ldr	r3, [r7, #4]
 1522 038a 5A63     		str	r2, [r3, #52]
 1523 038c 21E0     		b	.L92
 1524              	.L91:
1007:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1008:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == RCC_CFGR3_UART4SW_0)
 1525              		.loc 1 1008 0
 1526 038e 2A4B     		ldr	r3, .L102
 1527 0390 1B6B     		ldr	r3, [r3, #48]
 1528 0392 03F44013 		and	r3, r3, #3145728
 1529 0396 B3F5801F 		cmp	r3, #1048576
 1530 039a 04D1     		bne	.L93
1009:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1010:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
1011:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1531              		.loc 1 1011 0
 1532 039c 7B68     		ldr	r3, [r7, #4]
 1533 039e 1A68     		ldr	r2, [r3, #0]
 1534 03a0 7B68     		ldr	r3, [r7, #4]
 1535 03a2 5A63     		str	r2, [r3, #52]
 1536 03a4 15E0     		b	.L92
 1537              	.L93:
1012:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1013:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == RCC_CFGR3_UART4SW_1)
 1538              		.loc 1 1013 0
 1539 03a6 244B     		ldr	r3, .L102
 1540 03a8 1B6B     		ldr	r3, [r3, #48]
 1541 03aa 03F44013 		and	r3, r3, #3145728
 1542 03ae B3F5001F 		cmp	r3, #2097152
 1543 03b2 04D1     		bne	.L94
1014:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1015:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
1016:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = LSE_VALUE;
 1544              		.loc 1 1016 0
 1545 03b4 7B68     		ldr	r3, [r7, #4]
 1546 03b6 4FF40042 		mov	r2, #32768
 1547 03ba 5A63     		str	r2, [r3, #52]
 1548 03bc 09E0     		b	.L92
 1549              	.L94:
1017:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1018:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART4SW) == RCC_CFGR3_UART4SW)
 1550              		.loc 1 1018 0
 1551 03be 1E4B     		ldr	r3, .L102
 1552 03c0 1B6B     		ldr	r3, [r3, #48]
 1553 03c2 03F44013 		and	r3, r3, #3145728
 1554 03c6 B3F5401F 		cmp	r3, #3145728
 1555 03ca 02D1     		bne	.L92
1019:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1020:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
1021:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART4CLK_Frequency = HSI_VALUE;
 1556              		.loc 1 1021 0
 1557 03cc 7B68     		ldr	r3, [r7, #4]
 1558 03ce 1B4A     		ldr	r2, .L102+4
 1559 03d0 5A63     		str	r2, [r3, #52]
 1560              	.L92:
1022:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }   
1023:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1024:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* UART5CLK clock frequency */
1025:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == 0x0)
 1561              		.loc 1 1025 0
 1562 03d2 194B     		ldr	r3, .L102
 1563 03d4 1B6B     		ldr	r3, [r3, #48]
 1564 03d6 03F44003 		and	r3, r3, #12582912
 1565 03da 002B     		cmp	r3, #0
 1566 03dc 04D1     		bne	.L95
1026:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1027:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is PCLK */
1028:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = RCC_Clocks->PCLK1_Frequency;
 1567              		.loc 1 1028 0
 1568 03de 7B68     		ldr	r3, [r7, #4]
 1569 03e0 9A68     		ldr	r2, [r3, #8]
 1570 03e2 7B68     		ldr	r3, [r7, #4]
 1571 03e4 9A63     		str	r2, [r3, #56]
 1572 03e6 21E0     		b	.L59
 1573              	.L95:
1029:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1030:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == RCC_CFGR3_UART5SW_0)
 1574              		.loc 1 1030 0
 1575 03e8 134B     		ldr	r3, .L102
 1576 03ea 1B6B     		ldr	r3, [r3, #48]
 1577 03ec 03F44003 		and	r3, r3, #12582912
 1578 03f0 B3F5800F 		cmp	r3, #4194304
 1579 03f4 04D1     		bne	.L97
1031:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1032:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is System Clock */
1033:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = RCC_Clocks->SYSCLK_Frequency;
 1580              		.loc 1 1033 0
 1581 03f6 7B68     		ldr	r3, [r7, #4]
 1582 03f8 1A68     		ldr	r2, [r3, #0]
 1583 03fa 7B68     		ldr	r3, [r7, #4]
 1584 03fc 9A63     		str	r2, [r3, #56]
 1585 03fe 15E0     		b	.L59
 1586              	.L97:
1034:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1035:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == RCC_CFGR3_UART5SW_1)
 1587              		.loc 1 1035 0
 1588 0400 0D4B     		ldr	r3, .L102
 1589 0402 1B6B     		ldr	r3, [r3, #48]
 1590 0404 03F44003 		and	r3, r3, #12582912
 1591 0408 B3F5000F 		cmp	r3, #8388608
 1592 040c 04D1     		bne	.L98
1036:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1037:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is LSE Osc. */
1038:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = LSE_VALUE;
 1593              		.loc 1 1038 0
 1594 040e 7B68     		ldr	r3, [r7, #4]
 1595 0410 4FF40042 		mov	r2, #32768
 1596 0414 9A63     		str	r2, [r3, #56]
 1597 0416 09E0     		b	.L59
 1598              	.L98:
1039:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1040:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if((RCC->CFGR3 & RCC_CFGR3_UART5SW) == RCC_CFGR3_UART5SW)
 1599              		.loc 1 1040 0
 1600 0418 074B     		ldr	r3, .L102
 1601 041a 1B6B     		ldr	r3, [r3, #48]
 1602 041c 03F44003 		and	r3, r3, #12582912
 1603 0420 B3F5400F 		cmp	r3, #12582912
 1604 0424 02D1     		bne	.L59
1041:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1042:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* USART Clock is HSI Osc. */
1043:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC_Clocks->UART5CLK_Frequency = HSI_VALUE;
 1605              		.loc 1 1043 0
 1606 0426 7B68     		ldr	r3, [r7, #4]
 1607 0428 044A     		ldr	r2, .L102+4
 1608 042a 9A63     		str	r2, [r3, #56]
 1609              	.L59:
1044:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   } 
1045:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1610              		.loc 1 1045 0
 1611 042c 07F12C07 		add	r7, r7, #44
 1612 0430 BD46     		mov	sp, r7
 1613 0432 80BC     		pop	{r7}
 1614 0434 7047     		bx	lr
 1615              	.L103:
 1616 0436 00BF     		.align	2
 1617              	.L102:
 1618 0438 00100240 		.word	1073876992
 1619 043c 00127A00 		.word	8000000
 1620              		.cfi_endproc
 1621              	.LFE128:
 1623              		.section	.text.RCC_ADCCLKConfig,"ax",%progbits
 1624              		.align	2
 1625              		.global	RCC_ADCCLKConfig
 1626              		.thumb
 1627              		.thumb_func
 1629              	RCC_ADCCLKConfig:
 1630              	.LFB129:
1046:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1047:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1048:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @}
1049:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1050:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1051:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group3 Peripheral clocks configuration functions
1052:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   Peripheral clocks configuration functions 
1053:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
1054:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
1055:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
1056:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             ##### Peripheral clocks configuration functions #####
1057:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
1058:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     [..] This section provide functions allowing to configure the Peripheral clocks. 
1059:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) The RTC clock which is derived from the LSE, LSI or  HSE_Div32 
1060:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              (HSE divided by 32).
1061:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) After restart from Reset or wakeup from STANDBY, all peripherals are 
1062:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              off except internal SRAM, Flash and SWD. Before to start using 
1063:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              a peripheral you have to enable its interface clock. You can do this 
1064:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              using RCC_AHBPeriphClockCmd(), RCC_APB2PeriphClockCmd() 
1065:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              and RCC_APB1PeriphClockCmd() functions.
1066:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****          (#) To reset the peripherals configuration (to the default state after 
1067:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              device reset) you can use RCC_AHBPeriphResetCmd(), RCC_APB2PeriphResetCmd() 
1068:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****              and RCC_APB1PeriphResetCmd() functions.
1069:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
1070:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
1071:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1072:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1073:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1074:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the ADC clock (ADCCLK).
1075:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_PLLCLK: defines the ADC clock divider. This clock is derived from 
1076:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the PLL Clock.
1077:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1078:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_OFF: ADC12 clock disabled
1079:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div1: ADC12 clock = PLLCLK/1
1080:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div2: ADC12 clock = PLLCLK/2
1081:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div4: ADC12 clock = PLLCLK/4
1082:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div6: ADC12 clock = PLLCLK/6
1083:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div8: ADC12 clock = PLLCLK/8
1084:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div10: ADC12 clock = PLLCLK/10
1085:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div12: ADC12 clock = PLLCLK/12
1086:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div16: ADC12 clock = PLLCLK/16
1087:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div32: ADC12 clock = PLLCLK/32
1088:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div64: ADC12 clock = PLLCLK/64
1089:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div128: ADC12 clock = PLLCLK/128
1090:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC12PLLCLK_Div256: ADC12 clock = PLLCLK/256
1091:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_OFF: ADC34 clock disabled
1092:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div1: ADC34 clock = PLLCLK/1
1093:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div2: ADC34 clock = PLLCLK/2
1094:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div4: ADC34 clock = PLLCLK/4
1095:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div6: ADC34 clock = PLLCLK/6
1096:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div8: ADC34 clock = PLLCLK/8
1097:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div10: ADC34 clock = PLLCLK/10
1098:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div12: ADC34 clock = PLLCLK/12
1099:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div16: ADC34 clock = PLLCLK/16
1100:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div32: ADC34 clock = PLLCLK/32
1101:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div64: ADC34 clock = PLLCLK/64       
1102:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div128: ADC34 clock = PLLCLK/128                                  
1103:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_ADC34PLLCLK_Div256: ADC34 clock = PLLCLK/256
1104:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1105:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1106:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ADCCLKConfig(uint32_t RCC_PLLCLK)
1107:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1631              		.loc 1 1107 0
 1632              		.cfi_startproc
 1633              		@ args = 0, pretend = 0, frame = 16
 1634              		@ frame_needed = 1, uses_anonymous_args = 0
 1635              		@ link register save eliminated.
 1636 0000 80B4     		push	{r7}
 1637              	.LCFI55:
 1638              		.cfi_def_cfa_offset 4
 1639              		.cfi_offset 7, -4
 1640 0002 85B0     		sub	sp, sp, #20
 1641              	.LCFI56:
 1642              		.cfi_def_cfa_offset 24
 1643 0004 00AF     		add	r7, sp, #0
 1644              	.LCFI57:
 1645              		.cfi_def_cfa_register 7
 1646 0006 7860     		str	r0, [r7, #4]
1108:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1647              		.loc 1 1108 0
 1648 0008 4FF00003 		mov	r3, #0
 1649 000c FB60     		str	r3, [r7, #12]
1109:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1110:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1111:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_ADCCLK(RCC_PLLCLK));
1112:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1113:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_PLLCLK >> 28);
 1650              		.loc 1 1113 0
 1651 000e 7B68     		ldr	r3, [r7, #4]
 1652 0010 4FEA1373 		lsr	r3, r3, #28
 1653 0014 FB60     		str	r3, [r7, #12]
1114:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1115:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clears ADCPRE34 bits */
1116:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (tmp != 0)
 1654              		.loc 1 1116 0
 1655 0016 FB68     		ldr	r3, [r7, #12]
 1656 0018 002B     		cmp	r3, #0
 1657 001a 06D0     		beq	.L105
1117:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1118:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR2 &= ~RCC_CFGR2_ADCPRE34;
 1658              		.loc 1 1118 0
 1659 001c 0B4B     		ldr	r3, .L107
 1660 001e 0B4A     		ldr	r2, .L107
 1661 0020 D26A     		ldr	r2, [r2, #44]
 1662 0022 22F47852 		bic	r2, r2, #15872
 1663 0026 DA62     		str	r2, [r3, #44]
 1664 0028 05E0     		b	.L106
 1665              	.L105:
1119:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1120:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    /* Clears ADCPRE12 bits */
1121:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1122:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1123:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR2 &= ~RCC_CFGR2_ADCPRE12;
 1666              		.loc 1 1123 0
 1667 002a 084B     		ldr	r3, .L107
 1668 002c 074A     		ldr	r2, .L107
 1669 002e D26A     		ldr	r2, [r2, #44]
 1670 0030 22F4F872 		bic	r2, r2, #496
 1671 0034 DA62     		str	r2, [r3, #44]
 1672              	.L106:
1124:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1125:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set ADCPRE bits according to RCC_PLLCLK value */
1126:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR2 |= RCC_PLLCLK;
 1673              		.loc 1 1126 0
 1674 0036 054B     		ldr	r3, .L107
 1675 0038 044A     		ldr	r2, .L107
 1676 003a D16A     		ldr	r1, [r2, #44]
 1677 003c 7A68     		ldr	r2, [r7, #4]
 1678 003e 0A43     		orrs	r2, r2, r1
 1679 0040 DA62     		str	r2, [r3, #44]
1127:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1680              		.loc 1 1127 0
 1681 0042 07F11407 		add	r7, r7, #20
 1682 0046 BD46     		mov	sp, r7
 1683 0048 80BC     		pop	{r7}
 1684 004a 7047     		bx	lr
 1685              	.L108:
 1686              		.align	2
 1687              	.L107:
 1688 004c 00100240 		.word	1073876992
 1689              		.cfi_endproc
 1690              	.LFE129:
 1692              		.section	.text.RCC_I2CCLKConfig,"ax",%progbits
 1693              		.align	2
 1694              		.global	RCC_I2CCLKConfig
 1695              		.thumb
 1696              		.thumb_func
 1698              	RCC_I2CCLKConfig:
 1699              	.LFB130:
1128:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1129:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1130:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the I2C clock (I2CCLK).
1131:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_I2CCLK: defines the I2C clock source. This clock is derived 
1132:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         from the HSI or System clock.
1133:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1134:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_I2CxCLK_HSI: I2Cx clock = HSI
1135:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_I2CxCLK_SYSCLK: I2Cx clock = System Clock
1136:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          (x can be 1 or 2).  
1137:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1138:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1139:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_I2CCLKConfig(uint32_t RCC_I2CCLK)
1140:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** { 
 1700              		.loc 1 1140 0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 16
 1703              		@ frame_needed = 1, uses_anonymous_args = 0
 1704              		@ link register save eliminated.
 1705 0000 80B4     		push	{r7}
 1706              	.LCFI58:
 1707              		.cfi_def_cfa_offset 4
 1708              		.cfi_offset 7, -4
 1709 0002 85B0     		sub	sp, sp, #20
 1710              	.LCFI59:
 1711              		.cfi_def_cfa_offset 24
 1712 0004 00AF     		add	r7, sp, #0
 1713              	.LCFI60:
 1714              		.cfi_def_cfa_register 7
 1715 0006 7860     		str	r0, [r7, #4]
1141:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1716              		.loc 1 1141 0
 1717 0008 4FF00003 		mov	r3, #0
 1718 000c FB60     		str	r3, [r7, #12]
1142:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1143:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1144:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_I2CCLK(RCC_I2CCLK));
1145:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1146:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_I2CCLK >> 28);
 1719              		.loc 1 1146 0
 1720 000e 7B68     		ldr	r3, [r7, #4]
 1721 0010 4FEA1373 		lsr	r3, r3, #28
 1722 0014 FB60     		str	r3, [r7, #12]
1147:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1148:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear I2CSW bit */
1149:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (tmp != 0)
 1723              		.loc 1 1149 0
 1724 0016 FB68     		ldr	r3, [r7, #12]
 1725 0018 002B     		cmp	r3, #0
 1726 001a 06D0     		beq	.L110
1150:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1151:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_I2C2SW;
 1727              		.loc 1 1151 0
 1728 001c 0B4B     		ldr	r3, .L112
 1729 001e 0B4A     		ldr	r2, .L112
 1730 0020 126B     		ldr	r2, [r2, #48]
 1731 0022 22F02002 		bic	r2, r2, #32
 1732 0026 1A63     		str	r2, [r3, #48]
 1733 0028 05E0     		b	.L111
 1734              	.L110:
1152:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1153:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1154:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1155:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_I2C1SW;
 1735              		.loc 1 1155 0
 1736 002a 084B     		ldr	r3, .L112
 1737 002c 074A     		ldr	r2, .L112
 1738 002e 126B     		ldr	r2, [r2, #48]
 1739 0030 22F01002 		bic	r2, r2, #16
 1740 0034 1A63     		str	r2, [r3, #48]
 1741              	.L111:
1156:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1157:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set I2CSW bits according to RCC_I2CCLK value */
1158:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 |= RCC_I2CCLK;
 1742              		.loc 1 1158 0
 1743 0036 054B     		ldr	r3, .L112
 1744 0038 044A     		ldr	r2, .L112
 1745 003a 116B     		ldr	r1, [r2, #48]
 1746 003c 7A68     		ldr	r2, [r7, #4]
 1747 003e 0A43     		orrs	r2, r2, r1
 1748 0040 1A63     		str	r2, [r3, #48]
1159:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1749              		.loc 1 1159 0
 1750 0042 07F11407 		add	r7, r7, #20
 1751 0046 BD46     		mov	sp, r7
 1752 0048 80BC     		pop	{r7}
 1753 004a 7047     		bx	lr
 1754              	.L113:
 1755              		.align	2
 1756              	.L112:
 1757 004c 00100240 		.word	1073876992
 1758              		.cfi_endproc
 1759              	.LFE130:
 1761              		.section	.text.RCC_TIMCLKConfig,"ax",%progbits
 1762              		.align	2
 1763              		.global	RCC_TIMCLKConfig
 1764              		.thumb
 1765              		.thumb_func
 1767              	RCC_TIMCLKConfig:
 1768              	.LFB131:
1160:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1161:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1162:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the TIM1 and TIM8 clock sources(TIMCLK).
1163:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The configuration of the TIMx clock source is only possible when the 
1164:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           SYSCLK = PLL and HCLK and PCLK2 clocks are not divided in respect to SYSCLK
1165:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     If one of the previous conditions is missed, the TIM clock source 
1166:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           configuration is lost and calling again this function becomes mandatory.  
1167:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_TIMCLK: defines the TIMx clock source.
1168:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1169:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_TIMxCLK_HCLK: TIMx clock = APB high speed clock (doubled frequency
1170:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          when prescaled)
1171:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_TIMxCLK_PLLCLK: TIMx clock = PLL output (running up to 144 MHz)
1172:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          (x can be 1 or 8).
1173:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1174:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1175:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_TIMCLKConfig(uint32_t RCC_TIMCLK)
1176:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** { 
 1769              		.loc 1 1176 0
 1770              		.cfi_startproc
 1771              		@ args = 0, pretend = 0, frame = 16
 1772              		@ frame_needed = 1, uses_anonymous_args = 0
 1773              		@ link register save eliminated.
 1774 0000 80B4     		push	{r7}
 1775              	.LCFI61:
 1776              		.cfi_def_cfa_offset 4
 1777              		.cfi_offset 7, -4
 1778 0002 85B0     		sub	sp, sp, #20
 1779              	.LCFI62:
 1780              		.cfi_def_cfa_offset 24
 1781 0004 00AF     		add	r7, sp, #0
 1782              	.LCFI63:
 1783              		.cfi_def_cfa_register 7
 1784 0006 7860     		str	r0, [r7, #4]
1177:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1785              		.loc 1 1177 0
 1786 0008 4FF00003 		mov	r3, #0
 1787 000c FB60     		str	r3, [r7, #12]
1178:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1179:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1180:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_TIMCLK(RCC_TIMCLK));
1181:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1182:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_TIMCLK >> 28);
 1788              		.loc 1 1182 0
 1789 000e 7B68     		ldr	r3, [r7, #4]
 1790 0010 4FEA1373 		lsr	r3, r3, #28
 1791 0014 FB60     		str	r3, [r7, #12]
1183:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1184:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear I2CSW bit */
1185:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (tmp != 0)
 1792              		.loc 1 1185 0
 1793 0016 FB68     		ldr	r3, [r7, #12]
 1794 0018 002B     		cmp	r3, #0
 1795 001a 06D0     		beq	.L115
1186:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1187:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_TIM8SW;
 1796              		.loc 1 1187 0
 1797 001c 0B4B     		ldr	r3, .L117
 1798 001e 0B4A     		ldr	r2, .L117
 1799 0020 126B     		ldr	r2, [r2, #48]
 1800 0022 22F40072 		bic	r2, r2, #512
 1801 0026 1A63     		str	r2, [r3, #48]
 1802 0028 05E0     		b	.L116
 1803              	.L115:
1188:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1189:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1190:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1191:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->CFGR3 &= ~RCC_CFGR3_TIM1SW;
 1804              		.loc 1 1191 0
 1805 002a 084B     		ldr	r3, .L117
 1806 002c 074A     		ldr	r2, .L117
 1807 002e 126B     		ldr	r2, [r2, #48]
 1808 0030 22F48072 		bic	r2, r2, #256
 1809 0034 1A63     		str	r2, [r3, #48]
 1810              	.L116:
1192:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1193:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set I2CSW bits according to RCC_TIMCLK value */
1194:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 |= RCC_TIMCLK;
 1811              		.loc 1 1194 0
 1812 0036 054B     		ldr	r3, .L117
 1813 0038 044A     		ldr	r2, .L117
 1814 003a 116B     		ldr	r1, [r2, #48]
 1815 003c 7A68     		ldr	r2, [r7, #4]
 1816 003e 0A43     		orrs	r2, r2, r1
 1817 0040 1A63     		str	r2, [r3, #48]
1195:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1818              		.loc 1 1195 0
 1819 0042 07F11407 		add	r7, r7, #20
 1820 0046 BD46     		mov	sp, r7
 1821 0048 80BC     		pop	{r7}
 1822 004a 7047     		bx	lr
 1823              	.L118:
 1824              		.align	2
 1825              	.L117:
 1826 004c 00100240 		.word	1073876992
 1827              		.cfi_endproc
 1828              	.LFE131:
 1830              		.section	.text.RCC_USARTCLKConfig,"ax",%progbits
 1831              		.align	2
 1832              		.global	RCC_USARTCLKConfig
 1833              		.thumb
 1834              		.thumb_func
 1836              	RCC_USARTCLKConfig:
 1837              	.LFB132:
1196:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1197:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1198:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the USART clock (USARTCLK).
1199:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_USARTCLK: defines the USART clock source. This clock is derived 
1200:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         from the HSI or System clock.
1201:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1202:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_PCLK: USART clock = APB Clock (PCLK)
1203:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_SYSCLK: USART clock = System Clock
1204:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_LSE: USART clock = LSE Clock
1205:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USARTxCLK_HSI: USART clock = HSI Clock
1206:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          (x can be 1, 2, 3, 4 or 5).  
1207:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1208:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1209:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_USARTCLKConfig(uint32_t RCC_USARTCLK)
1210:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** { 
 1838              		.loc 1 1210 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 16
 1841              		@ frame_needed = 1, uses_anonymous_args = 0
 1842              		@ link register save eliminated.
 1843 0000 80B4     		push	{r7}
 1844              	.LCFI64:
 1845              		.cfi_def_cfa_offset 4
 1846              		.cfi_offset 7, -4
 1847 0002 85B0     		sub	sp, sp, #20
 1848              	.LCFI65:
 1849              		.cfi_def_cfa_offset 24
 1850 0004 00AF     		add	r7, sp, #0
 1851              	.LCFI66:
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
1211:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 1854              		.loc 1 1211 0
 1855 0008 4FF00003 		mov	r3, #0
 1856 000c FB60     		str	r3, [r7, #12]
1212:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1213:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1214:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_USARTCLK(RCC_USARTCLK));
1215:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1216:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = (RCC_USARTCLK >> 28);
 1857              		.loc 1 1216 0
 1858 000e 7B68     		ldr	r3, [r7, #4]
 1859 0010 4FEA1373 		lsr	r3, r3, #28
 1860 0014 FB60     		str	r3, [r7, #12]
1217:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1218:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Clear USARTSW[1:0] bit */
1219:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   switch (tmp)
 1861              		.loc 1 1219 0
 1862 0016 FB68     		ldr	r3, [r7, #12]
 1863 0018 03F1FF33 		add	r3, r3, #-1
 1864 001c 042B     		cmp	r3, #4
 1865 001e 30D8     		bhi	.L128
 1866 0020 01A2     		adr	r2, .L126
 1867 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1868 0026 00BF     		.align	2
 1869              	.L126:
 1870 0028 3D000000 		.word	.L121+1
 1871 002c 4B000000 		.word	.L122+1
 1872 0030 59000000 		.word	.L123+1
 1873 0034 67000000 		.word	.L124+1
 1874 0038 75000000 		.word	.L125+1
 1875              	.L121:
1220:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1221:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x01:  /* clear USART1SW */
1222:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_USART1SW;
 1876              		.loc 1 1222 0
 1877 003c 174B     		ldr	r3, .L129
 1878 003e 174A     		ldr	r2, .L129
 1879 0040 126B     		ldr	r2, [r2, #48]
 1880 0042 22F00302 		bic	r2, r2, #3
 1881 0046 1A63     		str	r2, [r3, #48]
1223:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1882              		.loc 1 1223 0
 1883 0048 1CE0     		b	.L127
 1884              	.L122:
1224:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x02:  /* clear USART2SW */
1225:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_USART2SW;
 1885              		.loc 1 1225 0
 1886 004a 144B     		ldr	r3, .L129
 1887 004c 134A     		ldr	r2, .L129
 1888 004e 126B     		ldr	r2, [r2, #48]
 1889 0050 22F44032 		bic	r2, r2, #196608
 1890 0054 1A63     		str	r2, [r3, #48]
1226:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1891              		.loc 1 1226 0
 1892 0056 15E0     		b	.L127
 1893              	.L123:
1227:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x03:  /* clear USART3SW */
1228:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_USART3SW;
 1894              		.loc 1 1228 0
 1895 0058 104B     		ldr	r3, .L129
 1896 005a 104A     		ldr	r2, .L129
 1897 005c 126B     		ldr	r2, [r2, #48]
 1898 005e 22F44022 		bic	r2, r2, #786432
 1899 0062 1A63     		str	r2, [r3, #48]
1229:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1900              		.loc 1 1229 0
 1901 0064 0EE0     		b	.L127
 1902              	.L124:
1230:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x04:  /* clear UART4SW */
1231:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_UART4SW;
 1903              		.loc 1 1231 0
 1904 0066 0D4B     		ldr	r3, .L129
 1905 0068 0C4A     		ldr	r2, .L129
 1906 006a 126B     		ldr	r2, [r2, #48]
 1907 006c 22F44012 		bic	r2, r2, #3145728
 1908 0070 1A63     		str	r2, [r3, #48]
1232:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1909              		.loc 1 1232 0
 1910 0072 07E0     		b	.L127
 1911              	.L125:
1233:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     case 0x05:  /* clear UART5SW */
1234:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       RCC->CFGR3 &= ~RCC_CFGR3_UART5SW;
 1912              		.loc 1 1234 0
 1913 0074 094B     		ldr	r3, .L129
 1914 0076 094A     		ldr	r2, .L129
 1915 0078 126B     		ldr	r2, [r2, #48]
 1916 007a 22F44002 		bic	r2, r2, #12582912
 1917 007e 1A63     		str	r2, [r3, #48]
1235:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1918              		.loc 1 1235 0
 1919 0080 00E0     		b	.L127
 1920              	.L128:
1236:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     default:
1237:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****       break;
 1921              		.loc 1 1237 0
 1922 0082 00BF     		nop
 1923              	.L127:
1238:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1239:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1240:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set USARTSW bits according to RCC_USARTCLK value */
1241:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CFGR3 |= RCC_USARTCLK;
 1924              		.loc 1 1241 0
 1925 0084 054B     		ldr	r3, .L129
 1926 0086 054A     		ldr	r2, .L129
 1927 0088 116B     		ldr	r1, [r2, #48]
 1928 008a 7A68     		ldr	r2, [r7, #4]
 1929 008c 0A43     		orrs	r2, r2, r1
 1930 008e 1A63     		str	r2, [r3, #48]
1242:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1931              		.loc 1 1242 0
 1932 0090 07F11407 		add	r7, r7, #20
 1933 0094 BD46     		mov	sp, r7
 1934 0096 80BC     		pop	{r7}
 1935 0098 7047     		bx	lr
 1936              	.L130:
 1937 009a 00BF     		.align	2
 1938              	.L129:
 1939 009c 00100240 		.word	1073876992
 1940              		.cfi_endproc
 1941              	.LFE132:
 1943              		.section	.text.RCC_USBCLKConfig,"ax",%progbits
 1944              		.align	2
 1945              		.global	RCC_USBCLKConfig
 1946              		.thumb
 1947              		.thumb_func
 1949              	RCC_USBCLKConfig:
 1950              	.LFB133:
1243:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1244:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1245:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the USB clock (USBCLK).
1246:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_USBCLKSource: specifies the USB clock source. This clock is 
1247:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   derived from the PLL output.
1248:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1249:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_1Div5: PLL clock divided by 1,5 selected as USB 
1250:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                     clock source
1251:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_USBCLKSource_PLLCLK_Div1: PLL clock selected as USB clock source
1252:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1253:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1254:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_USBCLKConfig(uint32_t RCC_USBCLKSource)
1255:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1951              		.loc 1 1255 0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 8
 1954              		@ frame_needed = 1, uses_anonymous_args = 0
 1955              		@ link register save eliminated.
 1956 0000 80B4     		push	{r7}
 1957              	.LCFI67:
 1958              		.cfi_def_cfa_offset 4
 1959              		.cfi_offset 7, -4
 1960 0002 83B0     		sub	sp, sp, #12
 1961              	.LCFI68:
 1962              		.cfi_def_cfa_offset 16
 1963 0004 00AF     		add	r7, sp, #0
 1964              	.LCFI69:
 1965              		.cfi_def_cfa_register 7
 1966 0006 7860     		str	r0, [r7, #4]
1256:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1257:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_USBCLK_SOURCE(RCC_USBCLKSource));
1258:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1259:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CFGR_USBPRE_BB = RCC_USBCLKSource;
 1967              		.loc 1 1259 0
 1968 0008 034B     		ldr	r3, .L132
 1969 000a 7A68     		ldr	r2, [r7, #4]
 1970 000c 1A60     		str	r2, [r3, #0]
1260:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 1971              		.loc 1 1260 0
 1972 000e 07F10C07 		add	r7, r7, #12
 1973 0012 BD46     		mov	sp, r7
 1974 0014 80BC     		pop	{r7}
 1975 0016 7047     		bx	lr
 1976              	.L133:
 1977              		.align	2
 1978              	.L132:
 1979 0018 D8004242 		.word	1111621848
 1980              		.cfi_endproc
 1981              	.LFE133:
 1983              		.section	.text.RCC_RTCCLKConfig,"ax",%progbits
 1984              		.align	2
 1985              		.global	RCC_RTCCLKConfig
 1986              		.thumb
 1987              		.thumb_func
 1989              	RCC_RTCCLKConfig:
 1990              	.LFB134:
1261:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1262:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1263:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the RTC clock (RTCCLK).
1264:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     As the RTC clock configuration bits are in the Backup domain and write
1265:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           access is denied to this domain after reset, you have to enable write
1266:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           access using PWR_BackupAccessCmd(ENABLE) function before to configure
1267:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           the RTC clock source (to be done once after reset).    
1268:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     Once the RTC clock is configured it can't be changed unless the RTC
1269:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           is reset using RCC_BackupResetCmd function, or by a Power On Reset (POR)
1270:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *             
1271:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_RTCCLKSource: specifies the RTC clock source.
1272:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1273:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSE: LSE selected as RTC clock
1274:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_RTCCLKSource_LSI: LSI selected as RTC clock
1275:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_RTCCLKSource_HSE_Div32: HSE divided by 32 selected as RTC clock
1276:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *       
1277:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     If the LSE or LSI is used as RTC clock source, the RTC continues to
1278:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           work in STOP and STANDBY modes, and can be used as wakeup source.
1279:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           However, when the HSE clock is used as RTC clock source, the RTC
1280:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           cannot be used in STOP and STANDBY modes.             
1281:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note     The maximum input clock frequency for RTC is 2MHz (when using HSE as
1282:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *           RTC clock source).             
1283:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1284:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1285:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_RTCCLKConfig(uint32_t RCC_RTCCLKSource)
1286:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 1991              		.loc 1 1286 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 8
 1994              		@ frame_needed = 1, uses_anonymous_args = 0
 1995              		@ link register save eliminated.
 1996 0000 80B4     		push	{r7}
 1997              	.LCFI70:
 1998              		.cfi_def_cfa_offset 4
 1999              		.cfi_offset 7, -4
 2000 0002 83B0     		sub	sp, sp, #12
 2001              	.LCFI71:
 2002              		.cfi_def_cfa_offset 16
 2003 0004 00AF     		add	r7, sp, #0
 2004              	.LCFI72:
 2005              		.cfi_def_cfa_register 7
 2006 0006 7860     		str	r0, [r7, #4]
1287:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1288:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_RTCCLK_SOURCE(RCC_RTCCLKSource));
1289:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1290:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Select the RTC clock source */
1291:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->BDCR |= RCC_RTCCLKSource;
 2007              		.loc 1 1291 0
 2008 0008 054B     		ldr	r3, .L135
 2009 000a 054A     		ldr	r2, .L135
 2010 000c 116A     		ldr	r1, [r2, #32]
 2011 000e 7A68     		ldr	r2, [r7, #4]
 2012 0010 0A43     		orrs	r2, r2, r1
 2013 0012 1A62     		str	r2, [r3, #32]
1292:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2014              		.loc 1 1292 0
 2015 0014 07F10C07 		add	r7, r7, #12
 2016 0018 BD46     		mov	sp, r7
 2017 001a 80BC     		pop	{r7}
 2018 001c 7047     		bx	lr
 2019              	.L136:
 2020 001e 00BF     		.align	2
 2021              	.L135:
 2022 0020 00100240 		.word	1073876992
 2023              		.cfi_endproc
 2024              	.LFE134:
 2026              		.section	.text.RCC_I2SCLKConfig,"ax",%progbits
 2027              		.align	2
 2028              		.global	RCC_I2SCLKConfig
 2029              		.thumb
 2030              		.thumb_func
 2032              	RCC_I2SCLKConfig:
 2033              	.LFB135:
1293:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1294:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1295:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Configures the I2S clock source (I2SCLK).
1296:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be called before enabling the SPI2 and SPI3 clocks.
1297:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_I2SCLKSource: specifies the I2S clock source.
1298:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *          This parameter can be one of the following values:
1299:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *            @arg RCC_I2S2CLKSource_SYSCLK: SYSCLK clock used as I2S clock source
1300:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *            @arg RCC_I2S2CLKSource_Ext: External clock mapped on the I2S_CKIN pin
1301:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *                                        used as I2S clock source
1302:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1303:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1304:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_I2SCLKConfig(uint32_t RCC_I2SCLKSource)
1305:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2034              		.loc 1 1305 0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 8
 2037              		@ frame_needed = 1, uses_anonymous_args = 0
 2038              		@ link register save eliminated.
 2039 0000 80B4     		push	{r7}
 2040              	.LCFI73:
 2041              		.cfi_def_cfa_offset 4
 2042              		.cfi_offset 7, -4
 2043 0002 83B0     		sub	sp, sp, #12
 2044              	.LCFI74:
 2045              		.cfi_def_cfa_offset 16
 2046 0004 00AF     		add	r7, sp, #0
 2047              	.LCFI75:
 2048              		.cfi_def_cfa_register 7
 2049 0006 7860     		str	r0, [r7, #4]
1306:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1307:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_I2SCLK_SOURCE(RCC_I2SCLKSource));
1308:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1309:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) CFGR_I2SSRC_BB = RCC_I2SCLKSource;
 2050              		.loc 1 1309 0
 2051 0008 034B     		ldr	r3, .L138
 2052 000a 7A68     		ldr	r2, [r7, #4]
 2053 000c 1A60     		str	r2, [r3, #0]
1310:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2054              		.loc 1 1310 0
 2055 000e 07F10C07 		add	r7, r7, #12
 2056 0012 BD46     		mov	sp, r7
 2057 0014 80BC     		pop	{r7}
 2058 0016 7047     		bx	lr
 2059              	.L139:
 2060              		.align	2
 2061              	.L138:
 2062 0018 DC004242 		.word	1111621852
 2063              		.cfi_endproc
 2064              	.LFE135:
 2066              		.section	.text.RCC_RTCCLKCmd,"ax",%progbits
 2067              		.align	2
 2068              		.global	RCC_RTCCLKCmd
 2069              		.thumb
 2070              		.thumb_func
 2072              	RCC_RTCCLKCmd:
 2073              	.LFB136:
1311:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1312:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1313:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the RTC clock.
1314:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function must be used only after the RTC clock source was selected
1315:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using the RCC_RTCCLKConfig function.
1316:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the RTC clock.
1317:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1318:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1319:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1320:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_RTCCLKCmd(FunctionalState NewState)
1321:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2074              		.loc 1 1321 0
 2075              		.cfi_startproc
 2076              		@ args = 0, pretend = 0, frame = 8
 2077              		@ frame_needed = 1, uses_anonymous_args = 0
 2078              		@ link register save eliminated.
 2079 0000 80B4     		push	{r7}
 2080              	.LCFI76:
 2081              		.cfi_def_cfa_offset 4
 2082              		.cfi_offset 7, -4
 2083 0002 83B0     		sub	sp, sp, #12
 2084              	.LCFI77:
 2085              		.cfi_def_cfa_offset 16
 2086 0004 00AF     		add	r7, sp, #0
 2087              	.LCFI78:
 2088              		.cfi_def_cfa_register 7
 2089 0006 0346     		mov	r3, r0
 2090 0008 FB71     		strb	r3, [r7, #7]
1322:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1323:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1324:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1325:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) BDCR_RTCEN_BB = (uint32_t)NewState;
 2091              		.loc 1 1325 0
 2092 000a 044B     		ldr	r3, .L141
 2093 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2094 000e 1A60     		str	r2, [r3, #0]
1326:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2095              		.loc 1 1326 0
 2096 0010 07F10C07 		add	r7, r7, #12
 2097 0014 BD46     		mov	sp, r7
 2098 0016 80BC     		pop	{r7}
 2099 0018 7047     		bx	lr
 2100              	.L142:
 2101 001a 00BF     		.align	2
 2102              	.L141:
 2103 001c 3C044242 		.word	1111622716
 2104              		.cfi_endproc
 2105              	.LFE136:
 2107              		.section	.text.RCC_BackupResetCmd,"ax",%progbits
 2108              		.align	2
 2109              		.global	RCC_BackupResetCmd
 2110              		.thumb
 2111              		.thumb_func
 2113              	RCC_BackupResetCmd:
 2114              	.LFB137:
1327:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1328:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1329:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases the Backup domain reset.
1330:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   This function resets the RTC peripheral (including the backup registers)
1331:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and the RTC clock source selection in RCC_BDCR register.
1332:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the Backup domain reset.
1333:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1334:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1335:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1336:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_BackupResetCmd(FunctionalState NewState)
1337:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2115              		.loc 1 1337 0
 2116              		.cfi_startproc
 2117              		@ args = 0, pretend = 0, frame = 8
 2118              		@ frame_needed = 1, uses_anonymous_args = 0
 2119              		@ link register save eliminated.
 2120 0000 80B4     		push	{r7}
 2121              	.LCFI79:
 2122              		.cfi_def_cfa_offset 4
 2123              		.cfi_offset 7, -4
 2124 0002 83B0     		sub	sp, sp, #12
 2125              	.LCFI80:
 2126              		.cfi_def_cfa_offset 16
 2127 0004 00AF     		add	r7, sp, #0
 2128              	.LCFI81:
 2129              		.cfi_def_cfa_register 7
 2130 0006 0346     		mov	r3, r0
 2131 0008 FB71     		strb	r3, [r7, #7]
1338:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1339:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1340:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1341:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint32_t *) BDCR_BDRST_BB = (uint32_t)NewState;
 2132              		.loc 1 1341 0
 2133 000a 044B     		ldr	r3, .L144
 2134 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2135 000e 1A60     		str	r2, [r3, #0]
1342:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2136              		.loc 1 1342 0
 2137 0010 07F10C07 		add	r7, r7, #12
 2138 0014 BD46     		mov	sp, r7
 2139 0016 80BC     		pop	{r7}
 2140 0018 7047     		bx	lr
 2141              	.L145:
 2142 001a 00BF     		.align	2
 2143              	.L144:
 2144 001c 40044242 		.word	1111622720
 2145              		.cfi_endproc
 2146              	.LFE137:
 2148              		.section	.text.RCC_AHBPeriphClockCmd,"ax",%progbits
 2149              		.align	2
 2150              		.global	RCC_AHBPeriphClockCmd
 2151              		.thumb
 2152              		.thumb_func
 2154              	RCC_AHBPeriphClockCmd:
 2155              	.LFB138:
1343:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1344:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1345:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the AHB peripheral clock.
1346:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1347:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1348:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using it.    
1349:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to gates its clock.
1350:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1351:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOA
1352:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOB
1353:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOC  
1354:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOD
1355:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOE  
1356:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOF
1357:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_TS
1358:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_CRC
1359:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_FLITF (has effect only when the Flash memory is in power down mode)  
1360:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_SRAM
1361:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA2
1362:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_DMA1
1363:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC34
1364:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC12      
1365:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1366:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1367:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1368:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1369:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_AHBPeriphClockCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1370:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2156              		.loc 1 1370 0
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 8
 2159              		@ frame_needed = 1, uses_anonymous_args = 0
 2160              		@ link register save eliminated.
 2161 0000 80B4     		push	{r7}
 2162              	.LCFI82:
 2163              		.cfi_def_cfa_offset 4
 2164              		.cfi_offset 7, -4
 2165 0002 83B0     		sub	sp, sp, #12
 2166              	.LCFI83:
 2167              		.cfi_def_cfa_offset 16
 2168 0004 00AF     		add	r7, sp, #0
 2169              	.LCFI84:
 2170              		.cfi_def_cfa_register 7
 2171 0006 7860     		str	r0, [r7, #4]
 2172 0008 0B46     		mov	r3, r1
 2173 000a FB70     		strb	r3, [r7, #3]
1371:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1372:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_AHB_PERIPH(RCC_AHBPeriph));
1373:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1374:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1375:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2174              		.loc 1 1375 0
 2175 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2176 000e 002B     		cmp	r3, #0
 2177 0010 06D0     		beq	.L147
1376:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1377:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBENR |= RCC_AHBPeriph;
 2178              		.loc 1 1377 0
 2179 0012 0A4B     		ldr	r3, .L149
 2180 0014 094A     		ldr	r2, .L149
 2181 0016 5169     		ldr	r1, [r2, #20]
 2182 0018 7A68     		ldr	r2, [r7, #4]
 2183 001a 0A43     		orrs	r2, r2, r1
 2184 001c 5A61     		str	r2, [r3, #20]
 2185 001e 07E0     		b	.L146
 2186              	.L147:
1378:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1379:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1380:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1381:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBENR &= ~RCC_AHBPeriph;
 2187              		.loc 1 1381 0
 2188 0020 064B     		ldr	r3, .L149
 2189 0022 064A     		ldr	r2, .L149
 2190 0024 5169     		ldr	r1, [r2, #20]
 2191 0026 7A68     		ldr	r2, [r7, #4]
 2192 0028 6FEA0202 		mvn	r2, r2
 2193 002c 0A40     		ands	r2, r2, r1
 2194 002e 5A61     		str	r2, [r3, #20]
 2195              	.L146:
1382:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1383:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2196              		.loc 1 1383 0
 2197 0030 07F10C07 		add	r7, r7, #12
 2198 0034 BD46     		mov	sp, r7
 2199 0036 80BC     		pop	{r7}
 2200 0038 7047     		bx	lr
 2201              	.L150:
 2202 003a 00BF     		.align	2
 2203              	.L149:
 2204 003c 00100240 		.word	1073876992
 2205              		.cfi_endproc
 2206              	.LFE138:
 2208              		.section	.text.RCC_APB2PeriphClockCmd,"ax",%progbits
 2209              		.align	2
 2210              		.global	RCC_APB2PeriphClockCmd
 2211              		.thumb
 2212              		.thumb_func
 2214              	RCC_APB2PeriphClockCmd:
 2215              	.LFB139:
1384:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1385:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1386:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the High Speed APB (APB2) peripheral clock.
1387:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1388:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1389:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using it.
1390:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to gates its clock.
1391:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1392:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SYSCFG
1393:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SPI1
1394:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_USART1
1395:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM15
1396:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM16
1397:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM17
1398:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM1       
1399:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM8
1400:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1401:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1402:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1403:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1404:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1405:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2216              		.loc 1 1405 0
 2217              		.cfi_startproc
 2218              		@ args = 0, pretend = 0, frame = 8
 2219              		@ frame_needed = 1, uses_anonymous_args = 0
 2220              		@ link register save eliminated.
 2221 0000 80B4     		push	{r7}
 2222              	.LCFI85:
 2223              		.cfi_def_cfa_offset 4
 2224              		.cfi_offset 7, -4
 2225 0002 83B0     		sub	sp, sp, #12
 2226              	.LCFI86:
 2227              		.cfi_def_cfa_offset 16
 2228 0004 00AF     		add	r7, sp, #0
 2229              	.LCFI87:
 2230              		.cfi_def_cfa_register 7
 2231 0006 7860     		str	r0, [r7, #4]
 2232 0008 0B46     		mov	r3, r1
 2233 000a FB70     		strb	r3, [r7, #3]
1406:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1407:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1408:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1409:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1410:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2234              		.loc 1 1410 0
 2235 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2236 000e 002B     		cmp	r3, #0
 2237 0010 06D0     		beq	.L152
1411:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1412:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2ENR |= RCC_APB2Periph;
 2238              		.loc 1 1412 0
 2239 0012 0A4B     		ldr	r3, .L154
 2240 0014 094A     		ldr	r2, .L154
 2241 0016 9169     		ldr	r1, [r2, #24]
 2242 0018 7A68     		ldr	r2, [r7, #4]
 2243 001a 0A43     		orrs	r2, r2, r1
 2244 001c 9A61     		str	r2, [r3, #24]
 2245 001e 07E0     		b	.L151
 2246              	.L152:
1413:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1414:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1415:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1416:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2ENR &= ~RCC_APB2Periph;
 2247              		.loc 1 1416 0
 2248 0020 064B     		ldr	r3, .L154
 2249 0022 064A     		ldr	r2, .L154
 2250 0024 9169     		ldr	r1, [r2, #24]
 2251 0026 7A68     		ldr	r2, [r7, #4]
 2252 0028 6FEA0202 		mvn	r2, r2
 2253 002c 0A40     		ands	r2, r2, r1
 2254 002e 9A61     		str	r2, [r3, #24]
 2255              	.L151:
1417:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1418:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2256              		.loc 1 1418 0
 2257 0030 07F10C07 		add	r7, r7, #12
 2258 0034 BD46     		mov	sp, r7
 2259 0036 80BC     		pop	{r7}
 2260 0038 7047     		bx	lr
 2261              	.L155:
 2262 003a 00BF     		.align	2
 2263              	.L154:
 2264 003c 00100240 		.word	1073876992
 2265              		.cfi_endproc
 2266              	.LFE139:
 2268              		.section	.text.RCC_APB1PeriphClockCmd,"ax",%progbits
 2269              		.align	2
 2270              		.global	RCC_APB1PeriphClockCmd
 2271              		.thumb
 2272              		.thumb_func
 2274              	RCC_APB1PeriphClockCmd:
 2275              	.LFB140:
1419:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1420:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1421:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the Low Speed APB (APB1) peripheral clock.
1422:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   After reset, the peripheral clock (used for registers read/write access)
1423:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         is disabled and the application software has to enable this clock before 
1424:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         using it.
1425:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to gates its clock.
1426:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1427:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2
1428:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM3
1429:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM4
1430:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM6
1431:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM7
1432:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_WWDG
1433:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI2
1434:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI3  
1435:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART2
1436:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART3
1437:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART4 
1438:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART5     
1439:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C1
1440:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C2
1441:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USB
1442:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_CAN1
1443:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_PWR
1444:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_DAC
1445:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1446:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1447:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1448:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1449:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1450:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2276              		.loc 1 1450 0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 8
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280              		@ link register save eliminated.
 2281 0000 80B4     		push	{r7}
 2282              	.LCFI88:
 2283              		.cfi_def_cfa_offset 4
 2284              		.cfi_offset 7, -4
 2285 0002 83B0     		sub	sp, sp, #12
 2286              	.LCFI89:
 2287              		.cfi_def_cfa_offset 16
 2288 0004 00AF     		add	r7, sp, #0
 2289              	.LCFI90:
 2290              		.cfi_def_cfa_register 7
 2291 0006 7860     		str	r0, [r7, #4]
 2292 0008 0B46     		mov	r3, r1
 2293 000a FB70     		strb	r3, [r7, #3]
1451:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1452:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1453:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1454:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1455:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2294              		.loc 1 1455 0
 2295 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2296 000e 002B     		cmp	r3, #0
 2297 0010 06D0     		beq	.L157
1456:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1457:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1ENR |= RCC_APB1Periph;
 2298              		.loc 1 1457 0
 2299 0012 0A4B     		ldr	r3, .L159
 2300 0014 094A     		ldr	r2, .L159
 2301 0016 D169     		ldr	r1, [r2, #28]
 2302 0018 7A68     		ldr	r2, [r7, #4]
 2303 001a 0A43     		orrs	r2, r2, r1
 2304 001c DA61     		str	r2, [r3, #28]
 2305 001e 07E0     		b	.L156
 2306              	.L157:
1458:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1459:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1460:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1461:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1ENR &= ~RCC_APB1Periph;
 2307              		.loc 1 1461 0
 2308 0020 064B     		ldr	r3, .L159
 2309 0022 064A     		ldr	r2, .L159
 2310 0024 D169     		ldr	r1, [r2, #28]
 2311 0026 7A68     		ldr	r2, [r7, #4]
 2312 0028 6FEA0202 		mvn	r2, r2
 2313 002c 0A40     		ands	r2, r2, r1
 2314 002e DA61     		str	r2, [r3, #28]
 2315              	.L156:
1462:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1463:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2316              		.loc 1 1463 0
 2317 0030 07F10C07 		add	r7, r7, #12
 2318 0034 BD46     		mov	sp, r7
 2319 0036 80BC     		pop	{r7}
 2320 0038 7047     		bx	lr
 2321              	.L160:
 2322 003a 00BF     		.align	2
 2323              	.L159:
 2324 003c 00100240 		.word	1073876992
 2325              		.cfi_endproc
 2326              	.LFE140:
 2328              		.section	.text.RCC_AHBPeriphResetCmd,"ax",%progbits
 2329              		.align	2
 2330              		.global	RCC_AHBPeriphResetCmd
 2331              		.thumb
 2332              		.thumb_func
 2334              	RCC_AHBPeriphResetCmd:
 2335              	.LFB141:
1464:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1465:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1466:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases AHB peripheral reset.
1467:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_AHBPeriph: specifies the AHB peripheral to reset.
1468:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1469:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOA
1470:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOB
1471:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOC  
1472:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOD
1473:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOE  
1474:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_GPIOF
1475:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_TS
1476:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC34
1477:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_AHBPeriph_ADC12    
1478:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1479:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1480:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1481:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1482:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_AHBPeriphResetCmd(uint32_t RCC_AHBPeriph, FunctionalState NewState)
1483:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2336              		.loc 1 1483 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 8
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341 0000 80B4     		push	{r7}
 2342              	.LCFI91:
 2343              		.cfi_def_cfa_offset 4
 2344              		.cfi_offset 7, -4
 2345 0002 83B0     		sub	sp, sp, #12
 2346              	.LCFI92:
 2347              		.cfi_def_cfa_offset 16
 2348 0004 00AF     		add	r7, sp, #0
 2349              	.LCFI93:
 2350              		.cfi_def_cfa_register 7
 2351 0006 7860     		str	r0, [r7, #4]
 2352 0008 0B46     		mov	r3, r1
 2353 000a FB70     		strb	r3, [r7, #3]
1484:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1485:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_AHB_RST_PERIPH(RCC_AHBPeriph));
1486:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1487:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1488:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2354              		.loc 1 1488 0
 2355 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2356 000e 002B     		cmp	r3, #0
 2357 0010 06D0     		beq	.L162
1489:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1490:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBRSTR |= RCC_AHBPeriph;
 2358              		.loc 1 1490 0
 2359 0012 0A4B     		ldr	r3, .L164
 2360 0014 094A     		ldr	r2, .L164
 2361 0016 916A     		ldr	r1, [r2, #40]
 2362 0018 7A68     		ldr	r2, [r7, #4]
 2363 001a 0A43     		orrs	r2, r2, r1
 2364 001c 9A62     		str	r2, [r3, #40]
 2365 001e 07E0     		b	.L161
 2366              	.L162:
1491:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1492:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1493:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1494:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->AHBRSTR &= ~RCC_AHBPeriph;
 2367              		.loc 1 1494 0
 2368 0020 064B     		ldr	r3, .L164
 2369 0022 064A     		ldr	r2, .L164
 2370 0024 916A     		ldr	r1, [r2, #40]
 2371 0026 7A68     		ldr	r2, [r7, #4]
 2372 0028 6FEA0202 		mvn	r2, r2
 2373 002c 0A40     		ands	r2, r2, r1
 2374 002e 9A62     		str	r2, [r3, #40]
 2375              	.L161:
1495:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1496:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2376              		.loc 1 1496 0
 2377 0030 07F10C07 		add	r7, r7, #12
 2378 0034 BD46     		mov	sp, r7
 2379 0036 80BC     		pop	{r7}
 2380 0038 7047     		bx	lr
 2381              	.L165:
 2382 003a 00BF     		.align	2
 2383              	.L164:
 2384 003c 00100240 		.word	1073876992
 2385              		.cfi_endproc
 2386              	.LFE141:
 2388              		.section	.text.RCC_APB2PeriphResetCmd,"ax",%progbits
 2389              		.align	2
 2390              		.global	RCC_APB2PeriphResetCmd
 2391              		.thumb
 2392              		.thumb_func
 2394              	RCC_APB2PeriphResetCmd:
 2395              	.LFB142:
1497:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1498:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1499:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases High Speed APB (APB2) peripheral reset.
1500:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB2Periph: specifies the APB2 peripheral to reset.
1501:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1502:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SYSCFG
1503:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_SPI1
1504:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_USART1
1505:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM15
1506:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM16
1507:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM17
1508:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM1       
1509:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB2Periph_TIM8  
1510:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral reset.
1511:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1512:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1513:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1514:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB2PeriphResetCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
1515:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2396              		.loc 1 1515 0
 2397              		.cfi_startproc
 2398              		@ args = 0, pretend = 0, frame = 8
 2399              		@ frame_needed = 1, uses_anonymous_args = 0
 2400              		@ link register save eliminated.
 2401 0000 80B4     		push	{r7}
 2402              	.LCFI94:
 2403              		.cfi_def_cfa_offset 4
 2404              		.cfi_offset 7, -4
 2405 0002 83B0     		sub	sp, sp, #12
 2406              	.LCFI95:
 2407              		.cfi_def_cfa_offset 16
 2408 0004 00AF     		add	r7, sp, #0
 2409              	.LCFI96:
 2410              		.cfi_def_cfa_register 7
 2411 0006 7860     		str	r0, [r7, #4]
 2412 0008 0B46     		mov	r3, r1
 2413 000a FB70     		strb	r3, [r7, #3]
1516:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1517:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
1518:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1519:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1520:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2414              		.loc 1 1520 0
 2415 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2416 000e 002B     		cmp	r3, #0
 2417 0010 06D0     		beq	.L167
1521:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1522:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2RSTR |= RCC_APB2Periph;
 2418              		.loc 1 1522 0
 2419 0012 0A4B     		ldr	r3, .L169
 2420 0014 094A     		ldr	r2, .L169
 2421 0016 D168     		ldr	r1, [r2, #12]
 2422 0018 7A68     		ldr	r2, [r7, #4]
 2423 001a 0A43     		orrs	r2, r2, r1
 2424 001c DA60     		str	r2, [r3, #12]
 2425 001e 07E0     		b	.L166
 2426              	.L167:
1523:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1524:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1525:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1526:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB2RSTR &= ~RCC_APB2Periph;
 2427              		.loc 1 1526 0
 2428 0020 064B     		ldr	r3, .L169
 2429 0022 064A     		ldr	r2, .L169
 2430 0024 D168     		ldr	r1, [r2, #12]
 2431 0026 7A68     		ldr	r2, [r7, #4]
 2432 0028 6FEA0202 		mvn	r2, r2
 2433 002c 0A40     		ands	r2, r2, r1
 2434 002e DA60     		str	r2, [r3, #12]
 2435              	.L166:
1527:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1528:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2436              		.loc 1 1528 0
 2437 0030 07F10C07 		add	r7, r7, #12
 2438 0034 BD46     		mov	sp, r7
 2439 0036 80BC     		pop	{r7}
 2440 0038 7047     		bx	lr
 2441              	.L170:
 2442 003a 00BF     		.align	2
 2443              	.L169:
 2444 003c 00100240 		.word	1073876992
 2445              		.cfi_endproc
 2446              	.LFE142:
 2448              		.section	.text.RCC_APB1PeriphResetCmd,"ax",%progbits
 2449              		.align	2
 2450              		.global	RCC_APB1PeriphResetCmd
 2451              		.thumb
 2452              		.thumb_func
 2454              	RCC_APB1PeriphResetCmd:
 2455              	.LFB143:
1529:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1530:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1531:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Forces or releases Low Speed APB (APB1) peripheral reset.
1532:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_APB1Periph: specifies the APB1 peripheral to reset.
1533:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1534:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM2
1535:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM3
1536:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM4
1537:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM6
1538:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_TIM7
1539:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_WWDG
1540:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI2
1541:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_SPI3  
1542:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART2
1543:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USART3
1544:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART4
1545:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_UART5      
1546:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C1
1547:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_I2C2
1548:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_USB
1549:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_CAN1
1550:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_PWR
1551:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_APB1Periph_DAC
1552:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified peripheral clock.
1553:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         This parameter can be: ENABLE or DISABLE.
1554:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1555:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1556:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_APB1PeriphResetCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
1557:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2456              		.loc 1 1557 0
 2457              		.cfi_startproc
 2458              		@ args = 0, pretend = 0, frame = 8
 2459              		@ frame_needed = 1, uses_anonymous_args = 0
 2460              		@ link register save eliminated.
 2461 0000 80B4     		push	{r7}
 2462              	.LCFI97:
 2463              		.cfi_def_cfa_offset 4
 2464              		.cfi_offset 7, -4
 2465 0002 83B0     		sub	sp, sp, #12
 2466              	.LCFI98:
 2467              		.cfi_def_cfa_offset 16
 2468 0004 00AF     		add	r7, sp, #0
 2469              	.LCFI99:
 2470              		.cfi_def_cfa_register 7
 2471 0006 7860     		str	r0, [r7, #4]
 2472 0008 0B46     		mov	r3, r1
 2473 000a FB70     		strb	r3, [r7, #3]
1558:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1559:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
1560:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1561:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1562:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2474              		.loc 1 1562 0
 2475 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2476 000e 002B     		cmp	r3, #0
 2477 0010 06D0     		beq	.L172
1563:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1564:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1RSTR |= RCC_APB1Periph;
 2478              		.loc 1 1564 0
 2479 0012 0A4B     		ldr	r3, .L174
 2480 0014 094A     		ldr	r2, .L174
 2481 0016 1169     		ldr	r1, [r2, #16]
 2482 0018 7A68     		ldr	r2, [r7, #4]
 2483 001a 0A43     		orrs	r2, r2, r1
 2484 001c 1A61     		str	r2, [r3, #16]
 2485 001e 07E0     		b	.L171
 2486              	.L172:
1565:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1566:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1567:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1568:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     RCC->APB1RSTR &= ~RCC_APB1Periph;
 2487              		.loc 1 1568 0
 2488 0020 064B     		ldr	r3, .L174
 2489 0022 064A     		ldr	r2, .L174
 2490 0024 1169     		ldr	r1, [r2, #16]
 2491 0026 7A68     		ldr	r2, [r7, #4]
 2492 0028 6FEA0202 		mvn	r2, r2
 2493 002c 0A40     		ands	r2, r2, r1
 2494 002e 1A61     		str	r2, [r3, #16]
 2495              	.L171:
1569:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1570:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2496              		.loc 1 1570 0
 2497 0030 07F10C07 		add	r7, r7, #12
 2498 0034 BD46     		mov	sp, r7
 2499 0036 80BC     		pop	{r7}
 2500 0038 7047     		bx	lr
 2501              	.L175:
 2502 003a 00BF     		.align	2
 2503              	.L174:
 2504 003c 00100240 		.word	1073876992
 2505              		.cfi_endproc
 2506              	.LFE143:
 2508              		.section	.text.RCC_ITConfig,"ax",%progbits
 2509              		.align	2
 2510              		.global	RCC_ITConfig
 2511              		.thumb
 2512              		.thumb_func
 2514              	RCC_ITConfig:
 2515              	.LFB144:
1571:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1572:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1573:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @}
1574:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1575:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1576:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /** @defgroup RCC_Group4 Interrupts and flags management functions
1577:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *  @brief   Interrupts and flags management functions 
1578:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  *
1579:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @verbatim   
1580:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================
1581:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****             ##### Interrupts and flags management functions #####
1582:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****  ===============================================================================  
1583:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1584:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** @endverbatim
1585:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @{
1586:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1587:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1588:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1589:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Enables or disables the specified RCC interrupts.
1590:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @note   The CSS interrupt doesn't have an enable bit; once the CSS is enabled
1591:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         and if the HSE clock fails, the CSS interrupt occurs and an NMI is
1592:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         automatically generated. The NMI will be executed indefinitely, and 
1593:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         since NMI has higher priority than any other IRQ (and main program)
1594:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         the application will be stacked in the NMI ISR unless the CSS interrupt
1595:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         pending bit is cleared.
1596:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt sources to be enabled or disabled.
1597:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1598:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1599:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1600:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1601:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1602:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1603:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  NewState: new state of the specified RCC interrupts.
1604:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be: ENABLE or DISABLE.
1605:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1606:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1607:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ITConfig(uint8_t RCC_IT, FunctionalState NewState)
1608:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2516              		.loc 1 1608 0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 8
 2519              		@ frame_needed = 1, uses_anonymous_args = 0
 2520              		@ link register save eliminated.
 2521 0000 80B4     		push	{r7}
 2522              	.LCFI100:
 2523              		.cfi_def_cfa_offset 4
 2524              		.cfi_offset 7, -4
 2525 0002 83B0     		sub	sp, sp, #12
 2526              	.LCFI101:
 2527              		.cfi_def_cfa_offset 16
 2528 0004 00AF     		add	r7, sp, #0
 2529              	.LCFI102:
 2530              		.cfi_def_cfa_register 7
 2531 0006 0246     		mov	r2, r0
 2532 0008 0B46     		mov	r3, r1
 2533 000a FA71     		strb	r2, [r7, #7]
 2534 000c BB71     		strb	r3, [r7, #6]
1609:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1610:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_IT(RCC_IT));
1611:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_FUNCTIONAL_STATE(NewState));
1612:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1613:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if (NewState != DISABLE)
 2535              		.loc 1 1613 0
 2536 000e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2537 0010 002B     		cmp	r3, #0
 2538 0012 08D0     		beq	.L177
1614:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1615:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* Perform Byte access to RCC_CIR[13:8] bits to enable the selected interrupts */
1616:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS |= RCC_IT;
 2539              		.loc 1 1616 0
 2540 0014 0C4B     		ldr	r3, .L179
 2541 0016 0C4A     		ldr	r2, .L179
 2542 0018 1278     		ldrb	r2, [r2, #0]
 2543 001a D1B2     		uxtb	r1, r2
 2544 001c FA79     		ldrb	r2, [r7, #7]
 2545 001e 0A43     		orrs	r2, r2, r1
 2546 0020 D2B2     		uxtb	r2, r2
 2547 0022 1A70     		strb	r2, [r3, #0]
 2548 0024 0AE0     		b	.L176
 2549              	.L177:
1617:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1618:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1619:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1620:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     /* Perform Byte access to RCC_CIR[13:8] bits to disable the selected interrupts */
1621:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     *(__IO uint8_t *) CIR_BYTE2_ADDRESS &= (uint8_t)~RCC_IT;
 2550              		.loc 1 1621 0
 2551 0026 084B     		ldr	r3, .L179
 2552 0028 074A     		ldr	r2, .L179
 2553 002a 1278     		ldrb	r2, [r2, #0]
 2554 002c D1B2     		uxtb	r1, r2
 2555 002e FA79     		ldrb	r2, [r7, #7]
 2556 0030 6FEA0202 		mvn	r2, r2
 2557 0034 D2B2     		uxtb	r2, r2
 2558 0036 0A40     		ands	r2, r2, r1
 2559 0038 D2B2     		uxtb	r2, r2
 2560 003a 1A70     		strb	r2, [r3, #0]
 2561              	.L176:
1622:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1623:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2562              		.loc 1 1623 0
 2563 003c 07F10C07 		add	r7, r7, #12
 2564 0040 BD46     		mov	sp, r7
 2565 0042 80BC     		pop	{r7}
 2566 0044 7047     		bx	lr
 2567              	.L180:
 2568 0046 00BF     		.align	2
 2569              	.L179:
 2570 0048 09100240 		.word	1073877001
 2571              		.cfi_endproc
 2572              	.LFE144:
 2574              		.section	.text.RCC_GetFlagStatus,"ax",%progbits
 2575              		.align	2
 2576              		.global	RCC_GetFlagStatus
 2577              		.thumb
 2578              		.thumb_func
 2580              	RCC_GetFlagStatus:
 2581              	.LFB145:
1624:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1625:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1626:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Checks whether the specified RCC flag is set or not.
1627:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_FLAG: specifies the flag to check.
1628:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1629:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_HSIRDY: HSI oscillator clock ready  
1630:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_HSERDY: HSE oscillator clock ready
1631:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_PLLRDY: PLL clock ready
1632:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_MCOF: MCO Flag  
1633:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_LSERDY: LSE oscillator clock ready
1634:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_LSIRDY: LSI oscillator clock ready
1635:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_OBLRST: Option Byte Loader (OBL) reset 
1636:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_PINRST: Pin reset
1637:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_PORRST: POR/PDR reset
1638:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_SFTRST: Software reset
1639:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_IWDGRST: Independent Watchdog reset
1640:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_WWDGRST: Window Watchdog reset
1641:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_FLAG_LPWRRST: Low Power reset
1642:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval The new state of RCC_FLAG (SET or RESET).
1643:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1644:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** FlagStatus RCC_GetFlagStatus(uint8_t RCC_FLAG)
1645:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2582              		.loc 1 1645 0
 2583              		.cfi_startproc
 2584              		@ args = 0, pretend = 0, frame = 24
 2585              		@ frame_needed = 1, uses_anonymous_args = 0
 2586              		@ link register save eliminated.
 2587 0000 80B4     		push	{r7}
 2588              	.LCFI103:
 2589              		.cfi_def_cfa_offset 4
 2590              		.cfi_offset 7, -4
 2591 0002 87B0     		sub	sp, sp, #28
 2592              	.LCFI104:
 2593              		.cfi_def_cfa_offset 32
 2594 0004 00AF     		add	r7, sp, #0
 2595              	.LCFI105:
 2596              		.cfi_def_cfa_register 7
 2597 0006 0346     		mov	r3, r0
 2598 0008 FB71     		strb	r3, [r7, #7]
1646:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t tmp = 0;
 2599              		.loc 1 1646 0
 2600 000a 4FF00003 		mov	r3, #0
 2601 000e FB60     		str	r3, [r7, #12]
1647:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   uint32_t statusreg = 0;
 2602              		.loc 1 1647 0
 2603 0010 4FF00003 		mov	r3, #0
 2604 0014 7B61     		str	r3, [r7, #20]
1648:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   FlagStatus bitstatus = RESET;
 2605              		.loc 1 1648 0
 2606 0016 4FF00003 		mov	r3, #0
 2607 001a FB74     		strb	r3, [r7, #19]
1649:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1650:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1651:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_FLAG(RCC_FLAG));
1652:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1653:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get the RCC register index */
1654:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC_FLAG >> 5;
 2608              		.loc 1 1654 0
 2609 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2610 001e 4FEA5313 		lsr	r3, r3, #5
 2611 0022 DBB2     		uxtb	r3, r3
 2612 0024 FB60     		str	r3, [r7, #12]
1655:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1656:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****    if (tmp == 0)               /* The flag to check is in CR register */
 2613              		.loc 1 1656 0
 2614 0026 FB68     		ldr	r3, [r7, #12]
 2615 0028 002B     		cmp	r3, #0
 2616 002a 03D1     		bne	.L182
1657:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1658:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->CR;
 2617              		.loc 1 1658 0
 2618 002c 174B     		ldr	r3, .L189
 2619 002e 1B68     		ldr	r3, [r3, #0]
 2620 0030 7B61     		str	r3, [r7, #20]
 2621 0032 10E0     		b	.L183
 2622              	.L182:
1659:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1660:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if (tmp == 1)          /* The flag to check is in BDCR register */
 2623              		.loc 1 1660 0
 2624 0034 FB68     		ldr	r3, [r7, #12]
 2625 0036 012B     		cmp	r3, #1
 2626 0038 03D1     		bne	.L184
1661:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1662:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->BDCR;
 2627              		.loc 1 1662 0
 2628 003a 144B     		ldr	r3, .L189
 2629 003c 1B6A     		ldr	r3, [r3, #32]
 2630 003e 7B61     		str	r3, [r7, #20]
 2631 0040 09E0     		b	.L183
 2632              	.L184:
1663:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1664:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else if (tmp == 4)          /* The flag to check is in CFGR register */
 2633              		.loc 1 1664 0
 2634 0042 FB68     		ldr	r3, [r7, #12]
 2635 0044 042B     		cmp	r3, #4
 2636 0046 03D1     		bne	.L185
1665:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1666:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->CFGR;
 2637              		.loc 1 1666 0
 2638 0048 104B     		ldr	r3, .L189
 2639 004a 5B68     		ldr	r3, [r3, #4]
 2640 004c 7B61     		str	r3, [r7, #20]
 2641 004e 02E0     		b	.L183
 2642              	.L185:
1667:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1668:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else                       /* The flag to check is in CSR register */
1669:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1670:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     statusreg = RCC->CSR;
 2643              		.loc 1 1670 0
 2644 0050 0E4B     		ldr	r3, .L189
 2645 0052 5B6A     		ldr	r3, [r3, #36]
 2646 0054 7B61     		str	r3, [r7, #20]
 2647              	.L183:
1671:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1672:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1673:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Get the flag position */
1674:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   tmp = RCC_FLAG & FLAG_MASK;
 2648              		.loc 1 1674 0
 2649 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2650 0058 03F01F03 		and	r3, r3, #31
 2651 005c FB60     		str	r3, [r7, #12]
1675:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1676:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((statusreg & ((uint32_t)1 << tmp)) != (uint32_t)RESET)
 2652              		.loc 1 1676 0
 2653 005e FB68     		ldr	r3, [r7, #12]
 2654 0060 7A69     		ldr	r2, [r7, #20]
 2655 0062 22FA03F3 		lsr	r3, r2, r3
 2656 0066 03F00103 		and	r3, r3, #1
 2657 006a 002B     		cmp	r3, #0
 2658 006c 03D0     		beq	.L186
1677:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1678:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = SET;
 2659              		.loc 1 1678 0
 2660 006e 4FF00103 		mov	r3, #1
 2661 0072 FB74     		strb	r3, [r7, #19]
 2662 0074 02E0     		b	.L187
 2663              	.L186:
1679:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1680:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1681:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1682:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = RESET;
 2664              		.loc 1 1682 0
 2665 0076 4FF00003 		mov	r3, #0
 2666 007a FB74     		strb	r3, [r7, #19]
 2667              	.L187:
1683:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1684:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Return the flag status */
1685:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return bitstatus;
 2668              		.loc 1 1685 0
 2669 007c FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1686:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2670              		.loc 1 1686 0
 2671 007e 1846     		mov	r0, r3
 2672 0080 07F11C07 		add	r7, r7, #28
 2673 0084 BD46     		mov	sp, r7
 2674 0086 80BC     		pop	{r7}
 2675 0088 7047     		bx	lr
 2676              	.L190:
 2677 008a 00BF     		.align	2
 2678              	.L189:
 2679 008c 00100240 		.word	1073876992
 2680              		.cfi_endproc
 2681              	.LFE145:
 2683              		.section	.text.RCC_ClearFlag,"ax",%progbits
 2684              		.align	2
 2685              		.global	RCC_ClearFlag
 2686              		.thumb
 2687              		.thumb_func
 2689              	RCC_ClearFlag:
 2690              	.LFB146:
1687:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1688:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1689:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Clears the RCC reset flags.
1690:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         The reset flags are: RCC_FLAG_OBLRST, RCC_FLAG_PINRST, RCC_FLAG_PORRST, 
1691:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *         RCC_FLAG_SFTRST, RCC_FLAG_IWDGRST, RCC_FLAG_WWDGRST, RCC_FLAG_LPWRRST.
1692:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  None
1693:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1694:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1695:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ClearFlag(void)
1696:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2691              		.loc 1 1696 0
 2692              		.cfi_startproc
 2693              		@ args = 0, pretend = 0, frame = 0
 2694              		@ frame_needed = 1, uses_anonymous_args = 0
 2695              		@ link register save eliminated.
 2696 0000 80B4     		push	{r7}
 2697              	.LCFI106:
 2698              		.cfi_def_cfa_offset 4
 2699              		.cfi_offset 7, -4
 2700 0002 00AF     		add	r7, sp, #0
 2701              	.LCFI107:
 2702              		.cfi_def_cfa_register 7
1697:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Set RMVF bit to clear the reset flags */
1698:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   RCC->CSR |= RCC_CSR_RMVF;
 2703              		.loc 1 1698 0
 2704 0004 044B     		ldr	r3, .L192
 2705 0006 044A     		ldr	r2, .L192
 2706 0008 526A     		ldr	r2, [r2, #36]
 2707 000a 42F08072 		orr	r2, r2, #16777216
 2708 000e 5A62     		str	r2, [r3, #36]
1699:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2709              		.loc 1 1699 0
 2710 0010 BD46     		mov	sp, r7
 2711 0012 80BC     		pop	{r7}
 2712 0014 7047     		bx	lr
 2713              	.L193:
 2714 0016 00BF     		.align	2
 2715              	.L192:
 2716 0018 00100240 		.word	1073876992
 2717              		.cfi_endproc
 2718              	.LFE146:
 2720              		.section	.text.RCC_GetITStatus,"ax",%progbits
 2721              		.align	2
 2722              		.global	RCC_GetITStatus
 2723              		.thumb
 2724              		.thumb_func
 2726              	RCC_GetITStatus:
 2727              	.LFB147:
1700:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1701:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1702:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Checks whether the specified RCC interrupt has occurred or not.
1703:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_IT: specifies the RCC interrupt source to check.
1704:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be one of the following values:
1705:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1706:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1707:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1708:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1709:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1710:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1711:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval The new state of RCC_IT (SET or RESET).
1712:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1713:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** ITStatus RCC_GetITStatus(uint8_t RCC_IT)
1714:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2728              		.loc 1 1714 0
 2729              		.cfi_startproc
 2730              		@ args = 0, pretend = 0, frame = 16
 2731              		@ frame_needed = 1, uses_anonymous_args = 0
 2732              		@ link register save eliminated.
 2733 0000 80B4     		push	{r7}
 2734              	.LCFI108:
 2735              		.cfi_def_cfa_offset 4
 2736              		.cfi_offset 7, -4
 2737 0002 85B0     		sub	sp, sp, #20
 2738              	.LCFI109:
 2739              		.cfi_def_cfa_offset 24
 2740 0004 00AF     		add	r7, sp, #0
 2741              	.LCFI110:
 2742              		.cfi_def_cfa_register 7
 2743 0006 0346     		mov	r3, r0
 2744 0008 FB71     		strb	r3, [r7, #7]
1715:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   ITStatus bitstatus = RESET;
 2745              		.loc 1 1715 0
 2746 000a 4FF00003 		mov	r3, #0
 2747 000e FB73     		strb	r3, [r7, #15]
1716:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1717:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1718:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_GET_IT(RCC_IT));
1719:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1720:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the status of the specified RCC interrupt */
1721:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   if ((RCC->CIR & RCC_IT) != (uint32_t)RESET)
 2748              		.loc 1 1721 0
 2749 0010 094B     		ldr	r3, .L198
 2750 0012 9A68     		ldr	r2, [r3, #8]
 2751 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2752 0016 1340     		ands	r3, r3, r2
 2753 0018 002B     		cmp	r3, #0
 2754 001a 03D0     		beq	.L195
1722:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1723:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = SET;
 2755              		.loc 1 1723 0
 2756 001c 4FF00103 		mov	r3, #1
 2757 0020 FB73     		strb	r3, [r7, #15]
 2758 0022 02E0     		b	.L196
 2759              	.L195:
1724:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1725:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   else
1726:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   {
1727:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****     bitstatus = RESET;
 2760              		.loc 1 1727 0
 2761 0024 4FF00003 		mov	r3, #0
 2762 0028 FB73     		strb	r3, [r7, #15]
 2763              	.L196:
1728:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   }
1729:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Return the RCC_IT status */
1730:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   return  bitstatus;
 2764              		.loc 1 1730 0
 2765 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1731:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2766              		.loc 1 1731 0
 2767 002c 1846     		mov	r0, r3
 2768 002e 07F11407 		add	r7, r7, #20
 2769 0032 BD46     		mov	sp, r7
 2770 0034 80BC     		pop	{r7}
 2771 0036 7047     		bx	lr
 2772              	.L199:
 2773              		.align	2
 2774              	.L198:
 2775 0038 00100240 		.word	1073876992
 2776              		.cfi_endproc
 2777              	.LFE147:
 2779              		.section	.text.RCC_ClearITPendingBit,"ax",%progbits
 2780              		.align	2
 2781              		.global	RCC_ClearITPendingBit
 2782              		.thumb
 2783              		.thumb_func
 2785              	RCC_ClearITPendingBit:
 2786              	.LFB148:
1732:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** 
1733:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** /**
1734:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @brief  Clears the RCC's interrupt pending bits.
1735:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @param  RCC_IT: specifies the interrupt pending bit to clear.
1736:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *   This parameter can be any combination of the following values:
1737:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSIRDY: LSI ready interrupt
1738:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_LSERDY: LSE ready interrupt
1739:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSIRDY: HSI ready interrupt
1740:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_HSERDY: HSE ready interrupt
1741:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_PLLRDY: PLL ready interrupt
1742:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *     @arg RCC_IT_CSS: Clock Security System interrupt
1743:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   * @retval None
1744:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   */
1745:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** void RCC_ClearITPendingBit(uint8_t RCC_IT)
1746:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** {
 2787              		.loc 1 1746 0
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 8
 2790              		@ frame_needed = 1, uses_anonymous_args = 0
 2791              		@ link register save eliminated.
 2792 0000 80B4     		push	{r7}
 2793              	.LCFI111:
 2794              		.cfi_def_cfa_offset 4
 2795              		.cfi_offset 7, -4
 2796 0002 83B0     		sub	sp, sp, #12
 2797              	.LCFI112:
 2798              		.cfi_def_cfa_offset 16
 2799 0004 00AF     		add	r7, sp, #0
 2800              	.LCFI113:
 2801              		.cfi_def_cfa_register 7
 2802 0006 0346     		mov	r3, r0
 2803 0008 FB71     		strb	r3, [r7, #7]
1747:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Check the parameters */
1748:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   //assert_param(IS_RCC_CLEAR_IT(RCC_IT));
1749:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   
1750:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   /* Perform Byte access to RCC_CIR[23:16] bits to clear the selected interrupt
1751:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****      pending bits */
1752:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c ****   *(__IO uint8_t *) CIR_BYTE3_ADDRESS = RCC_IT;
 2804              		.loc 1 1752 0
 2805 000a 044B     		ldr	r3, .L201
 2806 000c FA79     		ldrb	r2, [r7, #7]
 2807 000e 1A70     		strb	r2, [r3, #0]
1753:libs/STM32F30x_StdPeriph_Driver/src/stm32f30x_rcc.c **** }
 2808              		.loc 1 1753 0
 2809 0010 07F10C07 		add	r7, r7, #12
 2810 0014 BD46     		mov	sp, r7
 2811 0016 80BC     		pop	{r7}
 2812 0018 7047     		bx	lr
 2813              	.L202:
 2814 001a 00BF     		.align	2
 2815              	.L201:
 2816 001c 0A100240 		.word	1073877002
 2817              		.cfi_endproc
 2818              	.LFE148:
 2820              		.text
 2821              	.Letext0:
 2822              		.file 2 "/home/chaitannya/CodeSourcery/bin/../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-none-eab
 2823              		.file 3 "inc/stm32f30x.h"
 2824              		.file 4 "libs/STM32F30x_StdPeriph_Driver/inc/stm32f30x_rcc.h"
 2825              		.file 5 "inc/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 stm32f30x_rcc.c
     /tmp/ccvJu8bH.s:20     .data.APBAHBPrescTable:00000000 $d
     /tmp/ccvJu8bH.s:23     .data.APBAHBPrescTable:00000000 APBAHBPrescTable
     /tmp/ccvJu8bH.s:41     .data.ADCPrescTable:00000000 $d
     /tmp/ccvJu8bH.s:44     .data.ADCPrescTable:00000000 ADCPrescTable
     /tmp/ccvJu8bH.s:59     .text.RCC_DeInit:00000000 $t
     /tmp/ccvJu8bH.s:64     .text.RCC_DeInit:00000000 RCC_DeInit
     /tmp/ccvJu8bH.s:136    .text.RCC_DeInit:00000070 $d
     /tmp/ccvJu8bH.s:143    .text.RCC_HSEConfig:00000000 $t
     /tmp/ccvJu8bH.s:148    .text.RCC_HSEConfig:00000000 RCC_HSEConfig
     /tmp/ccvJu8bH.s:183    .text.RCC_HSEConfig:00000024 $d
     /tmp/ccvJu8bH.s:188    .text.RCC_WaitForHSEStartUp:00000000 $t
     /tmp/ccvJu8bH.s:193    .text.RCC_WaitForHSEStartUp:00000000 RCC_WaitForHSEStartUp
     /tmp/ccvJu8bH.s:2580   .text.RCC_GetFlagStatus:00000000 RCC_GetFlagStatus
     /tmp/ccvJu8bH.s:263    .text.RCC_AdjustHSICalibrationValue:00000000 $t
     /tmp/ccvJu8bH.s:268    .text.RCC_AdjustHSICalibrationValue:00000000 RCC_AdjustHSICalibrationValue
     /tmp/ccvJu8bH.s:316    .text.RCC_AdjustHSICalibrationValue:0000003c $d
     /tmp/ccvJu8bH.s:321    .text.RCC_HSICmd:00000000 $t
     /tmp/ccvJu8bH.s:326    .text.RCC_HSICmd:00000000 RCC_HSICmd
     /tmp/ccvJu8bH.s:357    .text.RCC_HSICmd:0000001c $d
     /tmp/ccvJu8bH.s:362    .text.RCC_LSEConfig:00000000 $t
     /tmp/ccvJu8bH.s:367    .text.RCC_LSEConfig:00000000 RCC_LSEConfig
     /tmp/ccvJu8bH.s:412    .text.RCC_LSEConfig:00000038 $d
     /tmp/ccvJu8bH.s:417    .text.RCC_LSEDriveConfig:00000000 $t
     /tmp/ccvJu8bH.s:422    .text.RCC_LSEDriveConfig:00000000 RCC_LSEDriveConfig
     /tmp/ccvJu8bH.s:461    .text.RCC_LSEDriveConfig:0000002c $d
     /tmp/ccvJu8bH.s:466    .text.RCC_LSICmd:00000000 $t
     /tmp/ccvJu8bH.s:471    .text.RCC_LSICmd:00000000 RCC_LSICmd
     /tmp/ccvJu8bH.s:502    .text.RCC_LSICmd:0000001c $d
     /tmp/ccvJu8bH.s:507    .text.RCC_PLLConfig:00000000 $t
     /tmp/ccvJu8bH.s:512    .text.RCC_PLLConfig:00000000 RCC_PLLConfig
     /tmp/ccvJu8bH.s:554    .text.RCC_PLLConfig:00000030 $d
     /tmp/ccvJu8bH.s:559    .text.RCC_PLLCmd:00000000 $t
     /tmp/ccvJu8bH.s:564    .text.RCC_PLLCmd:00000000 RCC_PLLCmd
     /tmp/ccvJu8bH.s:595    .text.RCC_PLLCmd:0000001c $d
     /tmp/ccvJu8bH.s:600    .text.RCC_PREDIV1Config:00000000 $t
     /tmp/ccvJu8bH.s:605    .text.RCC_PREDIV1Config:00000000 RCC_PREDIV1Config
     /tmp/ccvJu8bH.s:651    .text.RCC_PREDIV1Config:00000034 $d
     /tmp/ccvJu8bH.s:656    .text.RCC_ClockSecuritySystemCmd:00000000 $t
     /tmp/ccvJu8bH.s:661    .text.RCC_ClockSecuritySystemCmd:00000000 RCC_ClockSecuritySystemCmd
     /tmp/ccvJu8bH.s:692    .text.RCC_ClockSecuritySystemCmd:0000001c $d
     /tmp/ccvJu8bH.s:697    .text.RCC_MCOConfig:00000000 $t
     /tmp/ccvJu8bH.s:702    .text.RCC_MCOConfig:00000000 RCC_MCOConfig
     /tmp/ccvJu8bH.s:733    .text.RCC_MCOConfig:0000001c $d
     /tmp/ccvJu8bH.s:738    .text.RCC_SYSCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:743    .text.RCC_SYSCLKConfig:00000000 RCC_SYSCLKConfig
     /tmp/ccvJu8bH.s:789    .text.RCC_SYSCLKConfig:00000034 $d
     /tmp/ccvJu8bH.s:794    .text.RCC_GetSYSCLKSource:00000000 $t
     /tmp/ccvJu8bH.s:799    .text.RCC_GetSYSCLKSource:00000000 RCC_GetSYSCLKSource
     /tmp/ccvJu8bH.s:827    .text.RCC_GetSYSCLKSource:00000018 $d
     /tmp/ccvJu8bH.s:832    .text.RCC_HCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:837    .text.RCC_HCLKConfig:00000000 RCC_HCLKConfig
     /tmp/ccvJu8bH.s:883    .text.RCC_HCLKConfig:00000034 $d
     /tmp/ccvJu8bH.s:888    .text.RCC_PCLK1Config:00000000 $t
     /tmp/ccvJu8bH.s:893    .text.RCC_PCLK1Config:00000000 RCC_PCLK1Config
     /tmp/ccvJu8bH.s:939    .text.RCC_PCLK1Config:00000034 $d
     /tmp/ccvJu8bH.s:944    .text.RCC_PCLK2Config:00000000 $t
     /tmp/ccvJu8bH.s:949    .text.RCC_PCLK2Config:00000000 RCC_PCLK2Config
     /tmp/ccvJu8bH.s:996    .text.RCC_PCLK2Config:00000038 $d
     /tmp/ccvJu8bH.s:1001   .text.RCC_GetClocksFreq:00000000 $t
     /tmp/ccvJu8bH.s:1006   .text.RCC_GetClocksFreq:00000000 RCC_GetClocksFreq
     /tmp/ccvJu8bH.s:1385   .text.RCC_GetClocksFreq:00000288 $d
     /tmp/ccvJu8bH.s:1392   .text.RCC_GetClocksFreq:0000029c $t
     /tmp/ccvJu8bH.s:1618   .text.RCC_GetClocksFreq:00000438 $d
     /tmp/ccvJu8bH.s:1624   .text.RCC_ADCCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:1629   .text.RCC_ADCCLKConfig:00000000 RCC_ADCCLKConfig
     /tmp/ccvJu8bH.s:1688   .text.RCC_ADCCLKConfig:0000004c $d
     /tmp/ccvJu8bH.s:1693   .text.RCC_I2CCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:1698   .text.RCC_I2CCLKConfig:00000000 RCC_I2CCLKConfig
     /tmp/ccvJu8bH.s:1757   .text.RCC_I2CCLKConfig:0000004c $d
     /tmp/ccvJu8bH.s:1762   .text.RCC_TIMCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:1767   .text.RCC_TIMCLKConfig:00000000 RCC_TIMCLKConfig
     /tmp/ccvJu8bH.s:1826   .text.RCC_TIMCLKConfig:0000004c $d
     /tmp/ccvJu8bH.s:1831   .text.RCC_USARTCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:1836   .text.RCC_USARTCLKConfig:00000000 RCC_USARTCLKConfig
     /tmp/ccvJu8bH.s:1870   .text.RCC_USARTCLKConfig:00000028 $d
     /tmp/ccvJu8bH.s:1877   .text.RCC_USARTCLKConfig:0000003c $t
     /tmp/ccvJu8bH.s:1939   .text.RCC_USARTCLKConfig:0000009c $d
     /tmp/ccvJu8bH.s:1944   .text.RCC_USBCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:1949   .text.RCC_USBCLKConfig:00000000 RCC_USBCLKConfig
     /tmp/ccvJu8bH.s:1979   .text.RCC_USBCLKConfig:00000018 $d
     /tmp/ccvJu8bH.s:1984   .text.RCC_RTCCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:1989   .text.RCC_RTCCLKConfig:00000000 RCC_RTCCLKConfig
     /tmp/ccvJu8bH.s:2022   .text.RCC_RTCCLKConfig:00000020 $d
     /tmp/ccvJu8bH.s:2027   .text.RCC_I2SCLKConfig:00000000 $t
     /tmp/ccvJu8bH.s:2032   .text.RCC_I2SCLKConfig:00000000 RCC_I2SCLKConfig
     /tmp/ccvJu8bH.s:2062   .text.RCC_I2SCLKConfig:00000018 $d
     /tmp/ccvJu8bH.s:2067   .text.RCC_RTCCLKCmd:00000000 $t
     /tmp/ccvJu8bH.s:2072   .text.RCC_RTCCLKCmd:00000000 RCC_RTCCLKCmd
     /tmp/ccvJu8bH.s:2103   .text.RCC_RTCCLKCmd:0000001c $d
     /tmp/ccvJu8bH.s:2108   .text.RCC_BackupResetCmd:00000000 $t
     /tmp/ccvJu8bH.s:2113   .text.RCC_BackupResetCmd:00000000 RCC_BackupResetCmd
     /tmp/ccvJu8bH.s:2144   .text.RCC_BackupResetCmd:0000001c $d
     /tmp/ccvJu8bH.s:2149   .text.RCC_AHBPeriphClockCmd:00000000 $t
     /tmp/ccvJu8bH.s:2154   .text.RCC_AHBPeriphClockCmd:00000000 RCC_AHBPeriphClockCmd
     /tmp/ccvJu8bH.s:2204   .text.RCC_AHBPeriphClockCmd:0000003c $d
     /tmp/ccvJu8bH.s:2209   .text.RCC_APB2PeriphClockCmd:00000000 $t
     /tmp/ccvJu8bH.s:2214   .text.RCC_APB2PeriphClockCmd:00000000 RCC_APB2PeriphClockCmd
     /tmp/ccvJu8bH.s:2264   .text.RCC_APB2PeriphClockCmd:0000003c $d
     /tmp/ccvJu8bH.s:2269   .text.RCC_APB1PeriphClockCmd:00000000 $t
     /tmp/ccvJu8bH.s:2274   .text.RCC_APB1PeriphClockCmd:00000000 RCC_APB1PeriphClockCmd
     /tmp/ccvJu8bH.s:2324   .text.RCC_APB1PeriphClockCmd:0000003c $d
     /tmp/ccvJu8bH.s:2329   .text.RCC_AHBPeriphResetCmd:00000000 $t
     /tmp/ccvJu8bH.s:2334   .text.RCC_AHBPeriphResetCmd:00000000 RCC_AHBPeriphResetCmd
     /tmp/ccvJu8bH.s:2384   .text.RCC_AHBPeriphResetCmd:0000003c $d
     /tmp/ccvJu8bH.s:2389   .text.RCC_APB2PeriphResetCmd:00000000 $t
     /tmp/ccvJu8bH.s:2394   .text.RCC_APB2PeriphResetCmd:00000000 RCC_APB2PeriphResetCmd
     /tmp/ccvJu8bH.s:2444   .text.RCC_APB2PeriphResetCmd:0000003c $d
     /tmp/ccvJu8bH.s:2449   .text.RCC_APB1PeriphResetCmd:00000000 $t
     /tmp/ccvJu8bH.s:2454   .text.RCC_APB1PeriphResetCmd:00000000 RCC_APB1PeriphResetCmd
     /tmp/ccvJu8bH.s:2504   .text.RCC_APB1PeriphResetCmd:0000003c $d
     /tmp/ccvJu8bH.s:2509   .text.RCC_ITConfig:00000000 $t
     /tmp/ccvJu8bH.s:2514   .text.RCC_ITConfig:00000000 RCC_ITConfig
     /tmp/ccvJu8bH.s:2570   .text.RCC_ITConfig:00000048 $d
     /tmp/ccvJu8bH.s:2575   .text.RCC_GetFlagStatus:00000000 $t
     /tmp/ccvJu8bH.s:2679   .text.RCC_GetFlagStatus:0000008c $d
     /tmp/ccvJu8bH.s:2684   .text.RCC_ClearFlag:00000000 $t
     /tmp/ccvJu8bH.s:2689   .text.RCC_ClearFlag:00000000 RCC_ClearFlag
     /tmp/ccvJu8bH.s:2716   .text.RCC_ClearFlag:00000018 $d
     /tmp/ccvJu8bH.s:2721   .text.RCC_GetITStatus:00000000 $t
     /tmp/ccvJu8bH.s:2726   .text.RCC_GetITStatus:00000000 RCC_GetITStatus
     /tmp/ccvJu8bH.s:2775   .text.RCC_GetITStatus:00000038 $d
     /tmp/ccvJu8bH.s:2780   .text.RCC_ClearITPendingBit:00000000 $t
     /tmp/ccvJu8bH.s:2785   .text.RCC_ClearITPendingBit:00000000 RCC_ClearITPendingBit
     /tmp/ccvJu8bH.s:2816   .text.RCC_ClearITPendingBit:0000001c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
